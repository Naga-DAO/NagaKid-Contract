{
	"id": "62a08c081d8f7ce75b3aac8b1d33b256",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC721A/MintNagaKids.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"./INagaKid.sol\";\r\n\r\ncontract MintNagaKids is AccessControl, ReentrancyGuard {\r\n\r\n    bytes32 public constant WHITELIST_MINT_ROUND = keccak256(\"WHITELIST_MINT_ROUND\"); // 0x68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba\r\n    bytes32 public constant NAGA_HOLDER_MINT_ROUND = keccak256(\"NAGA_HOLDER_MINT_ROUND\"); // 0xb3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db3\r\n    bytes32 public constant SPECIAL_MINT_ROUND = keccak256(\"SPECIAL_MINT_ROUND\"); // 0x5c8c0ce107274ad0569bd760c3d2406c1ed72c697935f3f965bd096c5cdedee4\r\n    bytes32 public constant DEFAULT = 0x0000000000000000000000000000000000000000000000000000000000000000;\r\n    \r\n    bytes32 public constant WITHDRAW_ROLE = keccak256(\"WITHDRAW_ROLE\");\r\n\r\n    INagaKid public nagaKidContract;\r\n    bytes32 public currentMintRound;\r\n    bytes32 public merkleRoot;\r\n\r\n    mapping(address => mapping(bytes32 => bool)) internal _isUserMinted;\r\n    mapping(address => mapping(bytes32 => uint256)) internal _userMintedAmount;\r\n\r\n    // Events\r\n    event Minted(address indexed user, uint256 amount, uint256 timestamp);\r\n    event NagaKidContractChanged(address nagaKidBefore, address nagaKidAfter);\r\n    event MerkleRootChanged(bytes32 merkleRootBefore, bytes32 merkleRootAfter);\r\n    event RoundChanged(bytes32 roundBefore, bytes32 roundAfter);\r\n    event Withdraw(address to, uint256 balanceOFContract , uint256 timestamp);\r\n    event WithdrawCurrency(address to,address currency,uint256 balanceOfContract,uint256 timestamp);\r\n    event WithdrawNFT(address to,address NFT,uint256 tokenId, uint256 timestamp);\r\n\r\n    constructor(INagaKid _nagaKidContract, bytes32 _merkleRoot) {\r\n\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(WITHDRAW_ROLE, msg.sender);\r\n        setNagaKidContract(_nagaKidContract);\r\n        setMerkleRoot(_merkleRoot);\r\n\r\n    }\r\n\r\n    function setNagaKidContract(INagaKid _nagaKid) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        address nagaKidBefore = address(nagaKidContract);\r\n        nagaKidContract = _nagaKid;\r\n        address nagaKidAfter = address(_nagaKid);\r\n\r\n        emit NagaKidContractChanged(nagaKidBefore, nagaKidAfter);\r\n    }\r\n\r\n    function setRound(bytes32 _round) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        bytes32 _roundBefore = currentMintRound;\r\n        currentMintRound = _round;\r\n\r\n        emit RoundChanged(_roundBefore, _round);\r\n    }\r\n\r\n    function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        bytes32 _merkleRootBefore = merkleRoot;\r\n        merkleRoot = _merkleRoot;\r\n\r\n        emit MerkleRootChanged(_merkleRootBefore, _merkleRoot);\r\n    }\r\n\r\n    function mint(bytes32[] calldata _proof, uint256 _amount, bytes32 _round) public payable nonReentrant {\r\n        require(_round != DEFAULT,\"Mint is not approved.\");\r\n        require(currentMintRound == _round, \"Contract are not in this minting round.\");\r\n        require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\");\r\n        require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\");\r\n        require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\");\r\n        require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\");\r\n\r\n        _isUserMinted[msg.sender][_round] = true;\r\n        _userMintedAmount[msg.sender][_round] += _amount;\r\n\r\n        nagaKidContract.batchMint(msg.sender,_amount);\r\n\r\n        emit Minted(msg.sender, _amount, block.timestamp);\r\n    }\r\n\r\n    function withdraw(address _to) public onlyRole(WITHDRAW_ROLE) {\r\n        uint balanceOFContract = address(this).balance;\r\n        require(balanceOFContract > 0, \"Insufficient Balance\");\r\n        (bool status,) = _to.call{value: balanceOFContract }(\"\");\r\n        require(status);\r\n\r\n        emit Withdraw(_to, balanceOFContract ,block.timestamp);\r\n    }\r\n\r\n    function withdrawCurrency(address _to,address _currency) public onlyRole(WITHDRAW_ROLE) {\r\n        uint balanceOfContract = IERC20(_currency).balanceOf(address(this));\r\n        require(balanceOfContract > 0, \"Insufficient Balance\");\r\n        IERC20(_currency).transfer(_to, balanceOfContract);\r\n        \r\n        emit WithdrawCurrency(_to,_currency,balanceOfContract,block.timestamp);\r\n    }\r\n\r\n    function withdrawNFT(address _to,address _NFT,uint256 _tokenId) public onlyRole(WITHDRAW_ROLE) {\r\n        require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\");\r\n\r\n        IERC721(_NFT).safeTransferFrom(address(this), _to, _tokenId);\r\n        \r\n        emit WithdrawNFT(_to,_NFT,_tokenId,block.timestamp);\r\n    }\r\n\r\n    function isUserMinted(address _user,bytes32 _round) public view returns(bool) {\r\n        return _isUserMinted[_user][_round];\r\n    }\r\n\r\n    function userMintedAmount(address _user,bytes32 _round) public view returns(uint256) {\r\n        return _userMintedAmount[_user][_round];\r\n    }\r\n\r\n    function getTotalSupply() public view returns (uint256) {\r\n        return nagaKidContract.totalSupply();\r\n    }\r\n\r\n    function getMaxSupply() public view returns (uint256) {\r\n        return nagaKidContract.maxSupply();\r\n    }\r\n\r\n}\r\n"
			},
			"ERC721A/INagaKid.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"erc721a/contracts/IERC721A.sol\";\r\nimport \"erc721a/contracts/extensions/ERC721ABurnable.sol\";\r\n\r\ninterface INagaKid is IERC721A {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    /**\r\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\r\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n    function maxSupply() external view returns (uint256);\r\n    function isMinter(address minter) external view returns(bool);\r\n    function batchMint(address _to,uint _amount) external;\r\n    function safeMint(address _to) external;\r\n    function walletOfOwner(address _owner) external view returns (uint256[] memory);\r\n    \r\n}\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Trees proofs.\n *\n * The proofs can be generated using the JavaScript library\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n *\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            bytes32 proofElement = proof[i];\n            if (computedHash <= proofElement) {\n                // Hash(current computed hash + current element of the proof)\n                computedHash = _efficientHash(computedHash, proofElement);\n            } else {\n                // Hash(current element of the proof + current computed hash)\n                computedHash = _efficientHash(proofElement, computedHash);\n            }\n        }\n        return computedHash;\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"erc721a/contracts/extensions/ERC721ABurnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721ABurnable.sol';\nimport '../ERC721A.sol';\n\n/**\n * @title ERC721A Burnable Token\n * @dev ERC721A Token that can be irreversibly burned (destroyed).\n */\nabstract contract ERC721ABurnable is ERC721A, IERC721ABurnable {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual override {\n        _burn(tokenId, true);\n    }\n}\n"
			},
			"erc721a/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of an ERC721A compliant contract.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * The caller cannot approve to their own address.\n     */\n    error ApproveToCaller();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set through `_extraData`.\n        uint24 extraData;\n    }\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     *\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // ==============================\n    //            IERC165\n    // ==============================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // ==============================\n    //            IERC721\n    // ==============================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // ==============================\n    //        IERC721Metadata\n    // ==============================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // ==============================\n    //            IERC2309\n    // ==============================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n     * as defined in the ERC2309 standard. See `_mintERC2309` for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"erc721a/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev ERC721 token receiver interface.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard,\n * including the Metadata extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at `_startTokenId()`\n * (defaults to 0, e.g. 0, 1, 2, 3..).\n *\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n *\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Mask of an entry in packed address data.\n    uint256 private constant BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with `_mintERC2309`.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to `_mintERC2309`\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The tokenId of the next token to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See `_packedOwnershipOf` implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see `_totalMinted`.\n     */\n    function totalSupply() public view override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view returns (uint256) {\n        // Counter underflow is impossible as _currentIndex does not decrement,\n        // and it is initialized to `_startTokenId()`\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view returns (uint256) {\n        return _burnCounter;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes of the XOR of\n        // all function selectors in the interface. See: https://eips.ethereum.org/EIPS/eip-165\n        // e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> BITPOS_NUMBER_MINTED) & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> BITPOS_NUMBER_BURNED) & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & BITMASK_AUX_COMPLEMENT) | (auxCasted << BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr)\n                if (curr < _currentIndex) {\n                    uint256 packed = _packedOwnerships[curr];\n                    // If not burned.\n                    if (packed & BITMASK_BURNED == 0) {\n                        // Invariant:\n                        // There will always be an ownership that has an address and is not burned\n                        // before an ownership that does not have an address and is not burned.\n                        // Hence, curr will not underflow.\n                        //\n                        // We can directly compare the packed value.\n                        // If the address is zero, packed is zero.\n                        while (packed == 0) {\n                            packed = _packedOwnerships[--curr];\n                        }\n                        return packed;\n                    }\n                }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, BITMASK_ADDRESS)\n            // `owner | (block.timestamp << BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << BITPOS_NEXT_INITIALIZED`.\n            result := shl(BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public override {\n        address owner = ownerOf(tokenId);\n\n        if (_msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        if (operator == _msgSenderERC721A()) revert ApproveToCaller();\n\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     *   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 tokenId = startTokenId;\n            uint256 end = startTokenId + quantity;\n            do {\n                emit Transfer(address(0), to, tokenId++);\n            } while (tokenId < end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        mapping(uint256 => address) storage tokenApprovalsPtr = _tokenApprovals;\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId]`.\n        assembly {\n            // Compute the slot.\n            mstore(0x00, tokenId)\n            mstore(0x20, tokenApprovalsPtr.slot)\n            approvedAddressSlot := keccak256(0x00, 0x40)\n            // Load the slot's value from storage.\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    /**\n     * @dev Returns whether the `approvedAddress` is equals to `from` or `msgSender`.\n     */\n    function _isOwnerOrApproved(\n        address approvedAddress,\n        address from,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            from := and(from, BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, BITMASK_ADDRESS)\n            // `msgSender == from || msgSender == approvedAddress`.\n            result := or(eq(msgSender, from), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (BITMASK_BURNED | BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred.\n     * This includes minting.\n     * And also called before burning one token.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred.\n     * This includes minting.\n     * And also called after one token has been burned.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function _toString(uint256 value) internal pure returns (string memory ptr) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit),\n            // but we allocate 128 bytes to keep the free memory pointer 32-byte word aliged.\n            // We will need 1 32-byte word to store the length,\n            // and 3 32-byte words to store a maximum of 78 digits. Total: 32 + 3 * 32 = 128.\n            ptr := add(mload(0x40), 128)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, ptr)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := ptr\n\n            // We write the string from the rightmost digit to the leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // Costs a bit more than early returning for the zero case,\n            // but cheaper in terms of deployment and overall runtime costs.\n            for {\n                // Initialize and perform the first pass without check.\n                let temp := value\n                // Move the pointer 1 byte leftwards to point to an empty character slot.\n                ptr := sub(ptr, 1)\n                // Write the character to the pointer. 48 is the ASCII index of '0'.\n                mstore8(ptr, add(48, mod(temp, 10)))\n                temp := div(temp, 10)\n            } temp {\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n            } {\n                // Body of the for loop.\n                ptr := sub(ptr, 1)\n                mstore8(ptr, add(48, mod(temp, 10)))\n            }\n\n            let length := sub(end, ptr)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            ptr := sub(ptr, 32)\n            // Store the length.\n            mstore(ptr, length)\n        }\n    }\n}\n"
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of an ERC721ABurnable compliant contract.\n */\ninterface IERC721ABurnable is IERC721A {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x24 PUSH22 0xA97023F85002D88B36969440A2F71B0286AD4E8B8954 SWAP7 MLOAD CREATE2 RETURN 0xD8 0xD2 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "146:1885:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x24 PUSH22 0xA97023F85002D88B36969440A2F71B0286AD4E8B8954 SWAP7 MLOAD CREATE2 RETURN 0xD8 0xD2 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "146:1885:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ERC721A/INagaKid.sol",
								"ERC721A/MintNagaKids.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/ERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"MerkleProof": {
					"abi": [],
					"devdoc": {
						"details": "These functions deal with verification of Merkle Trees proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":800:2577  library MerkleProof {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":800:2577  library MerkleProof {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CALLDATASIZE PUSH9 0xFA5FA11D3D3DD24084 PUSH4 0x979970C2 PUSH28 0xE388D0F7DF26A4A92E9B7B8C470464736F6C634300080F0033000000 ",
							"sourceMap": "800:1777:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;800:1777:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CALLDATASIZE PUSH9 0xFA5FA11D3D3DD24084 PUSH4 0x979970C2 PUSH28 0xE388D0F7DF26A4A92E9B7B8C470464736F6C634300080F0033000000 ",
							"sourceMap": "800:1777:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_efficientHash(bytes32,bytes32)": "infinite",
								"processProof(bytes32[] memory,bytes32)": "infinite",
								"verify(bytes32[] memory,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
									".code": [
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ERC721A/INagaKid.sol",
								"ERC721A/MintNagaKids.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/ERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Trees proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721A/INagaKid.sol": {
				"INagaKid": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "batchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "walletOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchMint(address,uint256)": "43508b05",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isMinter(address)": "aa271e1a",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeMint(address)": "40d097c3",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"walletOfOwner(address)": "438b6300"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"walletOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721A/INagaKid.sol\":\"INagaKid\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC721A/INagaKid.sol\":{\"keccak256\":\"0x7c880cba0d09817b520df026dcb0b4fd7a129a7b4433ef8821e84eacd67e14a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76a6945d0d105709844d1a5eee65e5c8fdc6363d5612ce4e7f34f2556b7e2a3\",\"dweb:/ipfs/QmdiHLF3hVtJPgpz5Qism44oCFSX8SD3bLfh4i7krHapwf\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/ERC721ABurnable.sol\":{\"keccak256\":\"0x19ba9af16e4159db5e89cecf3288eefa8bd8dff0dbd0ca2560d9da05adb2728e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00c6045054fca386d5646c017c932759eb821b29363cd7c5ad3e3a1896e68d5f\",\"dweb:/ipfs/QmNuvnZ5spjAkPFfTKy6mzWSUFtgdkhJfGU6ZU9HgVov3u\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721A/MintNagaKids.sol": {
				"MintNagaKids": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract INagaKid",
									"name": "_nagaKidContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_merkleRoot",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRootBefore",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRootAfter",
									"type": "bytes32"
								}
							],
							"name": "MerkleRootChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "nagaKidBefore",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "nagaKidAfter",
									"type": "address"
								}
							],
							"name": "NagaKidContractChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "roundBefore",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "roundAfter",
									"type": "bytes32"
								}
							],
							"name": "RoundChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "balanceOFContract",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "balanceOfContract",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "WithdrawCurrency",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "NFT",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "WithdrawNFT",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NAGA_HOLDER_MINT_ROUND",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPECIAL_MINT_ROUND",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WHITELIST_MINT_ROUND",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WITHDRAW_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMintRound",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_round",
									"type": "bytes32"
								}
							],
							"name": "isUserMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "merkleRoot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "_proof",
									"type": "bytes32[]"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_round",
									"type": "bytes32"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nagaKidContract",
							"outputs": [
								{
									"internalType": "contract INagaKid",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "setMerkleRoot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract INagaKid",
									"name": "_nagaKid",
									"type": "address"
								}
							],
							"name": "setNagaKidContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_round",
									"type": "bytes32"
								}
							],
							"name": "setRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_round",
									"type": "bytes32"
								}
							],
							"name": "userMintedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_currency",
									"type": "address"
								}
							],
							"name": "withdrawCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "withdrawNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC721A/MintNagaKids.sol\":401:5589  contract MintNagaKids is AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"ERC721A/MintNagaKids.sol\":1977:2234  constructor(INagaKid _nagaKidContract, bytes32 _merkleRoot) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":2050:2092  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"ERC721A/MintNagaKids.sol\":2081:2091  msg.sender */\n  caller\n    /* \"ERC721A/MintNagaKids.sol\":2050:2060  _grantRole */\n  tag_9\n    /* \"ERC721A/MintNagaKids.sol\":2050:2092  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_8:\n    /* \"ERC721A/MintNagaKids.sol\":2103:2140  _grantRole(WITHDRAW_ROLE, msg.sender) */\n  tag_10\n    /* \"ERC721A/MintNagaKids.sol\":1090:1116  keccak256(\"WITHDRAW_ROLE\") */\n  0x5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec\n    /* \"ERC721A/MintNagaKids.sol\":2129:2139  msg.sender */\n  caller\n    /* \"ERC721A/MintNagaKids.sol\":2103:2113  _grantRole */\n  tag_9\n    /* \"ERC721A/MintNagaKids.sol\":2103:2140  _grantRole(WITHDRAW_ROLE, msg.sender) */\n  jump\t// in\ntag_10:\n    /* \"ERC721A/MintNagaKids.sol\":2151:2187  setNagaKidContract(_nagaKidContract) */\n  tag_11\n    /* \"ERC721A/MintNagaKids.sol\":2170:2186  _nagaKidContract */\n  dup3\n    /* \"ERC721A/MintNagaKids.sol\":2151:2169  setNagaKidContract */\n  tag_12\n    /* \"ERC721A/MintNagaKids.sol\":2151:2187  setNagaKidContract(_nagaKidContract) */\n  jump\t// in\ntag_11:\n    /* \"ERC721A/MintNagaKids.sol\":2198:2224  setMerkleRoot(_merkleRoot) */\n  tag_13\n    /* \"ERC721A/MintNagaKids.sol\":2212:2223  _merkleRoot */\n  dup2\n    /* \"ERC721A/MintNagaKids.sol\":2198:2211  setMerkleRoot */\n  tag_14\n    /* \"ERC721A/MintNagaKids.sol\":2198:2224  setMerkleRoot(_merkleRoot) */\n  jump\t// in\ntag_13:\n    /* \"ERC721A/MintNagaKids.sol\":1977:2234  constructor(INagaKid _nagaKidContract, bytes32 _merkleRoot) {... */\n  pop\n  pop\n    /* \"ERC721A/MintNagaKids.sol\":401:5589  contract MintNagaKids is AccessControl, ReentrancyGuard {... */\n  jump(tag_79)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n  tag_19\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7371  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7397:7401  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7447:7459  _msgSender() */\n  tag_20\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7447:7459  _msgSender() */\ntag_20:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7438:7445  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7432:7436  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC721A/MintNagaKids.sol\":2242:2549  function setNagaKidContract(INagaKid _nagaKid) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  tag_23\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n  tag_24\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  jump\t// in\ntag_23:\n    /* \"ERC721A/MintNagaKids.sol\":2368:2383  nagaKidContract */\n  0x02\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC721A/MintNagaKids.sol\":2395:2421  nagaKidContract = _nagaKid */\n  dup5\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":2490:2541  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n  0x40\n  dup1\n  mload\n    /* \"ERC721A/MintNagaKids.sol\":2368:2383  nagaKidContract */\n  swap2\n  swap1\n  swap3\n  and\n    /* \"#utility.yul\":599:633   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":664:666   */\n  0x20\n    /* \"#utility.yul\":649:667   */\n  dup3\n  add\n    /* \"#utility.yul\":642:685   */\n  swap4\n  swap1\n  swap4\n  mstore\n    /* \"ERC721A/MintNagaKids.sol\":2395:2421  nagaKidContract = _nagaKid */\n  dup5\n  swap2\n    /* \"ERC721A/MintNagaKids.sol\":2490:2541  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n  0xabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d973\n  swap2\n    /* \"#utility.yul\":534:552   */\n  add\n    /* \"ERC721A/MintNagaKids.sol\":2490:2541  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"ERC721A/MintNagaKids.sol\":2325:2549  {... */\n  pop\n  pop\n    /* \"ERC721A/MintNagaKids.sol\":2242:2549  function setNagaKidContract(INagaKid _nagaKid) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC721A/MintNagaKids.sol\":2781:3020  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  tag_29\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n  tag_24\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  jump\t// in\ntag_29:\n    /* \"ERC721A/MintNagaKids.sol\":2900:2910  merkleRoot */\n  0x04\n  dup1\n  sload\n    /* \"ERC721A/MintNagaKids.sol\":2921:2945  merkleRoot = _merkleRoot */\n  swap1\n  dup4\n  swap1\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":2963:3012  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":870:895   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":926:928   */\n  0x20\n    /* \"#utility.yul\":911:929   */\n  dup2\n  add\n    /* \"#utility.yul\":904:938   */\n  dup6\n  swap1\n  mstore\n    /* \"ERC721A/MintNagaKids.sol\":2963:3012  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n  0x123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe\n  swap2\n    /* \"#utility.yul\":843:861   */\n  add\n    /* \"ERC721A/MintNagaKids.sol\":2963:3012  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"ERC721A/MintNagaKids.sol\":2861:3020  {... */\n  pop\n    /* \"ERC721A/MintNagaKids.sol\":2781:3020  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\ntag_24:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n  tag_36\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n  tag_38\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\ntag_38:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n  tag_19\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n  tag_42\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4017:4024  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4027:4029  20 */\n  0x14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n  or(tag_0_154, shl(0x20, tag_43))\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n  tag_44\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4129:4133  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4136:4138  32 */\n  0x20\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n  tag_0_154\n  tag_43\n  dup3\n  shl\n  or\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n  dup2\n  shr\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n  add(0x20, mload(0x40))\n  tag_45\n  swap3\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  0x40\n  dup1\n  mload\n  not(0x1f)\n  dup2\n  dup5\n  sub\n  add\n  dup2\n  mstore\n  swap1\n  dup3\n  swap1\n  mstore\n  shl(0xe5, 0x461bcd)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4193  revert(... */\n  dup3\n  mstore\n  tag_47\n  swap2\n  0x04\n  add\n  tag_48\n  jump\t// in\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1663:1676  string memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1707  bytes memory buffer */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n  tag_50\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1724:1730  length */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1721  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n  tag_51\n  jump\t// in\ntag_50:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n  tag_52\n  swap1\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1733:1734  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n  tag_53\n  jump\t// in\ntag_52:\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1710:1735  new bytes(2 * length + 2) */\n  dup2\n  gt\n  iszero\n  tag_55\n  jumpi\n  tag_55\n  tag_56\n  jump\t// in\ntag_55:\n  mload(0x40)\n  swap1\n  dup1\n  dup3\n  mstore\n  dup1\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  dup3\n  add\n  0x40\n  mstore\n  dup1\n  iszero\n  tag_57\n  jumpi\n  0x20\n  dup3\n  add\n  dup2\n  dup1\n  calldatasize\n  dup4\n  calldatacopy\n  add\n  swap1\n  pop\ntag_57:\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1735  bytes memory buffer = new bytes(2 * length + 2) */\n  swap1\n  pop\n  shl(0xfc, 0x03)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1751  buffer */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1753  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1754  buffer[0] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_59\n  jumpi\n  tag_59\n  tag_60\n  jump\t// in\ntag_59:\n  0x20\n  add\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1760  buffer[0] = \"0\" */\n  swap1\n  not(sub(shl(0xf8, 0x01), 0x01))\n  and\n  swap1\n  dup2\n  0x00\n  byte\n  swap1\n  mstore8\n  pop\n  shl(0xfb, 0x0f)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1776  buffer */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1777:1778  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1779  buffer[1] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_62\n  jumpi\n  tag_62\n  tag_60\n  jump\t// in\ntag_62:\n  0x20\n  add\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1785  buffer[1] = \"x\" */\n  swap1\n  not(sub(shl(0xf8, 0x01), 0x01))\n  and\n  swap1\n  dup2\n  0x00\n  byte\n  swap1\n  mstore8\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1809  uint256 i */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n  tag_66\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1816:1822  length */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1813  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n  tag_51\n  jump\t// in\ntag_66:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n  tag_67\n  swap1\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1825:1826  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n  tag_53\n  jump\t// in\ntag_67:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1826  uint256 i = 2 * length + 1 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\ntag_63:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1832:1833  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1829  i */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1833  i > 1 */\n  gt\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n  iszero\n  tag_64\n  jumpi\n  shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1884  value */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1887:1890  0xf */\n  0x0f\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1890  value & 0xf */\n  and\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1866:1891  _HEX_SYMBOLS[value & 0xf] */\n  0x10\n  dup2\n  lt\n  tag_69\n  jumpi\n  tag_69\n  tag_60\n  jump\t// in\ntag_69:\n  byte\n  0xf8\n  shl\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1860  buffer */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1861:1862  i */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1863  buffer[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_71\n  jumpi\n  tag_71\n  tag_60\n  jump\t// in\ntag_71:\n  0x20\n  add\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1891  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n  swap1\n  not(sub(shl(0xf8, 0x01), 0x01))\n  and\n  swap1\n  dup2\n  0x00\n  byte\n  swap1\n  mstore8\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1915:1916  4 */\n  0x04\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1905:1916  value >>= 4 */\n  swap5\n  swap1\n  swap5\n  shr\n  swap4\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1835:1838  --i */\n  tag_72\n  dup2\n  tag_73\n  jump\t// in\ntag_72:\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n  jump(tag_63)\ntag_64:\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1944:1954  value == 0 */\n  dup4\n  iszero\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n  tag_74\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3436:3438   */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3418:3439   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":3455:3473   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3448:3478   */\n  mstore\n    /* \"#utility.yul\":3514:3548   */\n  0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n    /* \"#utility.yul\":3494:3512   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3487:3549   */\n  mstore\n    /* \"#utility.yul\":3566:3584   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n  tag_47\n    /* \"#utility.yul\":3234:3590   */\n  jump\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\ntag_74:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":2015:2021  buffer */\n  swap4\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:382   */\ntag_3:\n    /* \"#utility.yul\":110:116   */\n  0x00\n    /* \"#utility.yul\":118:124   */\n  dup1\n    /* \"#utility.yul\":171:173   */\n  0x40\n    /* \"#utility.yul\":159:168   */\n  dup4\n    /* \"#utility.yul\":150:157   */\n  dup6\n    /* \"#utility.yul\":146:169   */\n  sub\n    /* \"#utility.yul\":142:174   */\n  slt\n    /* \"#utility.yul\":139:191   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":187:188   */\n  0x00\n    /* \"#utility.yul\":184:185   */\n  dup1\n    /* \"#utility.yul\":177:189   */\n  revert\n    /* \"#utility.yul\":139:191   */\ntag_81:\n    /* \"#utility.yul\":213:229   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":258:289   */\n  dup2\n  and\n    /* \"#utility.yul\":248:290   */\n  dup2\n  eq\n    /* \"#utility.yul\":238:308   */\n  tag_82\n  jumpi\n    /* \"#utility.yul\":304:305   */\n  0x00\n    /* \"#utility.yul\":301:302   */\n  dup1\n    /* \"#utility.yul\":294:306   */\n  revert\n    /* \"#utility.yul\":238:308   */\ntag_82:\n    /* \"#utility.yul\":372:374   */\n  0x20\n    /* \"#utility.yul\":357:375   */\n  swap4\n  swap1\n  swap4\n  add\n    /* \"#utility.yul\":351:376   */\n  mload\n    /* \"#utility.yul\":327:332   */\n  swap3\n  swap5\n    /* \"#utility.yul\":351:376   */\n  swap3\n  swap4\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":14:382   */\n  jump\t// out\n    /* \"#utility.yul\":949:1207   */\ntag_77:\n    /* \"#utility.yul\":1021:1022   */\n  0x00\n    /* \"#utility.yul\":1031:1144   */\ntag_86:\n    /* \"#utility.yul\":1045:1051   */\n  dup4\n    /* \"#utility.yul\":1042:1043   */\n  dup2\n    /* \"#utility.yul\":1039:1052   */\n  lt\n    /* \"#utility.yul\":1031:1144   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1121:1132   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":1115:1133   */\n  mload\n    /* \"#utility.yul\":1102:1113   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":1095:1134   */\n  mstore\n    /* \"#utility.yul\":1067:1069   */\n  0x20\n    /* \"#utility.yul\":1060:1070   */\n  add\n    /* \"#utility.yul\":1031:1144   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":1162:1168   */\n  dup4\n    /* \"#utility.yul\":1159:1160   */\n  dup2\n    /* \"#utility.yul\":1156:1169   */\n  gt\n    /* \"#utility.yul\":1153:1201   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1197:1198   */\n  0x00\n    /* \"#utility.yul\":1188:1194   */\n  dup5\n    /* \"#utility.yul\":1183:1186   */\n  dup5\n    /* \"#utility.yul\":1179:1195   */\n  add\n    /* \"#utility.yul\":1172:1199   */\n  mstore\n    /* \"#utility.yul\":1153:1201   */\ntag_89:\n  pop\n    /* \"#utility.yul\":949:1207   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1212:1998   */\ntag_46:\n    /* \"#utility.yul\":1623:1648   */\n  0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n    /* \"#utility.yul\":1618:1621   */\n  dup2\n    /* \"#utility.yul\":1611:1649   */\n  mstore\n    /* \"#utility.yul\":1593:1596   */\n  0x00\n    /* \"#utility.yul\":1678:1684   */\n  dup4\n    /* \"#utility.yul\":1672:1685   */\n  mload\n    /* \"#utility.yul\":1694:1756   */\n  tag_91\n    /* \"#utility.yul\":1749:1755   */\n  dup2\n    /* \"#utility.yul\":1744:1746   */\n  0x17\n    /* \"#utility.yul\":1739:1742   */\n  dup6\n    /* \"#utility.yul\":1735:1747   */\n  add\n    /* \"#utility.yul\":1728:1732   */\n  0x20\n    /* \"#utility.yul\":1720:1726   */\n  dup9\n    /* \"#utility.yul\":1716:1733   */\n  add\n    /* \"#utility.yul\":1694:1756   */\n  tag_77\n  jump\t// in\ntag_91:\n  shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n    /* \"#utility.yul\":1815:1817   */\n  0x17\n    /* \"#utility.yul\":1775:1791   */\n  swap2\n  dup5\n  add\n    /* \"#utility.yul\":1807:1818   */\n  swap2\n  dup3\n  add\n    /* \"#utility.yul\":1800:1840   */\n  mstore\n    /* \"#utility.yul\":1865:1878   */\n  dup4\n  mload\n    /* \"#utility.yul\":1887:1950   */\n  tag_92\n    /* \"#utility.yul\":1865:1878   */\n  dup2\n    /* \"#utility.yul\":1936:1938   */\n  0x28\n    /* \"#utility.yul\":1928:1939   */\n  dup5\n  add\n    /* \"#utility.yul\":1921:1925   */\n  0x20\n    /* \"#utility.yul\":1909:1926   */\n  dup9\n  add\n    /* \"#utility.yul\":1887:1950   */\n  tag_77\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1970:1987   */\n  add\n    /* \"#utility.yul\":1989:1991   */\n  0x28\n    /* \"#utility.yul\":1966:1992   */\n  add\n  swap5\n    /* \"#utility.yul\":1212:1998   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2003:2386   */\ntag_48:\n    /* \"#utility.yul\":2152:2154   */\n  0x20\n    /* \"#utility.yul\":2141:2150   */\n  dup2\n    /* \"#utility.yul\":2134:2155   */\n  mstore\n    /* \"#utility.yul\":2115:2119   */\n  0x00\n    /* \"#utility.yul\":2184:2190   */\n  dup3\n    /* \"#utility.yul\":2178:2191   */\n  mload\n    /* \"#utility.yul\":2227:2233   */\n  dup1\n    /* \"#utility.yul\":2222:2224   */\n  0x20\n    /* \"#utility.yul\":2211:2220   */\n  dup5\n    /* \"#utility.yul\":2207:2225   */\n  add\n    /* \"#utility.yul\":2200:2234   */\n  mstore\n    /* \"#utility.yul\":2243:2309   */\n  tag_94\n    /* \"#utility.yul\":2302:2308   */\n  dup2\n    /* \"#utility.yul\":2297:2299   */\n  0x40\n    /* \"#utility.yul\":2286:2295   */\n  dup6\n    /* \"#utility.yul\":2282:2300   */\n  add\n    /* \"#utility.yul\":2277:2279   */\n  0x20\n    /* \"#utility.yul\":2269:2275   */\n  dup8\n    /* \"#utility.yul\":2265:2280   */\n  add\n    /* \"#utility.yul\":2243:2309   */\n  tag_77\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2370:2372   */\n  0x1f\n    /* \"#utility.yul\":2349:2364   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":2345:2374   */\n  and\n    /* \"#utility.yul\":2330:2375   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":2377:2379   */\n  0x40\n    /* \"#utility.yul\":2326:2380   */\n  add\n  swap3\n    /* \"#utility.yul\":2003:2386   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2391:2518   */\ntag_78:\n    /* \"#utility.yul\":2452:2462   */\n  0x4e487b71\n    /* \"#utility.yul\":2447:2450   */\n  0xe0\n    /* \"#utility.yul\":2443:2463   */\n  shl\n    /* \"#utility.yul\":2440:2441   */\n  0x00\n    /* \"#utility.yul\":2433:2464   */\n  mstore\n    /* \"#utility.yul\":2483:2487   */\n  0x11\n    /* \"#utility.yul\":2480:2481   */\n  0x04\n    /* \"#utility.yul\":2473:2488   */\n  mstore\n    /* \"#utility.yul\":2507:2511   */\n  0x24\n    /* \"#utility.yul\":2504:2505   */\n  0x00\n    /* \"#utility.yul\":2497:2512   */\n  revert\n    /* \"#utility.yul\":2523:2691   */\ntag_51:\n    /* \"#utility.yul\":2563:2570   */\n  0x00\n    /* \"#utility.yul\":2629:2630   */\n  dup2\n    /* \"#utility.yul\":2625:2626   */\n  0x00\n    /* \"#utility.yul\":2621:2627   */\n  not\n    /* \"#utility.yul\":2617:2631   */\n  div\n    /* \"#utility.yul\":2614:2615   */\n  dup4\n    /* \"#utility.yul\":2611:2632   */\n  gt\n    /* \"#utility.yul\":2606:2607   */\n  dup3\n    /* \"#utility.yul\":2599:2608   */\n  iszero\n    /* \"#utility.yul\":2592:2609   */\n  iszero\n    /* \"#utility.yul\":2588:2633   */\n  and\n    /* \"#utility.yul\":2585:2656   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2636:2654   */\n  tag_98\n  tag_78\n  jump\t// in\ntag_98:\n  pop\n    /* \"#utility.yul\":2676:2685   */\n  mul\n  swap1\n    /* \"#utility.yul\":2523:2691   */\n  jump\t// out\n    /* \"#utility.yul\":2696:2824   */\ntag_53:\n    /* \"#utility.yul\":2736:2739   */\n  0x00\n    /* \"#utility.yul\":2767:2768   */\n  dup3\n    /* \"#utility.yul\":2763:2769   */\n  not\n    /* \"#utility.yul\":2760:2761   */\n  dup3\n    /* \"#utility.yul\":2757:2770   */\n  gt\n    /* \"#utility.yul\":2754:2793   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2773:2791   */\n  tag_101\n  tag_78\n  jump\t// in\ntag_101:\n  pop\n    /* \"#utility.yul\":2809:2818   */\n  add\n  swap1\n    /* \"#utility.yul\":2696:2824   */\n  jump\t// out\n    /* \"#utility.yul\":2829:2956   */\ntag_56:\n    /* \"#utility.yul\":2890:2900   */\n  0x4e487b71\n    /* \"#utility.yul\":2885:2888   */\n  0xe0\n    /* \"#utility.yul\":2881:2901   */\n  shl\n    /* \"#utility.yul\":2878:2879   */\n  0x00\n    /* \"#utility.yul\":2871:2902   */\n  mstore\n    /* \"#utility.yul\":2921:2925   */\n  0x41\n    /* \"#utility.yul\":2918:2919   */\n  0x04\n    /* \"#utility.yul\":2911:2926   */\n  mstore\n    /* \"#utility.yul\":2945:2949   */\n  0x24\n    /* \"#utility.yul\":2942:2943   */\n  0x00\n    /* \"#utility.yul\":2935:2950   */\n  revert\n    /* \"#utility.yul\":2961:3088   */\ntag_60:\n    /* \"#utility.yul\":3022:3032   */\n  0x4e487b71\n    /* \"#utility.yul\":3017:3020   */\n  0xe0\n    /* \"#utility.yul\":3013:3033   */\n  shl\n    /* \"#utility.yul\":3010:3011   */\n  0x00\n    /* \"#utility.yul\":3003:3034   */\n  mstore\n    /* \"#utility.yul\":3053:3057   */\n  0x32\n    /* \"#utility.yul\":3050:3051   */\n  0x04\n    /* \"#utility.yul\":3043:3058   */\n  mstore\n    /* \"#utility.yul\":3077:3081   */\n  0x24\n    /* \"#utility.yul\":3074:3075   */\n  0x00\n    /* \"#utility.yul\":3067:3082   */\n  revert\n    /* \"#utility.yul\":3093:3229   */\ntag_73:\n    /* \"#utility.yul\":3132:3135   */\n  0x00\n    /* \"#utility.yul\":3160:3165   */\n  dup2\n    /* \"#utility.yul\":3150:3189   */\n  tag_106\n  jumpi\n    /* \"#utility.yul\":3169:3187   */\n  tag_106\n  tag_78\n  jump\t// in\ntag_106:\n  pop\n  not(0x00)\n    /* \"#utility.yul\":3205:3223   */\n  add\n  swap1\n    /* \"#utility.yul\":3093:3229   */\n  jump\t// out\n    /* \"#utility.yul\":3234:3590   */\ntag_79:\n    /* \"ERC721A/MintNagaKids.sol\":401:5589  contract MintNagaKids is AccessControl, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC721A/MintNagaKids.sol\":401:5589  contract MintNagaKids is AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e6c8855\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xef5fe79f\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xef5fe79f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf500cdfc\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xff05fe4a\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xffdc6129\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0xd547741f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdf4e5881\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe02023a1\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x9e6c8855\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9f930765\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb5abafa1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbff863ec\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc4e41b22\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x36568abe\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x5b94bbc3\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x5b94bbc3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7cb64759\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8407ecc4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x36568abe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4c0f38c2\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0a25dea9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x24c37a85\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb4a7ab\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A/MintNagaKids.sol\":937:1037  bytes32 public constant DEFAULT = 0x0000000000000000000000000000000000000000000000000000000000000000 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n        /* \"ERC721A/MintNagaKids.sol\":971:1037  0x0000000000000000000000000000000000000000000000000000000000000000 */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":937:1037  bytes32 public constant DEFAULT = 0x0000000000000000000000000000000000000000000000000000000000000000 */\n      dup2\n      jump\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":643:668   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":937:1037  bytes32 public constant DEFAULT = 0x0000000000000000000000000000000000000000000000000000000000000000 */\n      tag_38\n        /* \"#utility.yul\":497:674   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_41\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":623:707  bytes32 public constant NAGA_HOLDER_MINT_ROUND = keccak256(\"NAGA_HOLDER_MINT_ROUND\") */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_41\n        /* \"ERC721A/MintNagaKids.sol\":672:707  keccak256(\"NAGA_HOLDER_MINT_ROUND\") */\n      0xb3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db3\n        /* \"ERC721A/MintNagaKids.sol\":623:707  bytes32 public constant NAGA_HOLDER_MINT_ROUND = keccak256(\"NAGA_HOLDER_MINT_ROUND\") */\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":1201:1226  bytes32 public merkleRoot */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_41\n      sload(0x04)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_60\n      tag_66\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":5477:5584  function getMaxSupply() public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_41\n      tag_70\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":3943:4295  function withdraw(address _to) public onlyRole(WITHDRAW_ROLE) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_60\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":784:860  bytes32 public constant SPECIAL_MINT_ROUND = keccak256(\"SPECIAL_MINT_ROUND\") */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_41\n        /* \"ERC721A/MintNagaKids.sol\":829:860  keccak256(\"SPECIAL_MINT_ROUND\") */\n      0x5c8c0ce107274ad0569bd760c3d2406c1ed72c697935f3f965bd096c5cdedee4\n        /* \"ERC721A/MintNagaKids.sol\":784:860  bytes32 public constant SPECIAL_MINT_ROUND = keccak256(\"SPECIAL_MINT_ROUND\") */\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":2781:3020  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_60\n      tag_84\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":4303:4694  function withdrawCurrency(address _to,address _currency) public onlyRole(WITHDRAW_ROLE) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_60\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_34\n      tag_93\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":2242:2549  function setNagaKidContract(INagaKid _nagaKid) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_60\n      tag_98\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":3028:3935  function mint(bytes32[] calldata _proof, uint256 _amount, bytes32 _round) public payable nonReentrant {... */\n    tag_16:\n      tag_60\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":5207:5350  function userMintedAmount(address _user,bytes32 _round) public view returns(uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_41\n      tag_111\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":5310:5334  _userMintedAmount[_user] */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"ERC721A/MintNagaKids.sol\":5283:5290  uint256 */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":5310:5334  _userMintedAmount[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5310:5327  _userMintedAmount */\n      0x06\n        /* \"ERC721A/MintNagaKids.sol\":5310:5334  _userMintedAmount[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":5310:5342  _userMintedAmount[_user][_round] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":5207:5350  function userMintedAmount(address _user,bytes32 _round) public view returns(uint256) {... */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4702:5059  function withdrawNFT(address _to,address _NFT,uint256 _tokenId) public onlyRole(WITHDRAW_ROLE) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_60\n      tag_117\n      calldatasize\n      0x04\n      tag_118\n      jump\t// in\n    tag_117:\n      tag_119\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":5358:5469  function getTotalSupply() public view returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_41\n      tag_122\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_60\n      tag_126\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":1125:1156  INagaKid public nagaKidContract */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      sload(0x02)\n      tag_129\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_129:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4140:4172   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4122:4173   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4110:4112   */\n      0x20\n        /* \"#utility.yul\":4095:4113   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":1125:1156  INagaKid public nagaKidContract */\n      tag_38\n        /* \"#utility.yul\":3959:4179   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":1050:1116  bytes32 public constant WITHDRAW_ROLE = keccak256(\"WITHDRAW_ROLE\") */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_41\n      0x00\n      dup1\n      mload\n      0x20\n      data_71bc58b11912e913810b39e571f45210df6492f34a736e059bce6194bd700432\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":1163:1194  bytes32 public currentMintRound */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_41\n      sload(0x03)\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":466:546  bytes32 public constant WHITELIST_MINT_ROUND = keccak256(\"WHITELIST_MINT_ROUND\") */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_41\n        /* \"ERC721A/MintNagaKids.sol\":513:546  keccak256(\"WHITELIST_MINT_ROUND\") */\n      0x68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba\n        /* \"ERC721A/MintNagaKids.sol\":466:546  bytes32 public constant WHITELIST_MINT_ROUND = keccak256(\"WHITELIST_MINT_ROUND\") */\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":2557:2773  function setRound(bytes32 _round) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_60\n      tag_147\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":5067:5199  function isUserMinted(address _user,bytes32 _round) public view returns(bool) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_34\n      tag_151\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":5163:5183  _isUserMinted[_user] */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"ERC721A/MintNagaKids.sol\":5139:5143  bool */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":5163:5183  _isUserMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5163:5176  _isUserMinted */\n      0x05\n        /* \"ERC721A/MintNagaKids.sol\":5163:5183  _isUserMinted[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":5163:5191  _isUserMinted[_user][_round] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":5067:5199  function isUserMinted(address _user,bytes32 _round) public view returns(bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_157\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_162\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4908  _grantRole(role, account) */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4894:4898  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4900:4907  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4893  _grantRole */\n      tag_166\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4908  _grantRole(role, account) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5882:5905  account == _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5882:5905  account == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4386:4388   */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4368:4389   */\n      mstore\n        /* \"#utility.yul\":4425:4427   */\n      0x2f\n        /* \"#utility.yul\":4405:4423   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4398:4428   */\n      mstore\n        /* \"#utility.yul\":4464:4498   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":4444:4462   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4437:4499   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":4515:4533   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4508:4553   */\n      mstore\n        /* \"#utility.yul\":4570:4589   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5994  _revokeRole(role, account) */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5980:5984  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5986:5993  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5979  _revokeRole */\n      tag_174\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5994  _revokeRole(role, account) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":5477:5584  function getMaxSupply() public view returns (uint256) {... */\n    tag_70:\n        /* \"ERC721A/MintNagaKids.sol\":5549:5564  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":5549:5576  nagaKidContract.maxSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd5abeb01)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC721A/MintNagaKids.sol\":5522:5529  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":5549:5564  nagaKidContract */\n      and\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":5549:5574  nagaKidContract.maxSupply */\n      0xd5abeb01\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":5549:5576  nagaKidContract.maxSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ERC721A/MintNagaKids.sol\":5549:5564  nagaKidContract */\n      dup7\n        /* \"ERC721A/MintNagaKids.sol\":5549:5576  nagaKidContract.maxSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"ERC721A/MintNagaKids.sol\":5542:5576  return nagaKidContract.maxSupply() */\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5477:5584  function getMaxSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":3943:4295  function withdraw(address _to) public onlyRole(WITHDRAW_ROLE) {... */\n    tag_77:\n      0x00\n      dup1\n      mload\n      0x20\n      data_71bc58b11912e913810b39e571f45210df6492f34a736e059bce6194bd700432\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_181\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_181:\n        /* \"ERC721A/MintNagaKids.sol\":4041:4062  address(this).balance */\n      selfbalance\n        /* \"ERC721A/MintNagaKids.sol\":4081:4102  balanceOFContract > 0 */\n      dup1\n        /* \"ERC721A/MintNagaKids.sol\":4073:4127  require(balanceOFContract > 0, \"Insufficient Balance\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4991:4993   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4073:4127  require(balanceOFContract > 0, \"Insufficient Balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4973:4994   */\n      mstore\n        /* \"#utility.yul\":5030:5032   */\n      0x14\n        /* \"#utility.yul\":5010:5028   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5003:5033   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742042616c616e6365)\n        /* \"#utility.yul\":5049:5067   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5042:5092   */\n      mstore\n        /* \"#utility.yul\":5109:5127   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4073:4127  require(balanceOFContract > 0, \"Insufficient Balance\") */\n      tag_171\n        /* \"#utility.yul\":4789:5133   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4073:4127  require(balanceOFContract > 0, \"Insufficient Balance\") */\n    tag_183:\n        /* \"ERC721A/MintNagaKids.sol\":4139:4150  bool status */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":4155:4158  _to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":4155:4163  _to.call */\n      and\n        /* \"ERC721A/MintNagaKids.sol\":4171:4188  balanceOFContract */\n      dup3\n        /* \"ERC721A/MintNagaKids.sol\":4155:4194  _to.call{value: balanceOFContract }(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_190\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_189)\n    tag_190:\n      0x60\n      swap2\n      pop\n    tag_189:\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4138:4194  (bool status,) = _to.call{value: balanceOFContract }(\"\") */\n      pop\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4213:4219  status */\n      dup1\n        /* \"ERC721A/MintNagaKids.sol\":4205:4220  require(status) */\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n        /* \"ERC721A/MintNagaKids.sol\":4238:4287  Withdraw(_to, balanceOFContract ,block.timestamp) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5568:5600   */\n      dup7\n      and\n        /* \"#utility.yul\":5550:5601   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5632:5634   */\n      0x20\n        /* \"#utility.yul\":5617:5635   */\n      dup2\n      add\n        /* \"#utility.yul\":5610:5644   */\n      dup5\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4271:4286  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":5660:5678   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":5653:5687   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4238:4287  Withdraw(_to, balanceOFContract ,block.timestamp) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n      swap1\n        /* \"#utility.yul\":5538:5540   */\n      0x60\n        /* \"#utility.yul\":5523:5541   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4238:4287  Withdraw(_to, balanceOFContract ,block.timestamp) */\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC721A/MintNagaKids.sol\":4005:4295  {... */\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":3943:4295  function withdraw(address _to) public onlyRole(WITHDRAW_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":2781:3020  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_195:\n        /* \"ERC721A/MintNagaKids.sol\":2900:2910  merkleRoot */\n      0x04\n      dup1\n      sload\n        /* \"ERC721A/MintNagaKids.sol\":2921:2945  merkleRoot = _merkleRoot */\n      swap1\n      dup4\n      swap1\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":2963:3012  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5872:5897   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":5928:5930   */\n      0x20\n        /* \"#utility.yul\":5913:5931   */\n      dup2\n      add\n        /* \"#utility.yul\":5906:5940   */\n      dup6\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":2963:3012  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n      0x123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe\n      swap2\n        /* \"#utility.yul\":5845:5863   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":2963:3012  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC721A/MintNagaKids.sol\":2861:3020  {... */\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":2781:3020  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":4303:4694  function withdrawCurrency(address _to,address _currency) public onlyRole(WITHDRAW_ROLE) {... */\n    tag_90:\n      0x00\n      dup1\n      mload\n      0x20\n      data_71bc58b11912e913810b39e571f45210df6492f34a736e059bce6194bd700432\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_200\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_200:\n        /* \"ERC721A/MintNagaKids.sol\":4427:4469  IERC20(_currency).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4463:4467  this */\n      address\n        /* \"ERC721A/MintNagaKids.sol\":4427:4469  IERC20(_currency).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4122:4173   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4402:4424  uint balanceOfContract */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":4427:4454  IERC20(_currency).balanceOf */\n      dup5\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4095:4113   */\n      0x24\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4427:4469  IERC20(_currency).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_206:\n        /* \"ERC721A/MintNagaKids.sol\":4402:4469  uint balanceOfContract = IERC20(_currency).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4508:4509  0 */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":4488:4505  balanceOfContract */\n      dup2\n        /* \"ERC721A/MintNagaKids.sol\":4488:4509  balanceOfContract > 0 */\n      gt\n        /* \"ERC721A/MintNagaKids.sol\":4480:4534  require(balanceOfContract > 0, \"Insufficient Balance\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4991:4993   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4480:4534  require(balanceOfContract > 0, \"Insufficient Balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4973:4994   */\n      mstore\n        /* \"#utility.yul\":5030:5032   */\n      0x14\n        /* \"#utility.yul\":5010:5028   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5003:5033   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742042616c616e6365)\n        /* \"#utility.yul\":5049:5067   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5042:5092   */\n      mstore\n        /* \"#utility.yul\":5109:5127   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4480:4534  require(balanceOfContract > 0, \"Insufficient Balance\") */\n      tag_171\n        /* \"#utility.yul\":4789:5133   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4480:4534  require(balanceOfContract > 0, \"Insufficient Balance\") */\n    tag_207:\n        /* \"ERC721A/MintNagaKids.sol\":4545:4595  IERC20(_currency).transfer(_to, balanceOfContract) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6351:6383   */\n      dup6\n      dup2\n      and\n        /* \"ERC721A/MintNagaKids.sol\":4545:4595  IERC20(_currency).transfer(_to, balanceOfContract) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6333:6384   */\n      mstore\n        /* \"#utility.yul\":6400:6418   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6393:6427   */\n      dup4\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4545:4571  IERC20(_currency).transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":6306:6324   */\n      0x44\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4545:4595  IERC20(_currency).transfer(_to, balanceOfContract) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4621:4686  WithdrawCurrency(_to,_currency,balanceOfContract,block.timestamp) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7007:7022   */\n      dup1\n      dup8\n      and\n        /* \"#utility.yul\":6989:7023   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7059:7074   */\n      dup6\n      and\n        /* \"#utility.yul\":7054:7056   */\n      0x20\n        /* \"#utility.yul\":7039:7057   */\n      dup3\n      add\n        /* \"#utility.yul\":7032:7075   */\n      mstore\n        /* \"#utility.yul\":7091:7109   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":7084:7118   */\n      dup3\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4670:4685  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":7149:7151   */\n      0x60\n        /* \"#utility.yul\":7134:7152   */\n      dup3\n      add\n        /* \"#utility.yul\":7127:7161   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4621:4686  WithdrawCurrency(_to,_currency,balanceOfContract,block.timestamp) */\n      0xb818a975f91276df8ba59329becbc23c793df0d503c19ac296c3c372a1fa0461\n      swap1\n        /* \"#utility.yul\":6938:6941   */\n      0x80\n        /* \"#utility.yul\":6923:6942   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4621:4686  WithdrawCurrency(_to,_currency,balanceOfContract,block.timestamp) */\n      tag_192\n        /* \"#utility.yul\":6720:7167   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":2242:2549  function setNagaKidContract(INagaKid _nagaKid) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_219\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_219:\n        /* \"ERC721A/MintNagaKids.sol\":2368:2383  nagaKidContract */\n      0x02\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":2395:2421  nagaKidContract = _nagaKid */\n      dup5\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":2490:2541  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n      0x40\n      dup1\n      mload\n        /* \"ERC721A/MintNagaKids.sol\":2368:2383  nagaKidContract */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":7384:7418   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7449:7451   */\n      0x20\n        /* \"#utility.yul\":7434:7452   */\n      dup3\n      add\n        /* \"#utility.yul\":7427:7470   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":2395:2421  nagaKidContract = _nagaKid */\n      dup5\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":2490:2541  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n      0xabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d973\n      swap2\n        /* \"#utility.yul\":7319:7337   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":2490:2541  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n      tag_192\n        /* \"#utility.yul\":7172:7476   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3028:3935  function mint(bytes32[] calldata _proof, uint256 _amount, bytes32 _round) public payable nonReentrant {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7683:7685   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7665:7686   */\n      mstore\n        /* \"#utility.yul\":7722:7724   */\n      0x1f\n        /* \"#utility.yul\":7702:7720   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7695:7725   */\n      mstore\n        /* \"#utility.yul\":7761:7794   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7741:7759   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7734:7795   */\n      mstore\n        /* \"#utility.yul\":7812:7830   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_171\n        /* \"#utility.yul\":7481:7836   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_224:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":3149:3155  _round */\n      dup1\n        /* \"ERC721A/MintNagaKids.sol\":3141:3191  require(_round != DEFAULT,\"Mint is not approved.\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8043:8045   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3141:3191  require(_round != DEFAULT,\"Mint is not approved.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8025:8046   */\n      mstore\n        /* \"#utility.yul\":8082:8084   */\n      0x15\n        /* \"#utility.yul\":8062:8080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8055:8085   */\n      mstore\n      shl(0x59, 0x26b4b73a1034b9903737ba1030b8383937bb32b217)\n        /* \"#utility.yul\":8101:8119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8094:8145   */\n      mstore\n        /* \"#utility.yul\":8162:8180   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3141:3191  require(_round != DEFAULT,\"Mint is not approved.\") */\n      tag_171\n        /* \"#utility.yul\":7841:8186   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3141:3191  require(_round != DEFAULT,\"Mint is not approved.\") */\n    tag_228:\n        /* \"ERC721A/MintNagaKids.sol\":3230:3236  _round */\n      dup1\n        /* \"ERC721A/MintNagaKids.sol\":3210:3226  currentMintRound */\n      sload(0x03)\n        /* \"ERC721A/MintNagaKids.sol\":3210:3236  currentMintRound == _round */\n      eq\n        /* \"ERC721A/MintNagaKids.sol\":3202:3280  require(currentMintRound == _round, \"Contract are not in this minting round.\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8393:8395   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3202:3280  require(currentMintRound == _round, \"Contract are not in this minting round.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8375:8396   */\n      mstore\n        /* \"#utility.yul\":8432:8434   */\n      0x27\n        /* \"#utility.yul\":8412:8430   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8405:8435   */\n      mstore\n        /* \"#utility.yul\":8471:8505   */\n      0x436f6e747261637420617265206e6f7420696e2074686973206d696e74696e67\n        /* \"#utility.yul\":8451:8469   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8444:8506   */\n      mstore\n      shl(0xc9, 0x103937bab73217)\n        /* \"#utility.yul\":8522:8540   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8515:8552   */\n      mstore\n        /* \"#utility.yul\":8569:8588   */\n      0x84\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3202:3280  require(currentMintRound == _round, \"Contract are not in this minting round.\") */\n      tag_171\n        /* \"#utility.yul\":8191:8594   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3202:3280  require(currentMintRound == _round, \"Contract are not in this minting round.\") */\n    tag_231:\n        /* \"ERC721A/MintNagaKids.sol\":3328:3342  getMaxSupply() */\n      tag_234\n        /* \"ERC721A/MintNagaKids.sol\":3328:3340  getMaxSupply */\n      tag_70\n        /* \"ERC721A/MintNagaKids.sol\":3328:3342  getMaxSupply() */\n      jump\t// in\n    tag_234:\n        /* \"ERC721A/MintNagaKids.sol\":3318:3325  _amount */\n      dup3\n        /* \"ERC721A/MintNagaKids.sol\":3299:3315  getTotalSupply() */\n      tag_235\n        /* \"ERC721A/MintNagaKids.sol\":3299:3313  getTotalSupply */\n      tag_122\n        /* \"ERC721A/MintNagaKids.sol\":3299:3315  getTotalSupply() */\n      jump\t// in\n    tag_235:\n        /* \"ERC721A/MintNagaKids.sol\":3299:3325  getTotalSupply() + _amount */\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"ERC721A/MintNagaKids.sol\":3299:3342  getTotalSupply() + _amount < getMaxSupply() */\n      lt\n        /* \"ERC721A/MintNagaKids.sol\":3291:3358  require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9066:9068   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3291:3358  require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9048:9069   */\n      mstore\n        /* \"#utility.yul\":9105:9107   */\n      0x0b\n        /* \"#utility.yul\":9085:9103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9078:9108   */\n      mstore\n      shl(0xa8, 0x4f76657220737570706c79)\n        /* \"#utility.yul\":9124:9142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9117:9158   */\n      mstore\n        /* \"#utility.yul\":9175:9193   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3291:3358  require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\") */\n      tag_171\n        /* \"#utility.yul\":8864:9199   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3291:3358  require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\") */\n    tag_238:\n        /* \"ERC721A/MintNagaKids.sol\":3390:3400  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":5139:5143  bool */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":5163:5183  _isUserMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5163:5176  _isUserMinted */\n      0x05\n        /* \"ERC721A/MintNagaKids.sol\":5163:5183  _isUserMinted[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":5163:5191  _isUserMinted[_user][_round] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ERC721A/MintNagaKids.sol\":3377:3417  isUserMinted(msg.sender,_round) == false */\n      iszero\n        /* \"ERC721A/MintNagaKids.sol\":3369:3445  require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9406:9408   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3369:3445  require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9388:9409   */\n      mstore\n        /* \"#utility.yul\":9445:9447   */\n      0x17\n        /* \"#utility.yul\":9425:9443   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9418:9448   */\n      mstore\n        /* \"#utility.yul\":9484:9509   */\n      0x596f752061726520616c7265616479206d696e7465642e000000000000000000\n        /* \"#utility.yul\":9464:9482   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9457:9510   */\n      mstore\n        /* \"#utility.yul\":9527:9545   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3369:3445  require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\") */\n      tag_171\n        /* \"#utility.yul\":9204:9551   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3369:3445  require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\") */\n    tag_242:\n        /* \"ERC721A/MintNagaKids.sol\":3464:3479  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":3464:3503  nagaKidContract.isMinter(address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x55138f0d)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3497:3501  this */\n      address\n        /* \"ERC721A/MintNagaKids.sol\":3464:3503  nagaKidContract.isMinter(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4122:4173   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":3464:3479  nagaKidContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":3464:3488  nagaKidContract.isMinter */\n      0xaa271e1a\n      swap1\n        /* \"#utility.yul\":4095:4113   */\n      0x24\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3464:3503  nagaKidContract.isMinter(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_248:\n        /* \"ERC721A/MintNagaKids.sol\":3456:3538  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9758:9760   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3456:3538  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9740:9761   */\n      mstore\n        /* \"#utility.yul\":9797:9799   */\n      0x1e\n        /* \"#utility.yul\":9777:9795   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9770:9800   */\n      mstore\n        /* \"#utility.yul\":9836:9868   */\n      0x436f6e7472616374204d696e74206973206e6f7420617070726f7665642e0000\n        /* \"#utility.yul\":9816:9834   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9809:9869   */\n      mstore\n        /* \"#utility.yul\":9886:9904   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3456:3538  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      tag_171\n        /* \"#utility.yul\":9556:9910   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3456:3538  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n    tag_249:\n        /* \"ERC721A/MintNagaKids.sol\":3557:3653  MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))) */\n      tag_252\n        /* \"ERC721A/MintNagaKids.sol\":3576:3582  _proof */\n      dup5\n      dup5\n        /* \"ERC721A/MintNagaKids.sol\":3557:3653  MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":3584:3594  merkleRoot */\n      sload(0x04)\n        /* \"ERC721A/MintNagaKids.sol\":3606:3651  abi.encodePacked(msg.sender, _amount, _round) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"ERC721A/MintNagaKids.sol\":3623:3633  msg.sender */\n      caller\n        /* \"#utility.yul\":10120:10122   */\n      0x60\n        /* \"#utility.yul\":10116:10131   */\n      shl\n        /* \"#utility.yul\":10112:10165   */\n      and\n        /* \"ERC721A/MintNagaKids.sol\":3606:3651  abi.encodePacked(msg.sender, _amount, _round) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":10100:10166   */\n      mstore\n        /* \"#utility.yul\":10182:10194   */\n      0x34\n      dup2\n      add\n        /* \"#utility.yul\":10175:10203   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":10219:10231   */\n      0x54\n      dup2\n      add\n        /* \"#utility.yul\":10212:10240   */\n      dup8\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3584:3594  merkleRoot */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10268   */\n      0x74\n      add\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":3606:3651  abi.encodePacked(msg.sender, _amount, _round) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3596:3652  keccak256(abi.encodePacked(msg.sender, _amount, _round)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":3557:3575  MerkleProof.verify */\n      tag_255\n        /* \"ERC721A/MintNagaKids.sol\":3557:3653  MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))) */\n      jump\t// in\n    tag_252:\n        /* \"ERC721A/MintNagaKids.sol\":3549:3695  require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10481:10483   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3549:3695  require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10463:10484   */\n      mstore\n        /* \"#utility.yul\":10520:10522   */\n      0x25\n        /* \"#utility.yul\":10500:10518   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10493:10523   */\n      mstore\n        /* \"#utility.yul\":10559:10593   */\n      0x556e617574686f72697a65642057686974656c6973744d696e74205468697320\n        /* \"#utility.yul\":10539:10557   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10532:10594   */\n      mstore\n      shl(0xd9, 0x2ab9b2b917)\n        /* \"#utility.yul\":10610:10628   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10603:10638   */\n      mstore\n        /* \"#utility.yul\":10655:10674   */\n      0x84\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3549:3695  require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\") */\n      tag_171\n        /* \"#utility.yul\":10279:10680   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3549:3695  require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\") */\n    tag_256:\n        /* \"ERC721A/MintNagaKids.sol\":3722:3732  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":3708:3733  _isUserMinted[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3708:3721  _isUserMinted */\n      0x05\n        /* \"ERC721A/MintNagaKids.sol\":3708:3733  _isUserMinted[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":3708:3741  _isUserMinted[msg.sender][_round] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":3708:3748  _isUserMinted[msg.sender][_round] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ERC721A/MintNagaKids.sol\":3744:3748  true */\n      0x01\n        /* \"ERC721A/MintNagaKids.sol\":3708:3748  _isUserMinted[msg.sender][_round] = true */\n      or\n      swap1\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":3759:3788  _userMintedAmount[msg.sender] */\n      swap3\n      dup3\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3759:3776  _userMintedAmount */\n      0x06\n        /* \"ERC721A/MintNagaKids.sol\":3759:3788  _userMintedAmount[msg.sender] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":3759:3796  _userMintedAmount[msg.sender][_round] */\n      dup5\n      dup4\n      mstore\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":3759:3807  _userMintedAmount[msg.sender][_round] += _amount */\n      dup1\n      sload\n        /* \"ERC721A/MintNagaKids.sol\":3800:3807  _amount */\n      dup5\n      swap3\n        /* \"ERC721A/MintNagaKids.sol\":3708:3733  _isUserMinted[msg.sender] */\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":3759:3807  _userMintedAmount[msg.sender][_round] += _amount */\n      tag_259\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":3800:3807  _amount */\n      dup5\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":3759:3807  _userMintedAmount[msg.sender][_round] += _amount */\n      tag_237\n      jump\t// in\n    tag_259:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":3820:3835  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":3820:3865  nagaKidContract.batchMint(msg.sender,_amount) */\n      mload(0x40)\n      shl(0xe0, 0x43508b05)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3846:3856  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":3820:3865  nagaKidContract.batchMint(msg.sender,_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6333:6384   */\n      mstore\n        /* \"#utility.yul\":6400:6418   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6393:6427   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":3820:3835  nagaKidContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":3820:3845  nagaKidContract.batchMint */\n      0x43508b05\n      swap1\n        /* \"#utility.yul\":6306:6324   */\n      0x44\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3820:3865  nagaKidContract.batchMint(msg.sender,_amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_261:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_263:\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":3883:3927  Minted(msg.sender, _amount, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5872:5897   */\n      dup6\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3911:3926  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":5928:5930   */\n      0x20\n        /* \"#utility.yul\":5913:5931   */\n      dup3\n      add\n        /* \"#utility.yul\":5906:5940   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3890:3900  msg.sender */\n      caller\n      swap4\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":3883:3927  Minted(msg.sender, _amount, block.timestamp) */\n      0x25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff\n      swap3\n      pop\n        /* \"#utility.yul\":5845:5863   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3883:3927  Minted(msg.sender, _amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":3028:3935  function mint(bytes32[] calldata _proof, uint256 _amount, bytes32 _round) public payable nonReentrant {... */\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":4702:5059  function withdrawNFT(address _to,address _NFT,uint256 _tokenId) public onlyRole(WITHDRAW_ROLE) {... */\n    tag_119:\n      0x00\n      dup1\n      mload\n      0x20\n      data_71bc58b11912e913810b39e571f45210df6492f34a736e059bce6194bd700432\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_268\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_268:\n        /* \"ERC721A/MintNagaKids.sol\":4816:4847  IERC721(_NFT).ownerOf(_tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":643:668   */\n      dup4\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4859:4863  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":4816:4837  IERC721(_NFT).ownerOf */\n      dup6\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":616:634   */\n      0x24\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4816:4847  IERC721(_NFT).ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_272\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_272:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_273\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":4816:4864  IERC721(_NFT).ownerOf(_tokenId) == address(this) */\n      and\n      eq\n        /* \"ERC721A/MintNagaKids.sol\":4808:4906  require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11396:11398   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4808:4906  require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11378:11399   */\n      mstore\n        /* \"#utility.yul\":11435:11437   */\n      0x25\n        /* \"#utility.yul\":11415:11433   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11408:11438   */\n      mstore\n        /* \"#utility.yul\":11474:11508   */\n      0x5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e\n        /* \"#utility.yul\":11454:11472   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11447:11509   */\n      mstore\n      shl(0xda, 0x1d1c9858dd)\n        /* \"#utility.yul\":11525:11543   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11518:11553   */\n      mstore\n        /* \"#utility.yul\":11570:11589   */\n      0x84\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4808:4906  require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\") */\n      tag_171\n        /* \"#utility.yul\":11194:11595   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4808:4906  require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\") */\n    tag_275:\n        /* \"ERC721A/MintNagaKids.sol\":4919:4979  IERC721(_NFT).safeTransferFrom(address(this), _to, _tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4958:4962  this */\n      address\n        /* \"ERC721A/MintNagaKids.sol\":4919:4979  IERC721(_NFT).safeTransferFrom(address(this), _to, _tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11840:11874   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11910:11925   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11890:11908   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":11883:11926   */\n      mstore\n        /* \"#utility.yul\":11942:11960   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11935:11969   */\n      dup5\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4919:4949  IERC721(_NFT).safeTransferFrom */\n      dup5\n      and\n      swap1\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":11775:11793   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4919:4979  IERC721(_NFT).safeTransferFrom(address(this), _to, _tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_280\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_280:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_282\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_282:\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5005:5051  WithdrawNFT(_to,_NFT,_tokenId,block.timestamp) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7007:7022   */\n      dup1\n      dup10\n      and\n        /* \"#utility.yul\":6989:7023   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7059:7074   */\n      dup8\n      and\n        /* \"#utility.yul\":7054:7056   */\n      0x20\n        /* \"#utility.yul\":7039:7057   */\n      dup3\n      add\n        /* \"#utility.yul\":7032:7075   */\n      mstore\n        /* \"#utility.yul\":7091:7109   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":7084:7118   */\n      dup6\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5035:5050  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":7149:7151   */\n      0x60\n        /* \"#utility.yul\":7134:7152   */\n      dup3\n      add\n        /* \"#utility.yul\":7127:7161   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5005:5051  WithdrawNFT(_to,_NFT,_tokenId,block.timestamp) */\n      0x0127a8d3f57942833f6930572bce52ad882683e36eeb5830d199d3fa4bfa9467\n      swap3\n      pop\n        /* \"#utility.yul\":6938:6941   */\n      0x80\n        /* \"#utility.yul\":6923:6942   */\n      add\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5005:5051  WithdrawNFT(_to,_NFT,_tokenId,block.timestamp) */\n      tag_192\n        /* \"#utility.yul\":6720:7167   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":5358:5469  function getTotalSupply() public view returns (uint256) {... */\n    tag_122:\n        /* \"ERC721A/MintNagaKids.sol\":5432:5447  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":5432:5461  nagaKidContract.totalSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x18160ddd)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC721A/MintNagaKids.sol\":5405:5412  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":5432:5447  nagaKidContract */\n      and\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":5432:5459  nagaKidContract.totalSupply */\n      0x18160ddd\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":5432:5461  nagaKidContract.totalSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ERC721A/MintNagaKids.sol\":5432:5447  nagaKidContract */\n      dup7\n        /* \"ERC721A/MintNagaKids.sol\":5432:5461  nagaKidContract.totalSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_290\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5289  _revokeRole(role, account) */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5275:5279  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5281:5288  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5274  _revokeRole */\n      tag_174\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5289  _revokeRole(role, account) */\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":2557:2773  function setRound(bytes32 _round) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_294\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_294:\n        /* \"ERC721A/MintNagaKids.sol\":2661:2677  currentMintRound */\n      0x03\n      dup1\n      sload\n        /* \"ERC721A/MintNagaKids.sol\":2688:2713  currentMintRound = _round */\n      swap1\n      dup4\n      swap1\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":2731:2765  RoundChanged(_roundBefore, _round) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5872:5897   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":5928:5930   */\n      0x20\n        /* \"#utility.yul\":5913:5931   */\n      dup2\n      add\n        /* \"#utility.yul\":5906:5940   */\n      dup6\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":2731:2765  RoundChanged(_roundBefore, _round) */\n      0x521ec96875ca228cd2fc1dbd4c927a34328c9ce1a83bcb8c1f633f012c90d785\n      swap2\n        /* \"#utility.yul\":5845:5863   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":2731:2765  RoundChanged(_roundBefore, _round) */\n      tag_197\n        /* \"#utility.yul\":5698:5946   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1663:1676  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1707  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n      tag_299\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1724:1730  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1721  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n      tag_301\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1733:1734  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n      tag_237\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1710:1735  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_303\n      jumpi\n      tag_303\n      tag_304\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_305\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_305:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1735  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1751  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1753  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1754  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_307\n      jumpi\n      tag_307\n      tag_308\n      jump\t// in\n    tag_307:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1760  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1776  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1777:1778  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1779  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_310\n      jumpi\n      tag_310\n      tag_308\n      jump\t// in\n    tag_310:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1785  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1809  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n      tag_314\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1816:1822  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1813  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n      tag_300\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n      tag_315\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1825:1826  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n      tag_237\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1826  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1832:1833  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1829  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1833  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_312\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1884  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1887:1890  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1890  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1866:1891  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_317\n      jumpi\n      tag_317\n      tag_308\n      jump\t// in\n    tag_317:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1860  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1861:1862  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1863  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_319\n      jumpi\n      tag_319\n      tag_308\n      jump\t// in\n    tag_319:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1891  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1915:1916  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1905:1916  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1835:1838  --i */\n      tag_320\n      dup2\n      tag_321\n      jump\t// in\n    tag_320:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_311)\n    tag_312:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1944:1954  value == 0 */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12760:12762   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12742:12763   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12779:12797   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12772:12802   */\n      mstore\n        /* \"#utility.yul\":12838:12872   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":12818:12836   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12811:12873   */\n      mstore\n        /* \"#utility.yul\":12890:12908   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_171\n        /* \"#utility.yul\":12558:12914   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2015:2021  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_327\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_329\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n      tag_331\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7335:7339  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7341:7348  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7334  hasRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7371  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7397:7401  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7447:7459  _msgSender() */\n      tag_333\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7447:7459  _msgSender() */\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7438:7445  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7432:7436  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7836  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7707  hasRole(role, account) */\n      tag_336\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7693:7697  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7699:7706  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7692  hasRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7707  hasRole(role, account) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7681:7830  if (hasRole(role, account)) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7755:7760  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7752  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7760  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7755:7760  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7836  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1154:1338  function verify(... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1275:1279  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1327:1331  root */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1323  processProof(proof, leaf) */\n      tag_340\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1311:1316  proof */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1318:1322  leaf */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1310  processProof */\n      tag_341\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1323  processProof(proof, leaf) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1331  processProof(proof, leaf) == root */\n      eq\n      swap5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1154:1338  function verify(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_343\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      tag_345\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4017:4024  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4027:4029  20 */\n      0x14\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      tag_346\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4129:4133  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4136:4138  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_347\n      swap3\n      swap2\n      swap1\n      tag_348\n      jump\t// in\n    tag_347:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4193  revert(... */\n      dup3\n      mstore\n      tag_171\n      swap2\n      0x04\n      add\n      tag_350\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1689:2351  function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1772:1779  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1814:1818  leaf */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1772:1779  bytes32 */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1852:1857  proof */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1852:1864  proof.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1848:1849  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1848:1864  i < proof.length */\n      lt\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n      iszero\n      tag_353\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1885:1905  bytes32 proofElement */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1908:1913  proof */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1914:1915  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1908:1916  proof[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_356\n      jumpi\n      tag_356\n      tag_308\n      jump\t// in\n    tag_356:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1885:1916  bytes32 proofElement = proof[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1950:1962  proofElement */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1934:1946  computedHash */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1934:1962  computedHash <= proofElement */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2425:2438  bytes32 value */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2473:2488  mstore(0x00, a) */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2508:2512  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2501:2516  mstore(0x20, b) */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2554:2558  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2538:2559  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2060:2117  computedHash = _efficientHash(computedHash, proofElement) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n      jump(tag_360)\n    tag_357:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2425:2438  bytes32 value */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2473:2488  mstore(0x00, a) */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2508:2512  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2501:2516  mstore(0x20, b) */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2554:2558  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2538:2559  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2234:2291  computedHash = _efficientHash(proofElement, computedHash) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n    tag_360:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1866:1869  i++ */\n      dup1\n      tag_362\n      dup2\n      tag_363\n      jump\t// in\n    tag_362:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n      jump(tag_352)\n    tag_353:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2332:2344  computedHash */\n      swap4\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1689:2351  function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_36:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_370:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":679:859   */\n    tag_48:\n        /* \"#utility.yul\":738:744   */\n      0x00\n        /* \"#utility.yul\":791:793   */\n      0x20\n        /* \"#utility.yul\":779:788   */\n      dup3\n        /* \"#utility.yul\":770:777   */\n      dup5\n        /* \"#utility.yul\":766:789   */\n      sub\n        /* \"#utility.yul\":762:794   */\n      slt\n        /* \"#utility.yul\":759:811   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":807:808   */\n      0x00\n        /* \"#utility.yul\":804:805   */\n      dup1\n        /* \"#utility.yul\":797:809   */\n      revert\n        /* \"#utility.yul\":759:811   */\n    tag_375:\n      pop\n        /* \"#utility.yul\":830:853   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":679:859   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":864:995   */\n    tag_365:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":939:970   */\n      dup2\n      and\n        /* \"#utility.yul\":929:971   */\n      dup2\n      eq\n        /* \"#utility.yul\":919:989   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":985:986   */\n      0x00\n        /* \"#utility.yul\":982:983   */\n      dup1\n        /* \"#utility.yul\":975:987   */\n      revert\n        /* \"#utility.yul\":1000:1315   */\n    tag_62:\n        /* \"#utility.yul\":1068:1074   */\n      0x00\n        /* \"#utility.yul\":1076:1082   */\n      dup1\n        /* \"#utility.yul\":1129:1131   */\n      0x40\n        /* \"#utility.yul\":1117:1126   */\n      dup4\n        /* \"#utility.yul\":1108:1115   */\n      dup6\n        /* \"#utility.yul\":1104:1127   */\n      sub\n        /* \"#utility.yul\":1100:1132   */\n      slt\n        /* \"#utility.yul\":1097:1149   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":1145:1146   */\n      0x00\n        /* \"#utility.yul\":1142:1143   */\n      dup1\n        /* \"#utility.yul\":1135:1147   */\n      revert\n        /* \"#utility.yul\":1097:1149   */\n    tag_379:\n        /* \"#utility.yul\":1181:1190   */\n      dup3\n        /* \"#utility.yul\":1168:1191   */\n      calldataload\n        /* \"#utility.yul\":1158:1191   */\n      swap2\n      pop\n        /* \"#utility.yul\":1241:1243   */\n      0x20\n        /* \"#utility.yul\":1230:1239   */\n      dup4\n        /* \"#utility.yul\":1226:1244   */\n      add\n        /* \"#utility.yul\":1213:1245   */\n      calldataload\n        /* \"#utility.yul\":1254:1285   */\n      tag_380\n        /* \"#utility.yul\":1279:1284   */\n      dup2\n        /* \"#utility.yul\":1254:1285   */\n      tag_365\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":1304:1309   */\n      dup1\n        /* \"#utility.yul\":1294:1309   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1000:1315   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1502:1749   */\n    tag_76:\n        /* \"#utility.yul\":1561:1567   */\n      0x00\n        /* \"#utility.yul\":1614:1616   */\n      0x20\n        /* \"#utility.yul\":1602:1611   */\n      dup3\n        /* \"#utility.yul\":1593:1600   */\n      dup5\n        /* \"#utility.yul\":1589:1612   */\n      sub\n        /* \"#utility.yul\":1585:1617   */\n      slt\n        /* \"#utility.yul\":1582:1634   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":1630:1631   */\n      0x00\n        /* \"#utility.yul\":1627:1628   */\n      dup1\n        /* \"#utility.yul\":1620:1632   */\n      revert\n        /* \"#utility.yul\":1582:1634   */\n    tag_383:\n        /* \"#utility.yul\":1669:1678   */\n      dup2\n        /* \"#utility.yul\":1656:1679   */\n      calldataload\n        /* \"#utility.yul\":1688:1719   */\n      tag_322\n        /* \"#utility.yul\":1713:1718   */\n      dup2\n        /* \"#utility.yul\":1688:1719   */\n      tag_365\n      jump\t// in\n        /* \"#utility.yul\":1754:2142   */\n    tag_89:\n        /* \"#utility.yul\":1822:1828   */\n      0x00\n        /* \"#utility.yul\":1830:1836   */\n      dup1\n        /* \"#utility.yul\":1883:1885   */\n      0x40\n        /* \"#utility.yul\":1871:1880   */\n      dup4\n        /* \"#utility.yul\":1862:1869   */\n      dup6\n        /* \"#utility.yul\":1858:1881   */\n      sub\n        /* \"#utility.yul\":1854:1886   */\n      slt\n        /* \"#utility.yul\":1851:1903   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      dup1\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1851:1903   */\n    tag_386:\n        /* \"#utility.yul\":1938:1947   */\n      dup3\n        /* \"#utility.yul\":1925:1948   */\n      calldataload\n        /* \"#utility.yul\":1957:1988   */\n      tag_387\n        /* \"#utility.yul\":1982:1987   */\n      dup2\n        /* \"#utility.yul\":1957:1988   */\n      tag_365\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2007:2012   */\n      swap2\n      pop\n        /* \"#utility.yul\":2064:2066   */\n      0x20\n        /* \"#utility.yul\":2049:2067   */\n      dup4\n      add\n        /* \"#utility.yul\":2036:2068   */\n      calldataload\n        /* \"#utility.yul\":2077:2110   */\n      tag_380\n        /* \"#utility.yul\":2036:2068   */\n      dup2\n        /* \"#utility.yul\":2077:2110   */\n      tag_365\n      jump\t// in\n        /* \"#utility.yul\":2416:3173   */\n    tag_103:\n        /* \"#utility.yul\":2520:2526   */\n      0x00\n        /* \"#utility.yul\":2528:2534   */\n      dup1\n        /* \"#utility.yul\":2536:2542   */\n      0x00\n        /* \"#utility.yul\":2544:2550   */\n      dup1\n        /* \"#utility.yul\":2597:2599   */\n      0x60\n        /* \"#utility.yul\":2585:2594   */\n      dup6\n        /* \"#utility.yul\":2576:2583   */\n      dup8\n        /* \"#utility.yul\":2572:2595   */\n      sub\n        /* \"#utility.yul\":2568:2600   */\n      slt\n        /* \"#utility.yul\":2565:2617   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":2613:2614   */\n      0x00\n        /* \"#utility.yul\":2610:2611   */\n      dup1\n        /* \"#utility.yul\":2603:2615   */\n      revert\n        /* \"#utility.yul\":2565:2617   */\n    tag_393:\n        /* \"#utility.yul\":2653:2662   */\n      dup5\n        /* \"#utility.yul\":2640:2663   */\n      calldataload\n        /* \"#utility.yul\":2682:2700   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2723:2725   */\n      dup1\n        /* \"#utility.yul\":2715:2721   */\n      dup3\n        /* \"#utility.yul\":2712:2726   */\n      gt\n        /* \"#utility.yul\":2709:2743   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":2739:2740   */\n      0x00\n        /* \"#utility.yul\":2736:2737   */\n      dup1\n        /* \"#utility.yul\":2729:2741   */\n      revert\n        /* \"#utility.yul\":2709:2743   */\n    tag_394:\n        /* \"#utility.yul\":2777:2783   */\n      dup2\n        /* \"#utility.yul\":2766:2775   */\n      dup8\n        /* \"#utility.yul\":2762:2784   */\n      add\n        /* \"#utility.yul\":2752:2784   */\n      swap2\n      pop\n        /* \"#utility.yul\":2822:2829   */\n      dup8\n        /* \"#utility.yul\":2815:2819   */\n      0x1f\n        /* \"#utility.yul\":2811:2813   */\n      dup4\n        /* \"#utility.yul\":2807:2820   */\n      add\n        /* \"#utility.yul\":2803:2830   */\n      slt\n        /* \"#utility.yul\":2793:2848   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":2844:2845   */\n      0x00\n        /* \"#utility.yul\":2841:2842   */\n      dup1\n        /* \"#utility.yul\":2834:2846   */\n      revert\n        /* \"#utility.yul\":2793:2848   */\n    tag_395:\n        /* \"#utility.yul\":2884:2886   */\n      dup2\n        /* \"#utility.yul\":2871:2887   */\n      calldataload\n        /* \"#utility.yul\":2910:2912   */\n      dup2\n        /* \"#utility.yul\":2902:2908   */\n      dup2\n        /* \"#utility.yul\":2899:2913   */\n      gt\n        /* \"#utility.yul\":2896:2930   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":2926:2927   */\n      0x00\n        /* \"#utility.yul\":2923:2924   */\n      dup1\n        /* \"#utility.yul\":2916:2928   */\n      revert\n        /* \"#utility.yul\":2896:2930   */\n    tag_396:\n        /* \"#utility.yul\":2981:2988   */\n      dup9\n        /* \"#utility.yul\":2974:2978   */\n      0x20\n        /* \"#utility.yul\":2964:2970   */\n      dup3\n        /* \"#utility.yul\":2961:2962   */\n      0x05\n        /* \"#utility.yul\":2957:2971   */\n      shl\n        /* \"#utility.yul\":2953:2955   */\n      dup6\n        /* \"#utility.yul\":2949:2972   */\n      add\n        /* \"#utility.yul\":2945:2979   */\n      add\n        /* \"#utility.yul\":2942:2989   */\n      gt\n        /* \"#utility.yul\":2939:3006   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":3002:3003   */\n      0x00\n        /* \"#utility.yul\":2999:3000   */\n      dup1\n        /* \"#utility.yul\":2992:3004   */\n      revert\n        /* \"#utility.yul\":2939:3006   */\n    tag_397:\n        /* \"#utility.yul\":3033:3037   */\n      0x20\n        /* \"#utility.yul\":3025:3038   */\n      swap3\n      dup4\n      add\n      swap10\n        /* \"#utility.yul\":3057:3063   */\n      swap1\n      swap9\n      pop\n        /* \"#utility.yul\":3095:3115   */\n      swap2\n      dup8\n      add\n        /* \"#utility.yul\":3082:3116   */\n      calldataload\n      swap7\n        /* \"#utility.yul\":3163:3165   */\n      0x40\n        /* \"#utility.yul\":3148:3166   */\n      add\n        /* \"#utility.yul\":3135:3167   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2416:3173   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3178:3493   */\n    tag_112:\n        /* \"#utility.yul\":3246:3252   */\n      0x00\n        /* \"#utility.yul\":3254:3260   */\n      dup1\n        /* \"#utility.yul\":3307:3309   */\n      0x40\n        /* \"#utility.yul\":3295:3304   */\n      dup4\n        /* \"#utility.yul\":3286:3293   */\n      dup6\n        /* \"#utility.yul\":3282:3305   */\n      sub\n        /* \"#utility.yul\":3278:3310   */\n      slt\n        /* \"#utility.yul\":3275:3327   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3320:3321   */\n      dup1\n        /* \"#utility.yul\":3313:3325   */\n      revert\n        /* \"#utility.yul\":3275:3327   */\n    tag_399:\n        /* \"#utility.yul\":3362:3371   */\n      dup3\n        /* \"#utility.yul\":3349:3372   */\n      calldataload\n        /* \"#utility.yul\":3381:3412   */\n      tag_400\n        /* \"#utility.yul\":3406:3411   */\n      dup2\n        /* \"#utility.yul\":3381:3412   */\n      tag_365\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3431:3436   */\n      swap5\n        /* \"#utility.yul\":3483:3485   */\n      0x20\n        /* \"#utility.yul\":3468:3486   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3455:3487   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3178:3493   */\n      jump\t// out\n        /* \"#utility.yul\":3498:3954   */\n    tag_118:\n        /* \"#utility.yul\":3575:3581   */\n      0x00\n        /* \"#utility.yul\":3583:3589   */\n      dup1\n        /* \"#utility.yul\":3591:3597   */\n      0x00\n        /* \"#utility.yul\":3644:3646   */\n      0x60\n        /* \"#utility.yul\":3632:3641   */\n      dup5\n        /* \"#utility.yul\":3623:3630   */\n      dup7\n        /* \"#utility.yul\":3619:3642   */\n      sub\n        /* \"#utility.yul\":3615:3647   */\n      slt\n        /* \"#utility.yul\":3612:3664   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":3660:3661   */\n      0x00\n        /* \"#utility.yul\":3657:3658   */\n      dup1\n        /* \"#utility.yul\":3650:3662   */\n      revert\n        /* \"#utility.yul\":3612:3664   */\n    tag_402:\n        /* \"#utility.yul\":3699:3708   */\n      dup4\n        /* \"#utility.yul\":3686:3709   */\n      calldataload\n        /* \"#utility.yul\":3718:3749   */\n      tag_403\n        /* \"#utility.yul\":3743:3748   */\n      dup2\n        /* \"#utility.yul\":3718:3749   */\n      tag_365\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3768:3773   */\n      swap3\n      pop\n        /* \"#utility.yul\":3825:3827   */\n      0x20\n        /* \"#utility.yul\":3810:3828   */\n      dup5\n      add\n        /* \"#utility.yul\":3797:3829   */\n      calldataload\n        /* \"#utility.yul\":3838:3871   */\n      tag_404\n        /* \"#utility.yul\":3797:3829   */\n      dup2\n        /* \"#utility.yul\":3838:3871   */\n      tag_365\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3498:3954   */\n      swap3\n      swap6\n        /* \"#utility.yul\":3890:3897   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3944:3946   */\n      0x40\n        /* \"#utility.yul\":3929:3947   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3916:3948   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":3498:3954   */\n      jump\t// out\n        /* \"#utility.yul\":4600:4784   */\n    tag_179:\n        /* \"#utility.yul\":4670:4676   */\n      0x00\n        /* \"#utility.yul\":4723:4725   */\n      0x20\n        /* \"#utility.yul\":4711:4720   */\n      dup3\n        /* \"#utility.yul\":4702:4709   */\n      dup5\n        /* \"#utility.yul\":4698:4721   */\n      sub\n        /* \"#utility.yul\":4694:4726   */\n      slt\n        /* \"#utility.yul\":4691:4743   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":4739:4740   */\n      0x00\n        /* \"#utility.yul\":4736:4737   */\n      dup1\n        /* \"#utility.yul\":4729:4741   */\n      revert\n        /* \"#utility.yul\":4691:4743   */\n    tag_408:\n      pop\n        /* \"#utility.yul\":4762:4778   */\n      mload\n      swap2\n        /* \"#utility.yul\":4600:4784   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6438:6715   */\n    tag_214:\n        /* \"#utility.yul\":6505:6511   */\n      0x00\n        /* \"#utility.yul\":6558:6560   */\n      0x20\n        /* \"#utility.yul\":6546:6555   */\n      dup3\n        /* \"#utility.yul\":6537:6544   */\n      dup5\n        /* \"#utility.yul\":6533:6556   */\n      sub\n        /* \"#utility.yul\":6529:6561   */\n      slt\n        /* \"#utility.yul\":6526:6578   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":6574:6575   */\n      0x00\n        /* \"#utility.yul\":6571:6572   */\n      dup1\n        /* \"#utility.yul\":6564:6576   */\n      revert\n        /* \"#utility.yul\":6526:6578   */\n    tag_416:\n        /* \"#utility.yul\":6606:6615   */\n      dup2\n        /* \"#utility.yul\":6600:6616   */\n      mload\n        /* \"#utility.yul\":6659:6664   */\n      dup1\n        /* \"#utility.yul\":6652:6665   */\n      iszero\n        /* \"#utility.yul\":6645:6666   */\n      iszero\n        /* \"#utility.yul\":6638:6643   */\n      dup2\n        /* \"#utility.yul\":6635:6667   */\n      eq\n        /* \"#utility.yul\":6625:6685   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":6681:6682   */\n      0x00\n        /* \"#utility.yul\":6678:6679   */\n      dup1\n        /* \"#utility.yul\":6671:6683   */\n      revert\n        /* \"#utility.yul\":8599:8726   */\n    tag_366:\n        /* \"#utility.yul\":8660:8670   */\n      0x4e487b71\n        /* \"#utility.yul\":8655:8658   */\n      0xe0\n        /* \"#utility.yul\":8651:8671   */\n      shl\n        /* \"#utility.yul\":8648:8649   */\n      0x00\n        /* \"#utility.yul\":8641:8672   */\n      mstore\n        /* \"#utility.yul\":8691:8695   */\n      0x11\n        /* \"#utility.yul\":8688:8689   */\n      0x04\n        /* \"#utility.yul\":8681:8696   */\n      mstore\n        /* \"#utility.yul\":8715:8719   */\n      0x24\n        /* \"#utility.yul\":8712:8713   */\n      0x00\n        /* \"#utility.yul\":8705:8720   */\n      revert\n        /* \"#utility.yul\":8731:8859   */\n    tag_237:\n        /* \"#utility.yul\":8771:8774   */\n      0x00\n        /* \"#utility.yul\":8802:8803   */\n      dup3\n        /* \"#utility.yul\":8798:8804   */\n      not\n        /* \"#utility.yul\":8795:8796   */\n      dup3\n        /* \"#utility.yul\":8792:8805   */\n      gt\n        /* \"#utility.yul\":8789:8828   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":8808:8826   */\n      tag_426\n      tag_366\n      jump\t// in\n    tag_426:\n      pop\n        /* \"#utility.yul\":8844:8853   */\n      add\n      swap1\n        /* \"#utility.yul\":8731:8859   */\n      jump\t// out\n        /* \"#utility.yul\":10938:11189   */\n    tag_274:\n        /* \"#utility.yul\":11008:11014   */\n      0x00\n        /* \"#utility.yul\":11061:11063   */\n      0x20\n        /* \"#utility.yul\":11049:11058   */\n      dup3\n        /* \"#utility.yul\":11040:11047   */\n      dup5\n        /* \"#utility.yul\":11036:11059   */\n      sub\n        /* \"#utility.yul\":11032:11064   */\n      slt\n        /* \"#utility.yul\":11029:11081   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":11077:11078   */\n      0x00\n        /* \"#utility.yul\":11074:11075   */\n      dup1\n        /* \"#utility.yul\":11067:11079   */\n      revert\n        /* \"#utility.yul\":11029:11081   */\n    tag_434:\n        /* \"#utility.yul\":11109:11118   */\n      dup2\n        /* \"#utility.yul\":11103:11119   */\n      mload\n        /* \"#utility.yul\":11128:11159   */\n      tag_322\n        /* \"#utility.yul\":11153:11158   */\n      dup2\n        /* \"#utility.yul\":11128:11159   */\n      tag_365\n      jump\t// in\n        /* \"#utility.yul\":11980:12148   */\n    tag_300:\n        /* \"#utility.yul\":12020:12027   */\n      0x00\n        /* \"#utility.yul\":12086:12087   */\n      dup2\n        /* \"#utility.yul\":12082:12083   */\n      0x00\n        /* \"#utility.yul\":12078:12084   */\n      not\n        /* \"#utility.yul\":12074:12088   */\n      div\n        /* \"#utility.yul\":12071:12072   */\n      dup4\n        /* \"#utility.yul\":12068:12089   */\n      gt\n        /* \"#utility.yul\":12063:12064   */\n      dup3\n        /* \"#utility.yul\":12056:12065   */\n      iszero\n        /* \"#utility.yul\":12049:12066   */\n      iszero\n        /* \"#utility.yul\":12045:12090   */\n      and\n        /* \"#utility.yul\":12042:12113   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":12093:12111   */\n      tag_440\n      tag_366\n      jump\t// in\n    tag_440:\n      pop\n        /* \"#utility.yul\":12133:12142   */\n      mul\n      swap1\n        /* \"#utility.yul\":11980:12148   */\n      jump\t// out\n        /* \"#utility.yul\":12153:12280   */\n    tag_304:\n        /* \"#utility.yul\":12214:12224   */\n      0x4e487b71\n        /* \"#utility.yul\":12209:12212   */\n      0xe0\n        /* \"#utility.yul\":12205:12225   */\n      shl\n        /* \"#utility.yul\":12202:12203   */\n      0x00\n        /* \"#utility.yul\":12195:12226   */\n      mstore\n        /* \"#utility.yul\":12245:12249   */\n      0x41\n        /* \"#utility.yul\":12242:12243   */\n      0x04\n        /* \"#utility.yul\":12235:12250   */\n      mstore\n        /* \"#utility.yul\":12269:12273   */\n      0x24\n        /* \"#utility.yul\":12266:12267   */\n      0x00\n        /* \"#utility.yul\":12259:12274   */\n      revert\n        /* \"#utility.yul\":12285:12412   */\n    tag_308:\n        /* \"#utility.yul\":12346:12356   */\n      0x4e487b71\n        /* \"#utility.yul\":12341:12344   */\n      0xe0\n        /* \"#utility.yul\":12337:12357   */\n      shl\n        /* \"#utility.yul\":12334:12335   */\n      0x00\n        /* \"#utility.yul\":12327:12358   */\n      mstore\n        /* \"#utility.yul\":12377:12381   */\n      0x32\n        /* \"#utility.yul\":12374:12375   */\n      0x04\n        /* \"#utility.yul\":12367:12382   */\n      mstore\n        /* \"#utility.yul\":12401:12405   */\n      0x24\n        /* \"#utility.yul\":12398:12399   */\n      0x00\n        /* \"#utility.yul\":12391:12406   */\n      revert\n        /* \"#utility.yul\":12417:12553   */\n    tag_321:\n        /* \"#utility.yul\":12456:12459   */\n      0x00\n        /* \"#utility.yul\":12484:12489   */\n      dup2\n        /* \"#utility.yul\":12474:12513   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":12493:12511   */\n      tag_445\n      tag_366\n      jump\t// in\n    tag_445:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":12529:12547   */\n      add\n      swap1\n        /* \"#utility.yul\":12417:12553   */\n      jump\t// out\n        /* \"#utility.yul\":12919:13177   */\n    tag_367:\n        /* \"#utility.yul\":12991:12992   */\n      0x00\n        /* \"#utility.yul\":13001:13114   */\n    tag_448:\n        /* \"#utility.yul\":13015:13021   */\n      dup4\n        /* \"#utility.yul\":13012:13013   */\n      dup2\n        /* \"#utility.yul\":13009:13022   */\n      lt\n        /* \"#utility.yul\":13001:13114   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":13091:13102   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":13085:13103   */\n      mload\n        /* \"#utility.yul\":13072:13083   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":13065:13104   */\n      mstore\n        /* \"#utility.yul\":13037:13039   */\n      0x20\n        /* \"#utility.yul\":13030:13040   */\n      add\n        /* \"#utility.yul\":13001:13114   */\n      jump(tag_448)\n    tag_450:\n        /* \"#utility.yul\":13132:13138   */\n      dup4\n        /* \"#utility.yul\":13129:13130   */\n      dup2\n        /* \"#utility.yul\":13126:13139   */\n      gt\n        /* \"#utility.yul\":13123:13171   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":13167:13168   */\n      0x00\n        /* \"#utility.yul\":13158:13164   */\n      dup5\n        /* \"#utility.yul\":13153:13156   */\n      dup5\n        /* \"#utility.yul\":13149:13165   */\n      add\n        /* \"#utility.yul\":13142:13169   */\n      mstore\n        /* \"#utility.yul\":13123:13171   */\n    tag_451:\n      pop\n        /* \"#utility.yul\":12919:13177   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13182:13968   */\n    tag_348:\n        /* \"#utility.yul\":13593:13618   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":13588:13591   */\n      dup2\n        /* \"#utility.yul\":13581:13619   */\n      mstore\n        /* \"#utility.yul\":13563:13566   */\n      0x00\n        /* \"#utility.yul\":13648:13654   */\n      dup4\n        /* \"#utility.yul\":13642:13655   */\n      mload\n        /* \"#utility.yul\":13664:13726   */\n      tag_453\n        /* \"#utility.yul\":13719:13725   */\n      dup2\n        /* \"#utility.yul\":13714:13716   */\n      0x17\n        /* \"#utility.yul\":13709:13712   */\n      dup6\n        /* \"#utility.yul\":13705:13717   */\n      add\n        /* \"#utility.yul\":13698:13702   */\n      0x20\n        /* \"#utility.yul\":13690:13696   */\n      dup9\n        /* \"#utility.yul\":13686:13703   */\n      add\n        /* \"#utility.yul\":13664:13726   */\n      tag_367\n      jump\t// in\n    tag_453:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":13785:13787   */\n      0x17\n        /* \"#utility.yul\":13745:13761   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":13777:13788   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":13770:13810   */\n      mstore\n        /* \"#utility.yul\":13835:13848   */\n      dup4\n      mload\n        /* \"#utility.yul\":13857:13920   */\n      tag_454\n        /* \"#utility.yul\":13835:13848   */\n      dup2\n        /* \"#utility.yul\":13906:13908   */\n      0x28\n        /* \"#utility.yul\":13898:13909   */\n      dup5\n      add\n        /* \"#utility.yul\":13891:13895   */\n      0x20\n        /* \"#utility.yul\":13879:13896   */\n      dup9\n      add\n        /* \"#utility.yul\":13857:13920   */\n      tag_367\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":13940:13957   */\n      add\n        /* \"#utility.yul\":13959:13961   */\n      0x28\n        /* \"#utility.yul\":13936:13962   */\n      add\n      swap5\n        /* \"#utility.yul\":13182:13968   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13973:14356   */\n    tag_350:\n        /* \"#utility.yul\":14122:14124   */\n      0x20\n        /* \"#utility.yul\":14111:14120   */\n      dup2\n        /* \"#utility.yul\":14104:14125   */\n      mstore\n        /* \"#utility.yul\":14085:14089   */\n      0x00\n        /* \"#utility.yul\":14154:14160   */\n      dup3\n        /* \"#utility.yul\":14148:14161   */\n      mload\n        /* \"#utility.yul\":14197:14203   */\n      dup1\n        /* \"#utility.yul\":14192:14194   */\n      0x20\n        /* \"#utility.yul\":14181:14190   */\n      dup5\n        /* \"#utility.yul\":14177:14195   */\n      add\n        /* \"#utility.yul\":14170:14204   */\n      mstore\n        /* \"#utility.yul\":14213:14279   */\n      tag_456\n        /* \"#utility.yul\":14272:14278   */\n      dup2\n        /* \"#utility.yul\":14267:14269   */\n      0x40\n        /* \"#utility.yul\":14256:14265   */\n      dup6\n        /* \"#utility.yul\":14252:14270   */\n      add\n        /* \"#utility.yul\":14247:14249   */\n      0x20\n        /* \"#utility.yul\":14239:14245   */\n      dup8\n        /* \"#utility.yul\":14235:14250   */\n      add\n        /* \"#utility.yul\":14213:14279   */\n      tag_367\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":14340:14342   */\n      0x1f\n        /* \"#utility.yul\":14319:14334   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":14315:14344   */\n      and\n        /* \"#utility.yul\":14300:14345   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":14347:14349   */\n      0x40\n        /* \"#utility.yul\":14296:14350   */\n      add\n      swap3\n        /* \"#utility.yul\":13973:14356   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14361:14496   */\n    tag_363:\n        /* \"#utility.yul\":14400:14403   */\n      0x00\n        /* \"#utility.yul\":14421:14438   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":14418:14461   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":14441:14459   */\n      tag_459\n      tag_366\n      jump\t// in\n    tag_459:\n      pop\n        /* \"#utility.yul\":14488:14489   */\n      0x01\n        /* \"#utility.yul\":14477:14490   */\n      add\n      swap1\n        /* \"#utility.yul\":14361:14496   */\n      jump\t// out\n    stop\n    data_71bc58b11912e913810b39e571f45210df6492f34a736e059bce6194bd700432 5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec\n\n    auxdata: 0xa26469706673582212209bb9fd3bdf22b22bdcafbca7ff910eba4d05f7bb54f4702ca0411d7b97c8d12564736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1178": {
									"entryPoint": null,
									"id": 1178,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_135": {
									"entryPoint": 516,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 501,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_287": {
									"entryPoint": 143,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_638": {
									"entryPoint": null,
									"id": 638,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_79": {
									"entryPoint": null,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setMerkleRoot_1255": {
									"entryPoint": 418,
									"id": 1255,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNagaKidContract_1211": {
									"entryPoint": 304,
									"id": 1211,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@toHexString_850": {
									"entryPoint": 680,
									"id": 850,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_INagaKid_$1041t_bytes32_fromMemory": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1496,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3592:16",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "129:253:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "175:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "184:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "187:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "177:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "177:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "177:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "150:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "159:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "146:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "146:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "171:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "142:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:32:16"
															},
															"nodeType": "YulIf",
															"src": "139:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "200:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "219:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "213:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "204:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "292:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "301:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "304:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "294:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "294:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "294:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "251:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "262:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "277:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "282:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "273:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "273:11:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "286:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "269:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "269:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "258:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "258:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "248:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "248:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "241:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "241:50:16"
															},
															"nodeType": "YulIf",
															"src": "238:70:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "317:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "327:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "317:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "341:35:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "361:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "372:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "357:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "357:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "351:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "351:25:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "341:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INagaKid_$1041t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "87:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "98:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "110:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "118:6:16",
														"type": ""
													}
												],
												"src": "14:368:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "516:175:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "526:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "538:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "549:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "534:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "526:4:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "561:29:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "579:3:16",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "584:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "575:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "575:11:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "588:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "571:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:19:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "565:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "606:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "621:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "629:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "617:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "617:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "599:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "653:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "664:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "649:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "649:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "681:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "669:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "669:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "642:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "642:43:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "642:43:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "477:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "488:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "496:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "507:4:16",
														"type": ""
													}
												],
												"src": "387:304:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "825:119:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "835:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "847:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "858:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "843:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "835:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "877:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "888:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "870:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "870:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "915:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "926:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "911:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "911:18:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "931:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "904:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "904:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "786:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "797:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "805:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "816:4:16",
														"type": ""
													}
												],
												"src": "696:248:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1002:205:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1012:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1021:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1016:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1081:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1106:3:16"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1111:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1102:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1102:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1125:3:16"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1130:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1121:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1121:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1115:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1115:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1095:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1095:39:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1095:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1042:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1045:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1039:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1039:13:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1053:19:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1055:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1064:1:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1067:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1060:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1060:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1055:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1035:3:16",
																"statements": []
															},
															"src": "1031:113:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1170:31:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1183:3:16"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1188:6:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1179:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1179:16:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1197:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1172:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1172:27:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1172:27:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1159:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1162:6:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1156:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:13:16"
															},
															"nodeType": "YulIf",
															"src": "1153:48:16"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "980:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "985:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "990:6:16",
														"type": ""
													}
												],
												"src": "949:258:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1601:397:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1618:3:16"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1623:25:16",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1611:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1611:38:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1658:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1678:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1672:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1672:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1662:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1720:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1728:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1739:3:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1744:2:16",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1735:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1735:12:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1749:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1694:21:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1694:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1694:62:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1765:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1779:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1784:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1775:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:16:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1769:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1811:2:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1815:2:16",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1807:11:16"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1820:19:16",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1800:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:40:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1800:40:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1849:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1871:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1865:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:13:16"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "1853:8:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1913:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1921:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1909:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1909:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1932:2:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1936:2:16",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1928:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1928:11:16"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "1941:8:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1887:21:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:63:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1887:63:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1959:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1974:2:16"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "1978:8:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1970:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1970:17:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1989:2:16",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1966:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:26:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1959:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1569:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1574:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1582:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1593:3:16",
														"type": ""
													}
												],
												"src": "1212:786:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2124:262:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2141:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2152:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2134:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2134:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2134:21:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2164:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2184:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2178:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2178:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2168:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2211:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2222:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2207:18:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2227:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2200:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2200:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2200:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2269:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2277:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2265:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2265:15:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2286:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2297:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2282:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2282:18:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2302:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2243:21:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2243:66:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2243:66:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2318:62:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2334:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2353:6:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2361:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2349:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2349:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2370:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2366:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2366:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2345:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2345:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2330:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2330:45:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2377:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2326:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2326:54:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2318:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2093:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2104:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2115:4:16",
														"type": ""
													}
												],
												"src": "2003:383:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2423:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2440:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2447:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2452:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2443:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2443:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2433:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2433:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2433:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2480:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2473:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2504:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2507:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2497:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2497:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2497:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2391:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2575:116:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2634:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2636:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2636:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2636:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2606:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2599:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2599:9:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2592:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2592:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2614:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2625:1:16",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2621:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2621:6:16"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2629:1:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2617:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2617:14:16"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2611:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2611:21:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2588:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:45:16"
															},
															"nodeType": "YulIf",
															"src": "2585:71:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2665:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2680:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2683:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2676:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2676:9:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2665:7:16"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2554:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2557:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2563:7:16",
														"type": ""
													}
												],
												"src": "2523:168:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2744:80:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2771:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2773:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2773:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2773:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2760:1:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2767:1:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2763:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2763:6:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2757:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:13:16"
															},
															"nodeType": "YulIf",
															"src": "2754:39:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2802:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2816:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2809:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2809:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2802:3:16"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2727:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2730:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2736:3:16",
														"type": ""
													}
												],
												"src": "2696:128:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2861:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2878:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2885:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2890:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2881:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2881:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2871:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2871:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2918:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2921:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2911:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2911:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2911:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2942:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2945:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2935:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2935:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2935:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2829:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2993:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3017:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3022:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3013:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3003:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3003:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3003:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3050:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3053:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3043:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3074:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3077:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3067:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3067:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3067:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2961:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3140:89:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3167:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3169:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3169:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3169:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3160:5:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3153:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:13:16"
															},
															"nodeType": "YulIf",
															"src": "3150:39:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3198:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3209:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3220:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3216:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3216:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3205:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3205:18:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3198:3:16"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3122:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3132:3:16",
														"type": ""
													}
												],
												"src": "3093:136:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3408:182:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3418:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3418:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3418:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3459:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3470:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3455:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3455:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3475:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3448:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3448:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3448:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3498:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3509:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3494:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3494:18:16"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3514:34:16",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3487:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3487:62:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3558:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3570:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3581:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3566:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3566:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3558:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3385:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3399:4:16",
														"type": ""
													}
												],
												"src": "3234:356:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_INagaKid_$1041t_bytes32_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001e5238038062001e52833981016040819052620000349162000468565b60018055620000456000336200008f565b620000717f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec336200008f565b6200007c8262000130565b6200008781620001a2565b50506200061e565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200012c576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000eb3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006200013d81620001f5565b600280546001600160a01b038481166001600160a01b0319831681179093556040805191909216808252602082019390935284917fabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d973910160405180910390a150505050565b6000620001af81620001f5565b600480549083905560408051828152602081018590527f123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe910160405180910390a1505050565b62000201813362000204565b50565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200012c576200024e816001600160a01b03166014620002a860201b620010ac1760201c565b62000264836020620010ac620002a8821b17811c565b60405160200162000277929190620004d7565b60408051601f198184030181529082905262461bcd60e51b82526200029f9160040162000550565b60405180910390fd5b60606000620002b98360026200059b565b620002c6906002620005bd565b6001600160401b03811115620002e057620002e0620005d8565b6040519080825280601f01601f1916602001820160405280156200030b576020820181803683370190505b509050600360fc1b81600081518110620003295762000329620005ee565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106200035b576200035b620005ee565b60200101906001600160f81b031916908160001a9053506000620003818460026200059b565b6200038e906001620005bd565b90505b600181111562000410576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110620003c657620003c6620005ee565b1a60f81b828281518110620003df57620003df620005ee565b60200101906001600160f81b031916908160001a90535060049490941c93620004088162000604565b905062000391565b508315620004615760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016200029f565b9392505050565b600080604083850312156200047c57600080fd5b82516001600160a01b03811681146200049457600080fd5b6020939093015192949293505050565b60005b83811015620004c1578181015183820152602001620004a7565b83811115620004d1576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835162000511816017850160208801620004a4565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835162000544816028840160208801620004a4565b01602801949350505050565b602081526000825180602084015262000571816040850160208701620004a4565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615620005b857620005b862000585565b500290565b60008219821115620005d357620005d362000585565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008162000616576200061662000585565b506000190190565b611824806200062e6000396000f3fe6080604052600436106101815760003560e01c80639e6c8855116100d1578063d547741f1161008a578063ef5fe79f11610064578063ef5fe79f14610488578063f500cdfc1461049e578063ff05fe4a146104d2578063ffdc6129146104f257600080fd5b8063d547741f1461040e578063df4e58811461042e578063e02023a11461046657600080fd5b80639e6c8855146103635780639f93076514610383578063a217fddf146101bb578063b5abafa114610396578063bff863ec146103d9578063c4e41b22146103f957600080fd5b806336568abe1161013e5780635b94bbc3116101185780635b94bbc3146102cf5780637cb64759146103035780638407ecc41461032357806391d148541461034357600080fd5b806336568abe1461027a5780634c0f38c21461029a57806351cff8d9146102af57600080fd5b806301ffc9a7146101865780630a25dea9146101bb578063248a9ca3146101de57806324c37a851461020e5780632eb4a7ab146102425780632f2ff15d14610258575b600080fd5b34801561019257600080fd5b506101a66101a1366004611433565b610538565b60405190151581526020015b60405180910390f35b3480156101c757600080fd5b506101d0600081565b6040519081526020016101b2565b3480156101ea57600080fd5b506101d06101f936600461145d565b60009081526020819052604090206001015490565b34801561021a57600080fd5b506101d07fb3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db381565b34801561024e57600080fd5b506101d060045481565b34801561026457600080fd5b5061027861027336600461148b565b61056f565b005b34801561028657600080fd5b5061027861029536600461148b565b610599565b3480156102a657600080fd5b506101d061061c565b3480156102bb57600080fd5b506102786102ca3660046114bb565b61068f565b3480156102db57600080fd5b506101d07f5c8c0ce107274ad0569bd760c3d2406c1ed72c697935f3f965bd096c5cdedee481565b34801561030f57600080fd5b5061027861031e36600461145d565b61079f565b34801561032f57600080fd5b5061027861033e3660046114d8565b6107f1565b34801561034f57600080fd5b506101a661035e36600461148b565b61097f565b34801561036f57600080fd5b5061027861037e3660046114bb565b6109a8565b610278610391366004611506565b610a0f565b3480156103a257600080fd5b506101d06103b1366004611588565b6001600160a01b03919091166000908152600660209081526040808320938352929052205490565b3480156103e557600080fd5b506102786103f43660046115b4565b610e56565b34801561040557600080fd5b506101d0610ff4565b34801561041a57600080fd5b5061027861042936600461148b565b61103e565b34801561043a57600080fd5b5060025461044e906001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b34801561047257600080fd5b506101d06000805160206117cf83398151915281565b34801561049457600080fd5b506101d060035481565b3480156104aa57600080fd5b506101d07f68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba81565b3480156104de57600080fd5b506102786104ed36600461145d565b611063565b3480156104fe57600080fd5b506101a661050d366004611588565b6001600160a01b03919091166000908152600560209081526040808320938352929052205460ff1690565b60006001600160e01b03198216637965db0b60e01b148061056957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008281526020819052604090206001015461058a8161124f565b610594838361125c565b505050565b6001600160a01b038116331461060e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61061882826112e0565b5050565b6002546040805163d5abeb0160e01b815290516000926001600160a01b03169163d5abeb019160048083019260209291908290030181865afa158015610666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068a91906115f5565b905090565b6000805160206117cf8339815191526106a78161124f565b47806106ec5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606401610605565b6000836001600160a01b03168260405160006040518083038185875af1925050503d8060008114610739576040519150601f19603f3d011682016040523d82523d6000602084013e61073e565b606091505b505090508061074c57600080fd5b604080516001600160a01b03861681526020810184905242918101919091527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906060015b60405180910390a150505050565b60006107aa8161124f565b600480549083905560408051828152602081018590527f123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe91015b60405180910390a1505050565b6000805160206117cf8339815191526108098161124f565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610850573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087491906115f5565b9050600081116108bd5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606401610605565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af115801561090c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610930919061160e565b50604080516001600160a01b038087168252851660208201529081018290524260608201527fb818a975f91276df8ba59329becbc23c793df0d503c19ac296c3c372a1fa046190608001610791565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60006109b38161124f565b600280546001600160a01b038481166001600160a01b0319831681179093556040805191909216808252602082019390935284917fabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d9739101610791565b600260015403610a615760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610605565b600260015580610aab5760405162461bcd60e51b815260206004820152601560248201527426b4b73a1034b9903737ba1030b8383937bb32b21760591b6044820152606401610605565b8060035414610b0c5760405162461bcd60e51b815260206004820152602760248201527f436f6e747261637420617265206e6f7420696e2074686973206d696e74696e67604482015266103937bab7321760c91b6064820152608401610605565b610b1461061c565b82610b1d610ff4565b610b279190611646565b10610b625760405162461bcd60e51b815260206004820152600b60248201526a4f76657220737570706c7960a81b6044820152606401610605565b33600090815260056020908152604080832084845290915290205460ff1615610bcd5760405162461bcd60e51b815260206004820152601760248201527f596f752061726520616c7265616479206d696e7465642e0000000000000000006044820152606401610605565b6002546040516355138f0d60e11b81523060048201526001600160a01b039091169063aa271e1a90602401602060405180830381865afa158015610c15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c39919061160e565b610c855760405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374204d696e74206973206e6f7420617070726f7665642e00006044820152606401610605565b610d08848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506004546040516bffffffffffffffffffffffff193360601b1660208201526034810188905260548101879052909250607401905060405160208183030381529060405280519060200120611345565b610d625760405162461bcd60e51b815260206004820152602560248201527f556e617574686f72697a65642057686974656c6973744d696e742054686973206044820152642ab9b2b91760d91b6064820152608401610605565b3360008181526005602090815260408083208584528252808320805460ff191660011790559282526006815282822084835290529081208054849290610da9908490611646565b90915550506002546040516343508b0560e01b8152336004820152602481018490526001600160a01b03909116906343508b0590604401600060405180830381600087803b158015610dfa57600080fd5b505af1158015610e0e573d6000803e3d6000fd5b5050604080518581524260208201523393507f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff92500160405180910390a25050600180555050565b6000805160206117cf833981519152610e6e8161124f565b6040516331a9108f60e11b81526004810183905230906001600160a01b03851690636352211e90602401602060405180830381865afa158015610eb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed9919061165e565b6001600160a01b031614610f3d5760405162461bcd60e51b815260206004820152602560248201527f5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e6044820152641d1c9858dd60da1b6064820152608401610605565b604051632142170760e11b81523060048201526001600160a01b038581166024830152604482018490528416906342842e0e90606401600060405180830381600087803b158015610f8d57600080fd5b505af1158015610fa1573d6000803e3d6000fd5b5050604080516001600160a01b038089168252871660208201529081018590524260608201527f0127a8d3f57942833f6930572bce52ad882683e36eeb5830d199d3fa4bfa946792506080019050610791565b600254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610666573d6000803e3d6000fd5b6000828152602081905260409020600101546110598161124f565b61059483836112e0565b600061106e8161124f565b600380549083905560408051828152602081018590527f521ec96875ca228cd2fc1dbd4c927a34328c9ce1a83bcb8c1f633f012c90d78591016107e4565b606060006110bb83600261167b565b6110c6906002611646565b67ffffffffffffffff8111156110de576110de61169a565b6040519080825280601f01601f191660200182016040528015611108576020820181803683370190505b509050600360fc1b81600081518110611123576111236116b0565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611152576111526116b0565b60200101906001600160f81b031916908160001a905350600061117684600261167b565b611181906001611646565b90505b60018111156111f9576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106111b5576111b56116b0565b1a60f81b8282815181106111cb576111cb6116b0565b60200101906001600160f81b031916908160001a90535060049490941c936111f2816116c6565b9050611184565b5083156112485760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610605565b9392505050565b611259813361135b565b50565b611266828261097f565b610618576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561129c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6112ea828261097f565b15610618576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008261135285846113bf565b14949350505050565b611365828261097f565b6106185761137d816001600160a01b031660146110ac565b6113888360206110ac565b60405160200161139992919061170d565b60408051601f198184030181529082905262461bcd60e51b825261060591600401611782565b600081815b845181101561142b5760008582815181106113e1576113e16116b0565b602002602001015190508083116114075760008381526020829052604090209250611418565b600081815260208490526040902092505b5080611423816117b5565b9150506113c4565b509392505050565b60006020828403121561144557600080fd5b81356001600160e01b03198116811461124857600080fd5b60006020828403121561146f57600080fd5b5035919050565b6001600160a01b038116811461125957600080fd5b6000806040838503121561149e57600080fd5b8235915060208301356114b081611476565b809150509250929050565b6000602082840312156114cd57600080fd5b813561124881611476565b600080604083850312156114eb57600080fd5b82356114f681611476565b915060208301356114b081611476565b6000806000806060858703121561151c57600080fd5b843567ffffffffffffffff8082111561153457600080fd5b818701915087601f83011261154857600080fd5b81358181111561155757600080fd5b8860208260051b850101111561156c57600080fd5b6020928301999098509187013596604001359550909350505050565b6000806040838503121561159b57600080fd5b82356115a681611476565b946020939093013593505050565b6000806000606084860312156115c957600080fd5b83356115d481611476565b925060208401356115e481611476565b929592945050506040919091013590565b60006020828403121561160757600080fd5b5051919050565b60006020828403121561162057600080fd5b8151801515811461124857600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561165957611659611630565b500190565b60006020828403121561167057600080fd5b815161124881611476565b600081600019048311821515161561169557611695611630565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816116d5576116d5611630565b506000190190565b60005b838110156116f85781810151838201526020016116e0565b83811115611707576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516117458160178501602088016116dd565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516117768160288401602088016116dd565b01602801949350505050565b60208152600082518060208401526117a18160408501602087016116dd565b601f01601f19169190910160400192915050565b6000600182016117c7576117c7611630565b506001019056fe5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108eca26469706673582212209bb9fd3bdf22b22bdcafbca7ff910eba4d05f7bb54f4702ca0411d7b97c8d12564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E52 CODESIZE SUB DUP1 PUSH3 0x1E52 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x468 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH3 0x45 PUSH1 0x0 CALLER PUSH3 0x8F JUMP JUMPDEST PUSH3 0x71 PUSH32 0x5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC CALLER PUSH3 0x8F JUMP JUMPDEST PUSH3 0x7C DUP3 PUSH3 0x130 JUMP JUMPDEST PUSH3 0x87 DUP2 PUSH3 0x1A2 JUMP JUMPDEST POP POP PUSH3 0x61E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x12C JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0xEB CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x13D DUP2 PUSH3 0x1F5 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP5 SWAP2 PUSH32 0xABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AF DUP2 PUSH3 0x1F5 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH3 0x201 DUP2 CALLER PUSH3 0x204 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x12C JUMPI PUSH3 0x24E DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH3 0x2A8 PUSH1 0x20 SHL PUSH3 0x10AC OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x264 DUP4 PUSH1 0x20 PUSH3 0x10AC PUSH3 0x2A8 DUP3 SHL OR DUP2 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x277 SWAP3 SWAP2 SWAP1 PUSH3 0x4D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH3 0x29F SWAP2 PUSH1 0x4 ADD PUSH3 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH3 0x2B9 DUP4 PUSH1 0x2 PUSH3 0x59B JUMP JUMPDEST PUSH3 0x2C6 SWAP1 PUSH1 0x2 PUSH3 0x5BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2E0 JUMPI PUSH3 0x2E0 PUSH3 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x30B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x329 JUMPI PUSH3 0x329 PUSH3 0x5EE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH3 0x35B JUMPI PUSH3 0x35B PUSH3 0x5EE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH3 0x381 DUP5 PUSH1 0x2 PUSH3 0x59B JUMP JUMPDEST PUSH3 0x38E SWAP1 PUSH1 0x1 PUSH3 0x5BD JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x410 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH3 0x3C6 JUMPI PUSH3 0x3C6 PUSH3 0x5EE JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x3DF JUMPI PUSH3 0x3DF PUSH3 0x5EE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH3 0x408 DUP2 PUSH3 0x604 JUMP JUMPDEST SWAP1 POP PUSH3 0x391 JUMP JUMPDEST POP DUP4 ISZERO PUSH3 0x461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x29F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x4C1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x4A7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x4D1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH3 0x511 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x4A4 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH3 0x544 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x4A4 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x571 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x4A4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x5B8 JUMPI PUSH3 0x5B8 PUSH3 0x585 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x5D3 JUMPI PUSH3 0x5D3 PUSH3 0x585 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH3 0x616 JUMPI PUSH3 0x616 PUSH3 0x585 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x1824 DUP1 PUSH3 0x62E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E6C8855 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xEF5FE79F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEF5FE79F EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xF500CDFC EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xFF05FE4A EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0xFFDC6129 EQ PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xDF4E5881 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0xE02023A1 EQ PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E6C8855 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x9F930765 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xB5ABAFA1 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xBFF863EC EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5B94BBC3 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x5B94BBC3 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x8407ECC4 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x4C0F38C2 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xA25DEA9 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x24C37A85 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x258 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH32 0xB3C595E55271590809F54E2F4FC3A582754F45B104DD3C41666E2AD310493DB3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x61C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x14BB JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH32 0x5C8C0CE107274AD0569BD760C3D2406C1ED72C697935F3F965BD096C5CDEDEE4 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x145D JUMP JUMPDEST PUSH2 0x79F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x14BB JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B4 JUMP JUMPDEST PUSH2 0xE56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0xFF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x103E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x44E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH32 0x68E7D51FDB912CB107DDA2E59B053D87FCCA666DD0EF5339CD3474CCB5276BBA DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x4ED CALLDATASIZE PUSH1 0x4 PUSH2 0x145D JUMP JUMPDEST PUSH2 0x1063 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x50D CALLDATASIZE PUSH1 0x4 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x569 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x58A DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH2 0x594 DUP4 DUP4 PUSH2 0x125C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x60E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x618 DUP3 DUP3 PUSH2 0x12E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5ABEB01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD5ABEB01 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x666 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68A SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x6A7 DUP2 PUSH2 0x124F JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x73E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AA DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x809 DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x90C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x930 SWAP2 SWAP1 PUSH2 0x160E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xB818A975F91276DF8BA59329BECBC23C793DF0D503C19AC296C3C372A1FA0461 SWAP1 PUSH1 0x80 ADD PUSH2 0x791 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B3 DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP5 SWAP2 PUSH32 0xABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973 SWAP2 ADD PUSH2 0x791 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE DUP1 PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x26B4B73A1034B9903737BA1030B8383937BB32B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST DUP1 PUSH1 0x3 SLOAD EQ PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420617265206E6F7420696E2074686973206D696E74696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x103937BAB73217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x605 JUMP JUMPDEST PUSH2 0xB14 PUSH2 0x61C JUMP JUMPDEST DUP3 PUSH2 0xB1D PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0xB27 SWAP2 SWAP1 PUSH2 0x1646 JUMP JUMPDEST LT PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4F76657220737570706C79 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616C7265616479206D696E7465642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x55138F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAA271E1A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC39 SWAP2 SWAP1 PUSH2 0x160E JUMP JUMPDEST PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST PUSH2 0xD08 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH1 0x74 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642057686974656C6973744D696E74205468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2AB9B2B917 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x605 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDA9 SWAP1 DUP5 SWAP1 PUSH2 0x1646 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x43508B05 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x43508B05 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP PUSH32 0x25B428DFDE728CCFADDAD7E29E4AC23C24ED7FD1A6E3E3F91894A9A073F5DFFF SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE6E DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED9 SWAP2 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E4964206973206E6F74206F776E656420627920636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x127A8D3F57942833F6930572BCE52AD882683E36EEB5830D199D3FA4BFA9467 SWAP3 POP PUSH1 0x80 ADD SWAP1 POP PUSH2 0x791 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x666 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1059 DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH2 0x594 DUP4 DUP4 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x521EC96875CA228CD2FC1DBD4C927A34328C9CE1A83BCB8C1F633F012C90D785 SWAP2 ADD PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x10BB DUP4 PUSH1 0x2 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x10C6 SWAP1 PUSH1 0x2 PUSH2 0x1646 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10DE JUMPI PUSH2 0x10DE PUSH2 0x169A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1108 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1123 JUMPI PUSH2 0x1123 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1152 JUMPI PUSH2 0x1152 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1176 DUP5 PUSH1 0x2 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x1181 SWAP1 PUSH1 0x1 PUSH2 0x1646 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11F9 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x11B5 JUMPI PUSH2 0x11B5 PUSH2 0x16B0 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11CB JUMPI PUSH2 0x11CB PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x11F2 DUP2 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1184 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1259 DUP2 CALLER PUSH2 0x135B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1266 DUP3 DUP3 PUSH2 0x97F JUMP JUMPDEST PUSH2 0x618 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x129C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x12EA DUP3 DUP3 PUSH2 0x97F JUMP JUMPDEST ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1352 DUP6 DUP5 PUSH2 0x13BF JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1365 DUP3 DUP3 PUSH2 0x97F JUMP JUMPDEST PUSH2 0x618 JUMPI PUSH2 0x137D DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x10AC JUMP JUMPDEST PUSH2 0x1388 DUP4 PUSH1 0x20 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1399 SWAP3 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x605 SWAP2 PUSH1 0x4 ADD PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x142B JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13E1 JUMPI PUSH2 0x13E1 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x1407 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x1418 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x1423 DUP2 PUSH2 0x17B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13C4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x146F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14B0 DUP2 PUSH2 0x1476 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1248 DUP2 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14F6 DUP2 PUSH2 0x1476 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14B0 DUP2 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x151C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x156C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP10 SWAP1 SWAP9 POP SWAP2 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x40 ADD CALLDATALOAD SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x159B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15A6 DUP2 PUSH2 0x1476 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x15D4 DUP2 PUSH2 0x1476 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x15E4 DUP2 PUSH2 0x1476 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1659 JUMPI PUSH2 0x1659 PUSH2 0x1630 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1248 DUP2 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1695 JUMPI PUSH2 0x1695 PUSH2 0x1630 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x16D5 JUMPI PUSH2 0x16D5 PUSH2 0x1630 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16E0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1707 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1745 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16DD JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1776 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16DD JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x17A1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16DD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x17C7 JUMPI PUSH2 0x17C7 PUSH2 0x1630 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0x5D DUP15 SLT 0xC3 SWAP2 TIMESTAMP SELFDESTRUCT SWAP7 0xD7 SWAP14 DIV 0xD1 0x5D SHL LOG1 0x26 SWAP15 0x4F 0xE5 PUSH28 0xB9D26F43523628B34BA108ECA26469706673582212209BB9FD3BDF22 0xB2 0x2B 0xDC 0xAF 0xBC 0xA7 SELFDESTRUCT SWAP2 0xE 0xBA 0x4D SDIV 0xF7 0xBB SLOAD DELEGATECALL PUSH17 0x2CA0411D7B97C8D12564736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "401:5188:11:-:0;;;1977:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:2;1806:22;;2050:42:11;2072:4:0;2081:10:11;2050;:42::i;:::-;2103:37;1090:26;2129:10;2103;:37::i;:::-;2151:36;2170:16;2151:18;:36::i;:::-;2198:26;2212:11;2198:13;:26::i;:::-;1977:257;;401:5188;;7244:233:0;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;7322:149;;7365:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7365:29:0;;;;;;;;;:36;;-1:-1:-1;;7365:36:0;7397:4;7365:36;;;7447:12;719:10:5;;640:96;7447:12:0;-1:-1:-1;;;;;7420:40:0;7438:7;-1:-1:-1;;;;;7420:40:0;7432:4;7420:40;;;;;;;;;;7322:149;7244:233;;:::o;2242:307:11:-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;2368:15:11::1;::::0;;-1:-1:-1;;;;;2395:26:11;;::::1;-1:-1:-1::0;;;;;;2395:26:11;::::1;::::0;::::1;::::0;;;2490:51:::1;::::0;;2368:15;;;::::1;599:34:16::0;;;664:2;649:18;;642:43;;;;2395:26:11;;2490:51:::1;::::0;534:18:16;2490:51:11::1;;;;;;;2325:224;;2242:307:::0;;:::o;2781:239::-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;2900:10:11::1;::::0;;2921:24;;;;2963:49:::1;::::0;;870:25:16;;;926:2;911:18;;904:34;;;2963:49:11::1;::::0;843:18:16;2963:49:11::1;;;;;;;2861:159;2781:239:::0;;:::o;3334:103:0:-;3400:30;3411:4;719:10:5;3400::0;:30::i;:::-;3334:103;:::o;3718:492::-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:0;4027:2;3989:19;;;;;:41;;:::i;:::-;4101:38;4129:4;4136:2;4101:19;;;;;:38;;:::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:0;;;;;;;;;;-1:-1:-1;;;3844:349:0;;;;;;;:::i;:::-;;;;;;;;1588:441:6;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;-1:-1:-1;;;;;1710:25:6;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:6;;1688:47;;-1:-1:-1;;;1745:6:6;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:6;;;;;;;;;-1:-1:-1;;;1770:6:6;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:6;;;;;;;;-1:-1:-1;1800:9:6;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:6;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:6;;;;;;;;-1:-1:-1;1915:1:6;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:6;;1936:55;;;;-1:-1:-1;;;1936:55:6;;3436:2:16;1936:55:6;;;3418:21:16;;;3455:18;;;3448:30;3514:34;3494:18;;;3487:62;3566:18;;1936:55:6;3234:356:16;1936:55:6;2015:6;1588:441;-1:-1:-1;;;1588:441:6:o;14:368:16:-;110:6;118;171:2;159:9;150:7;146:23;142:32;139:52;;;187:1;184;177:12;139:52;213:16;;-1:-1:-1;;;;;258:31:16;;248:42;;238:70;;304:1;301;294:12;238:70;372:2;357:18;;;;351:25;327:5;;351:25;;-1:-1:-1;;;14:368:16:o;949:258::-;1021:1;1031:113;1045:6;1042:1;1039:13;1031:113;;;1121:11;;;1115:18;1102:11;;;1095:39;1067:2;1060:10;1031:113;;;1162:6;1159:1;1156:13;1153:48;;;1197:1;1188:6;1183:3;1179:16;1172:27;1153:48;;949:258;;;:::o;1212:786::-;1623:25;1618:3;1611:38;1593:3;1678:6;1672:13;1694:62;1749:6;1744:2;1739:3;1735:12;1728:4;1720:6;1716:17;1694:62;:::i;:::-;-1:-1:-1;;;1815:2:16;1775:16;;;1807:11;;;1800:40;1865:13;;1887:63;1865:13;1936:2;1928:11;;1921:4;1909:17;;1887:63;:::i;:::-;1970:17;1989:2;1966:26;;1212:786;-1:-1:-1;;;;1212:786:16:o;2003:383::-;2152:2;2141:9;2134:21;2115:4;2184:6;2178:13;2227:6;2222:2;2211:9;2207:18;2200:34;2243:66;2302:6;2297:2;2286:9;2282:18;2277:2;2269:6;2265:15;2243:66;:::i;:::-;2370:2;2349:15;-1:-1:-1;;2345:29:16;2330:45;;;;2377:2;2326:54;;2003:383;-1:-1:-1;;2003:383:16:o;2391:127::-;2452:10;2447:3;2443:20;2440:1;2433:31;2483:4;2480:1;2473:15;2507:4;2504:1;2497:15;2523:168;2563:7;2629:1;2625;2621:6;2617:14;2614:1;2611:21;2606:1;2599:9;2592:17;2588:45;2585:71;;;2636:18;;:::i;:::-;-1:-1:-1;2676:9:16;;2523:168::o;2696:128::-;2736:3;2767:1;2763:6;2760:1;2757:13;2754:39;;;2773:18;;:::i;:::-;-1:-1:-1;2809:9:16;;2696:128::o;2829:127::-;2890:10;2885:3;2881:20;2878:1;2871:31;2921:4;2918:1;2911:15;2945:4;2942:1;2935:15;2961:127;3022:10;3017:3;3013:20;3010:1;3003:31;3053:4;3050:1;3043:15;3077:4;3074:1;3067:15;3093:136;3132:3;3160:5;3150:39;;3169:18;;:::i;:::-;-1:-1:-1;;;3205:18:16;;3093:136::o;3234:356::-;401:5188:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_1071": {
									"entryPoint": null,
									"id": 1071,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NAGA_HOLDER_MINT_ROUND_1063": {
									"entryPoint": null,
									"id": 1063,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SPECIAL_MINT_ROUND_1068": {
									"entryPoint": null,
									"id": 1068,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WHITELIST_MINT_ROUND_1058": {
									"entryPoint": null,
									"id": 1058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WITHDRAW_ROLE_1076": {
									"entryPoint": null,
									"id": 1076,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_135": {
									"entryPoint": 4955,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 4687,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_efficientHash_943": {
									"entryPoint": null,
									"id": 943,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_grantRole_287": {
									"entryPoint": 4700,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_638": {
									"entryPoint": null,
									"id": 638,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_318": {
									"entryPoint": 4832,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@currentMintRound_1081": {
									"entryPoint": null,
									"id": 1081,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getMaxSupply_1557": {
									"entryPoint": 1564,
									"id": 1557,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_150": {
									"entryPoint": null,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalSupply_1547": {
									"entryPoint": 4084,
									"id": 1547,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@grantRole_170": {
									"entryPoint": 1391,
									"id": 170,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 2431,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isUserMinted_1521": {
									"entryPoint": null,
									"id": 1521,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@merkleRoot_1083": {
									"entryPoint": null,
									"id": 1083,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1367": {
									"entryPoint": 2575,
									"id": 1367,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@nagaKidContract_1079": {
									"entryPoint": null,
									"id": 1079,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@processProof_932": {
									"entryPoint": 5055,
									"id": 932,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_213": {
									"entryPoint": 1433,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_190": {
									"entryPoint": 4158,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setMerkleRoot_1255": {
									"entryPoint": 1951,
									"id": 1255,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNagaKidContract_1211": {
									"entryPoint": 2472,
									"id": 1211,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRound_1233": {
									"entryPoint": 4195,
									"id": 1233,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_60": {
									"entryPoint": 1336,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_967": {
									"entryPoint": null,
									"id": 967,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_850": {
									"entryPoint": 4268,
									"id": 850,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@userMintedAmount_1537": {
									"entryPoint": null,
									"id": 1537,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verify_875": {
									"entryPoint": 4933,
									"id": 875,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdrawCurrency_1457": {
									"entryPoint": 2033,
									"id": 1457,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawNFT_1505": {
									"entryPoint": 3670,
									"id": 1505,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdraw_1411": {
									"entryPoint": 1679,
									"id": 1411,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 5726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes32": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256t_bytes32": {
									"entryPoint": 5382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_INagaKid_$1041": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5901,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INagaKid_$1041__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5853,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5808,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 5238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14498:16",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:16"
															},
															"nodeType": "YulIf",
															"src": "93:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:16",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:16",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:16"
															},
															"nodeType": "YulIf",
															"src": "199:71:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:16",
														"type": ""
													}
												],
												"src": "14:286:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:16",
														"type": ""
													}
												],
												"src": "305:187:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "598:76:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "608:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "620:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "631:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "608:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "661:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "643:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "643:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "567:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "578:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "589:4:16",
														"type": ""
													}
												],
												"src": "497:177:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:110:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "795:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "804:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "797:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "797:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "797:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "770:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "779:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "791:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:32:16"
															},
															"nodeType": "YulIf",
															"src": "759:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "820:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "843:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "830:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "830:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "820:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "715:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "726:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "738:6:16",
														"type": ""
													}
												],
												"src": "679:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "909:86:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "982:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "985:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "975:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "932:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "943:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "958:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "963:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "954:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "954:11:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "967:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "950:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "950:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "939:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "939:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "929:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "929:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "922:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:50:16"
															},
															"nodeType": "YulIf",
															"src": "919:70:16"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "898:5:16",
														"type": ""
													}
												],
												"src": "864:131:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1087:228:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1133:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1142:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1145:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1135:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1135:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1135:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1108:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1117:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1104:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1104:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1129:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1100:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:32:16"
															},
															"nodeType": "YulIf",
															"src": "1097:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1158:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1181:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1168:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1168:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1158:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1200:45:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1226:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1226:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1213:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:32:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1204:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1279:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1254:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1294:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1304:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1294:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1045:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1056:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1068:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1076:6:16",
														"type": ""
													}
												],
												"src": "1000:315:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1421:76:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1431:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1443:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1439:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1431:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1473:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1484:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1390:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1401:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1412:4:16",
														"type": ""
													}
												],
												"src": "1320:177:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1572:177:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1618:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1627:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1630:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1620:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1620:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1620:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1593:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1602:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1589:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1589:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1614:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1585:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:32:16"
															},
															"nodeType": "YulIf",
															"src": "1582:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1643:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1669:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1656:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1647:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1713:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1688:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1688:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1728:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1738:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1728:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1538:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1549:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1561:6:16",
														"type": ""
													}
												],
												"src": "1502:247:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1841:301:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1862:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1871:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1858:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1858:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1883:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1854:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1854:32:16"
															},
															"nodeType": "YulIf",
															"src": "1851:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1912:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1938:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1925:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1916:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1982:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1957:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1957:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1957:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1997:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2007:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1997:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2021:47:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2053:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2064:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2049:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2049:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2036:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2036:32:16"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2025:7:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2102:7:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2077:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2077:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2077:33:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2119:17:16",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2129:7:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2119:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1799:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1810:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1822:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1830:6:16",
														"type": ""
													}
												],
												"src": "1754:388:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2234:177:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2280:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2289:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2292:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2282:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2282:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2282:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2255:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2264:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2251:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2251:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2276:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2247:32:16"
															},
															"nodeType": "YulIf",
															"src": "2244:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2305:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2318:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2309:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2375:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2350:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2350:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2350:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2390:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2400:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INagaKid_$1041",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2200:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2211:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2223:6:16",
														"type": ""
													}
												],
												"src": "2147:264:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2555:618:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2601:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2610:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2613:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2603:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2603:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2603:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2576:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2585:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2572:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2568:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2568:32:16"
															},
															"nodeType": "YulIf",
															"src": "2565:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2626:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2653:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2640:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2640:23:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2630:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2672:28:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2682:18:16",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2676:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2727:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2739:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2729:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2729:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2729:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2715:6:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2723:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2712:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:14:16"
															},
															"nodeType": "YulIf",
															"src": "2709:34:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2752:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2766:9:16"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2777:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2762:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:22:16"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2756:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2832:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2841:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2844:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2834:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2834:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2834:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2811:2:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2815:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2807:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2807:13:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2822:7:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2803:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2803:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2796:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2796:35:16"
															},
															"nodeType": "YulIf",
															"src": "2793:55:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2857:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2884:2:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2871:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:16:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2861:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2914:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2923:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2926:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2916:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2916:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2916:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2902:6:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2910:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2899:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:14:16"
															},
															"nodeType": "YulIf",
															"src": "2896:34:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2990:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2999:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3002:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2992:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2992:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2992:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2953:2:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2961:1:16",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2964:6:16"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2957:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2957:14:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2949:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2949:23:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2974:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2945:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2945:34:16"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2981:7:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2942:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2942:47:16"
															},
															"nodeType": "YulIf",
															"src": "2939:67:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3015:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3029:2:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3033:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3025:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:13:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3015:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3047:16:16",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "3057:6:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3072:44:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3099:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3110:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3095:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:20:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3082:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:34:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3125:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3152:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3163:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3148:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3148:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3135:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:32:16"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3125:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2497:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2508:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2520:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2528:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2536:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2544:6:16",
														"type": ""
													}
												],
												"src": "2416:757:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3265:228:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3311:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3320:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3323:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3313:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3313:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3313:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3286:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3295:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3282:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3307:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:32:16"
															},
															"nodeType": "YulIf",
															"src": "3275:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3336:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3362:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3349:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3349:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3340:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3406:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3381:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3381:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3381:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3421:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3431:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3421:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3445:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3472:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3483:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3468:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3468:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3455:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:32:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3223:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3234:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3246:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3254:6:16",
														"type": ""
													}
												],
												"src": "3178:315:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3602:352:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3648:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3657:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3660:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3650:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3650:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3650:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3623:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3632:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3619:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3619:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3644:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3615:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:32:16"
															},
															"nodeType": "YulIf",
															"src": "3612:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3673:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3699:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3686:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3677:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3743:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3718:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3718:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3758:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3768:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3758:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3782:47:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3814:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3825:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3797:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:32:16"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3786:7:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3863:7:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3838:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3838:33:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3880:17:16",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3890:7:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3906:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3933:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3944:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3929:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3929:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3916:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3916:32:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3906:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3552:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3563:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3575:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3583:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3591:6:16",
														"type": ""
													}
												],
												"src": "3498:456:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4077:102:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4087:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4099:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4110:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4095:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4095:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4087:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4129:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4144:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4160:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4165:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4156:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4156:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4169:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4152:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4152:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4140:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4140:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4122:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4122:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INagaKid_$1041__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4046:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4057:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4068:4:16",
														"type": ""
													}
												],
												"src": "3959:220:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4358:237:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4375:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4386:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4368:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4368:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4368:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4409:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4420:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4405:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4405:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4425:2:16",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4398:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4398:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4398:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4448:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4459:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4444:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4444:18:16"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4464:34:16",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4437:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4437:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4437:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4519:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4530:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4515:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4515:18:16"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4535:17:16",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4508:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4508:45:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4508:45:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4562:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4574:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4585:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4570:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4562:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4335:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4349:4:16",
														"type": ""
													}
												],
												"src": "4184:411:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4681:103:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4727:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4736:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4739:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4729:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4729:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4729:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4702:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4698:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4698:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4723:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4694:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:32:16"
															},
															"nodeType": "YulIf",
															"src": "4691:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4752:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4768:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4762:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4762:16:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4647:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4658:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4670:6:16",
														"type": ""
													}
												],
												"src": "4600:184:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4963:170:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4980:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4991:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4973:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4973:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4973:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5014:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5025:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5010:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5030:2:16",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5003:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5003:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5053:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5064:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5049:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5049:18:16"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5069:22:16",
																		"type": "",
																		"value": "Insufficient Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5042:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5042:50:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5042:50:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5101:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5113:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5124:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5109:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5101:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4940:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4954:4:16",
														"type": ""
													}
												],
												"src": "4789:344:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5329:14:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5331:10:16",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5338:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5331:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5313:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5321:3:16",
														"type": ""
													}
												],
												"src": "5138:205:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5505:188:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5515:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5527:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5538:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5523:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5523:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5515:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5557:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5572:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5588:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5593:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5584:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5584:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5597:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5580:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5580:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5568:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5568:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5550:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5550:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5621:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5632:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5617:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5617:18:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5637:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5610:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5610:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5610:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5664:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5675:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5660:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5660:18:16"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5680:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5653:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5653:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5653:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5458:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5469:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5477:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5485:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5496:4:16",
														"type": ""
													}
												],
												"src": "5348:345:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5827:119:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5837:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5849:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5860:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5845:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5845:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5837:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5879:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5890:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5872:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5872:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5872:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5917:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5928:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5913:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5913:18:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5933:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5906:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5906:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5906:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5788:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5799:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5807:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5818:4:16",
														"type": ""
													}
												],
												"src": "5698:248:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6052:102:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6062:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6074:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6085:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6070:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6070:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6062:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6104:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6119:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6135:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6140:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6131:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6131:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6144:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6127:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6127:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6115:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6115:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6097:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6097:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6097:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6021:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6032:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6043:4:16",
														"type": ""
													}
												],
												"src": "5951:203:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6288:145:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6298:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6310:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6321:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6306:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6306:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6298:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6340:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6355:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6371:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6376:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6367:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6367:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6380:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6363:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6363:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6351:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6351:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6333:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6333:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6333:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6404:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6415:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6400:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6400:18:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6420:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6393:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6393:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6249:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6260:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6268:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6279:4:16",
														"type": ""
													}
												],
												"src": "6159:274:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6516:199:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6562:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6571:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6574:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6564:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6564:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6564:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6537:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6546:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6533:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6533:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6558:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6529:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6529:32:16"
															},
															"nodeType": "YulIf",
															"src": "6526:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6587:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6606:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6600:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6600:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6591:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6669:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6678:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6681:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6671:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6671:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6671:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6638:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "6659:5:16"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "6652:6:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6652:13:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6645:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6645:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6635:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6635:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6628:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6628:40:16"
															},
															"nodeType": "YulIf",
															"src": "6625:60:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6694:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6704:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6694:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6482:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6493:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6505:6:16",
														"type": ""
													}
												],
												"src": "6438:277:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6905:262:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6915:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6927:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6938:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6923:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6923:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6915:4:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6951:29:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6969:3:16",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6974:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6965:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6965:11:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6978:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6961:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6961:19:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6955:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6996:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7011:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7019:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7007:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7007:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6989:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6989:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6989:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7043:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7054:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7039:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7039:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7063:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7071:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7059:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7059:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:43:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7032:43:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:16"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7111:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7138:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7149:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7134:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7134:18:16"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7154:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7127:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7127:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7127:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6850:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6861:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6869:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6877:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6885:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6896:4:16",
														"type": ""
													}
												],
												"src": "6720:447:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7301:175:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7311:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7323:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7334:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7319:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7319:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7311:4:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7346:29:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7364:3:16",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7369:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7360:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7360:11:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7356:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7356:19:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7350:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7391:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7406:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7414:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7402:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7402:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7384:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7384:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7438:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7449:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7434:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7434:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7458:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7466:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7454:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7454:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7427:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7427:43:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7427:43:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7262:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7273:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7281:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7292:4:16",
														"type": ""
													}
												],
												"src": "7172:304:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7655:181:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7672:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7683:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7665:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7665:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7665:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7706:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7717:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7702:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7702:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7722:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7695:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7695:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7695:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7745:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7756:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7741:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7741:18:16"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7761:33:16",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7734:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7734:61:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7734:61:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7804:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7816:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7827:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7812:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7812:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7804:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7632:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7646:4:16",
														"type": ""
													}
												],
												"src": "7481:355:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8015:171:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8032:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8043:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8025:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8025:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8025:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8066:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8077:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8062:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8062:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8082:2:16",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8055:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8055:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8055:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8105:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8116:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8101:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8101:18:16"
																	},
																	{
																		"hexValue": "4d696e74206973206e6f7420617070726f7665642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8121:23:16",
																		"type": "",
																		"value": "Mint is not approved."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8094:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8094:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8094:51:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8154:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8166:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8177:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8162:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8162:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8154:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7992:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8006:4:16",
														"type": ""
													}
												],
												"src": "7841:345:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8365:229:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8382:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8393:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8375:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8375:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8375:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8416:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8427:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8412:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8412:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8432:2:16",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8405:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8405:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8405:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8455:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8466:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8451:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8451:18:16"
																	},
																	{
																		"hexValue": "436f6e747261637420617265206e6f7420696e2074686973206d696e74696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8471:34:16",
																		"type": "",
																		"value": "Contract are not in this minting"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8444:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8444:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8444:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8526:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8537:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8522:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8522:18:16"
																	},
																	{
																		"hexValue": "20726f756e642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8542:9:16",
																		"type": "",
																		"value": " round."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8515:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8515:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8515:37:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8561:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8573:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8584:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8569:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8569:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8342:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8356:4:16",
														"type": ""
													}
												],
												"src": "8191:403:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8631:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8648:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8655:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8660:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8651:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8651:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8641:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8641:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8641:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8688:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8691:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8681:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8681:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8681:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8712:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8715:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8705:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8705:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8705:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8599:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8779:80:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8806:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8808:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8808:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8808:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8795:1:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8802:1:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8798:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8798:6:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8792:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8792:13:16"
															},
															"nodeType": "YulIf",
															"src": "8789:39:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8837:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8848:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8851:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8844:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8844:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8837:3:16"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8762:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8765:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8771:3:16",
														"type": ""
													}
												],
												"src": "8731:128:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9038:161:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9055:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9066:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9048:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9048:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9048:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9089:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9100:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9085:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9085:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9105:2:16",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9078:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9078:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9078:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9128:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9139:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9124:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9124:18:16"
																	},
																	{
																		"hexValue": "4f76657220737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9144:13:16",
																		"type": "",
																		"value": "Over supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9117:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9117:41:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9117:41:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9167:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9179:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9190:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9175:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9175:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9167:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9015:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9029:4:16",
														"type": ""
													}
												],
												"src": "8864:335:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9378:173:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9395:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9406:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9388:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9388:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9388:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9429:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9440:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9425:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9425:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9445:2:16",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9418:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9418:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9418:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9468:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9479:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9464:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9464:18:16"
																	},
																	{
																		"hexValue": "596f752061726520616c7265616479206d696e7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9484:25:16",
																		"type": "",
																		"value": "You are already minted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9457:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9457:53:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9457:53:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9519:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9531:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9542:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9527:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9527:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9519:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9355:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9369:4:16",
														"type": ""
													}
												],
												"src": "9204:347:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9730:180:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9747:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9758:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9740:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9740:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9740:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9781:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9792:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9777:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9777:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9797:2:16",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9770:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9770:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9770:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9820:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9831:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9816:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9816:18:16"
																	},
																	{
																		"hexValue": "436f6e7472616374204d696e74206973206e6f7420617070726f7665642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9836:32:16",
																		"type": "",
																		"value": "Contract Mint is not approved."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9809:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9809:60:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9809:60:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9878:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9890:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9901:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9886:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9886:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9878:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9707:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9721:4:16",
														"type": ""
													}
												],
												"src": "9556:354:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10090:184:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10107:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10120:2:16",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10124:6:16"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10116:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10116:15:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10137:26:16",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "10133:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10133:31:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10112:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10112:53:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10100:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10100:66:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10100:66:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10186:3:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10191:2:16",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10182:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10182:12:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10196:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10175:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10175:28:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10175:28:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10223:3:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10228:2:16",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10219:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10219:12:16"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10233:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10212:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10212:28:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10212:28:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10249:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10260:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10265:2:16",
																		"type": "",
																		"value": "84"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10256:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10256:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10249:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10050:3:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10055:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10063:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10071:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10082:3:16",
														"type": ""
													}
												],
												"src": "9915:359:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10453:227:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10470:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10481:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10463:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10463:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10463:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10504:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10515:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10500:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10500:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10520:2:16",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10493:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10493:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10493:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10543:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10554:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10539:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10539:18:16"
																	},
																	{
																		"hexValue": "556e617574686f72697a65642057686974656c6973744d696e74205468697320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10559:34:16",
																		"type": "",
																		"value": "Unauthorized WhitelistMint This "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10532:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10532:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10532:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10614:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10625:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10610:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10610:18:16"
																	},
																	{
																		"hexValue": "557365722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10630:7:16",
																		"type": "",
																		"value": "User."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10603:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10603:35:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10603:35:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10647:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10659:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10670:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10655:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10655:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10647:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10430:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10444:4:16",
														"type": ""
													}
												],
												"src": "10279:401:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10814:119:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10824:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10836:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10847:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10832:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10832:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10824:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10866:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10877:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10859:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10859:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10859:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10904:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10915:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10900:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10900:18:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10920:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10893:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10893:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10893:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10775:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10786:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10794:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10805:4:16",
														"type": ""
													}
												],
												"src": "10685:248:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11019:170:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11065:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11074:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11077:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11067:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11067:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11067:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11040:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11049:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11036:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11036:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11061:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11032:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11032:32:16"
															},
															"nodeType": "YulIf",
															"src": "11029:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11090:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11109:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11103:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11103:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11094:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11153:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "11128:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11128:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11128:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11168:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11178:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10985:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10996:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11008:6:16",
														"type": ""
													}
												],
												"src": "10938:251:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11368:227:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11385:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11396:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11378:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11378:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11378:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11419:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11430:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11415:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11415:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11435:2:16",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11408:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11408:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11408:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11458:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11469:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11454:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11454:18:16"
																	},
																	{
																		"hexValue": "5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11474:34:16",
																		"type": "",
																		"value": "This tokenId is not owned by con"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11447:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11447:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11447:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11529:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11540:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11525:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11525:18:16"
																	},
																	{
																		"hexValue": "7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11545:7:16",
																		"type": "",
																		"value": "tract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11518:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11518:35:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11518:35:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11562:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11574:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11585:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11570:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11570:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11562:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11345:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11359:4:16",
														"type": ""
													}
												],
												"src": "11194:401:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11757:218:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11767:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11779:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11790:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11775:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11775:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11767:4:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11802:29:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11820:3:16",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11825:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11816:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11816:11:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11829:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11812:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11812:19:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11806:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11847:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11862:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11870:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11858:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11858:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11840:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11840:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11840:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11894:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11905:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11890:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11890:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11914:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11922:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11910:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11910:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11883:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11883:43:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11883:43:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11946:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11957:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11942:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11942:18:16"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11962:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11935:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11935:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11935:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11710:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11721:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11729:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11737:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11748:4:16",
														"type": ""
													}
												],
												"src": "11600:375:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:116:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12091:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12093:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12093:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12093:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12063:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12056:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12056:9:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12049:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12049:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12071:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12082:1:16",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "12078:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12078:6:16"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12086:1:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12074:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12074:14:16"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12068:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12068:21:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12045:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12045:45:16"
															},
															"nodeType": "YulIf",
															"src": "12042:71:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12122:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12137:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12140:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12133:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12133:9:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12122:7:16"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12011:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12014:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12020:7:16",
														"type": ""
													}
												],
												"src": "11980:168:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12185:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12202:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12209:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12214:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12205:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12205:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12195:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12195:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12195:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12242:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12245:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12235:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12235:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12235:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12266:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12269:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12259:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12259:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12259:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12153:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12317:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12334:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12341:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12346:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12337:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12337:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12327:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12327:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12327:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12374:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12377:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12367:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12367:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12367:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12398:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12401:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12391:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12391:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12391:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12285:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12464:89:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12491:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12493:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12493:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12493:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12484:5:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12477:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12477:13:16"
															},
															"nodeType": "YulIf",
															"src": "12474:39:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12522:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12533:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12544:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12540:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12540:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12529:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12529:18:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12522:3:16"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12446:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12456:3:16",
														"type": ""
													}
												],
												"src": "12417:136:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12732:182:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12749:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12760:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12742:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12742:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12742:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12783:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12794:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12779:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12779:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12799:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12772:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12772:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12772:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12822:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12833:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12818:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12818:18:16"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12838:34:16",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12811:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12811:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12811:62:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12882:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12894:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12905:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12890:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12890:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12882:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12709:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12723:4:16",
														"type": ""
													}
												],
												"src": "12558:356:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12972:205:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12982:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12991:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12986:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13051:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13076:3:16"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13081:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13072:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13072:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13095:3:16"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13100:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13091:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13091:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13085:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13085:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13065:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13065:39:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13065:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13012:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13015:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13009:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13009:13:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13023:19:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13025:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13034:1:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13037:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13030:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13030:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13025:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13005:3:16",
																"statements": []
															},
															"src": "13001:113:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13140:31:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13153:3:16"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "13158:6:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13149:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13149:16:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13167:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13142:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13142:27:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13142:27:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13129:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13132:6:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13126:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13126:13:16"
															},
															"nodeType": "YulIf",
															"src": "13123:48:16"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12950:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12955:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12960:6:16",
														"type": ""
													}
												],
												"src": "12919:258:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13571:397:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13588:3:16"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13593:25:16",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13581:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13581:38:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13581:38:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13628:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13648:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13642:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13642:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13632:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13690:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13698:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13686:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13686:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13709:3:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13714:2:16",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13705:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13705:12:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13719:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "13664:21:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13664:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13664:62:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13735:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13749:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13754:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13745:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13745:16:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13739:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13781:2:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13785:2:16",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13777:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13777:11:16"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13790:19:16",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13770:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13770:40:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13770:40:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13819:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13841:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13835:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13835:13:16"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "13823:8:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13883:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13891:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13879:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13879:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13902:2:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13906:2:16",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13898:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13898:11:16"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "13911:8:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "13857:21:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13857:63:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13857:63:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13929:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13944:2:16"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "13948:8:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13940:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13940:17:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13959:2:16",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13936:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13936:26:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13929:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13539:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13544:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13552:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13563:3:16",
														"type": ""
													}
												],
												"src": "13182:786:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14094:262:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14111:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14122:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14104:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14104:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14104:21:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14134:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14154:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14148:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14148:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14138:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14181:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14192:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14177:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14177:18:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14197:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14170:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14170:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14170:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14239:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14247:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14235:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14235:15:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14256:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14267:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14252:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14252:18:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14272:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "14213:21:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14213:66:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14213:66:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14288:62:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14304:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "14323:6:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14331:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "14319:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14319:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14340:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "14336:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14336:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "14315:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14315:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14300:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14300:45:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14347:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14296:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14296:54:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14288:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14063:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14074:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14085:4:16",
														"type": ""
													}
												],
												"src": "13973:383:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14408:88:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14439:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14441:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14441:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14441:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14424:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14435:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14431:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14431:6:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14421:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14421:17:16"
															},
															"nodeType": "YulIf",
															"src": "14418:43:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14470:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14481:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14488:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14477:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14477:13:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14470:3:16"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14390:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14400:3:16",
														"type": ""
													}
												],
												"src": "14361:135:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_contract$_INagaKid_$1041(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := calldataload(add(headStart, 0x20))\n        value3 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_INagaKid_$1041__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient Balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Mint is not approved.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Contract are not in this minting\")\n        mstore(add(headStart, 96), \" round.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Over supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"You are already minted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Contract Mint is not approved.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        end := add(pos, 84)\n    }\n    function abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Unauthorized WhitelistMint This \")\n        mstore(add(headStart, 96), \"User.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"This tokenId is not owned by con\")\n        mstore(add(headStart, 96), \"tract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101815760003560e01c80639e6c8855116100d1578063d547741f1161008a578063ef5fe79f11610064578063ef5fe79f14610488578063f500cdfc1461049e578063ff05fe4a146104d2578063ffdc6129146104f257600080fd5b8063d547741f1461040e578063df4e58811461042e578063e02023a11461046657600080fd5b80639e6c8855146103635780639f93076514610383578063a217fddf146101bb578063b5abafa114610396578063bff863ec146103d9578063c4e41b22146103f957600080fd5b806336568abe1161013e5780635b94bbc3116101185780635b94bbc3146102cf5780637cb64759146103035780638407ecc41461032357806391d148541461034357600080fd5b806336568abe1461027a5780634c0f38c21461029a57806351cff8d9146102af57600080fd5b806301ffc9a7146101865780630a25dea9146101bb578063248a9ca3146101de57806324c37a851461020e5780632eb4a7ab146102425780632f2ff15d14610258575b600080fd5b34801561019257600080fd5b506101a66101a1366004611433565b610538565b60405190151581526020015b60405180910390f35b3480156101c757600080fd5b506101d0600081565b6040519081526020016101b2565b3480156101ea57600080fd5b506101d06101f936600461145d565b60009081526020819052604090206001015490565b34801561021a57600080fd5b506101d07fb3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db381565b34801561024e57600080fd5b506101d060045481565b34801561026457600080fd5b5061027861027336600461148b565b61056f565b005b34801561028657600080fd5b5061027861029536600461148b565b610599565b3480156102a657600080fd5b506101d061061c565b3480156102bb57600080fd5b506102786102ca3660046114bb565b61068f565b3480156102db57600080fd5b506101d07f5c8c0ce107274ad0569bd760c3d2406c1ed72c697935f3f965bd096c5cdedee481565b34801561030f57600080fd5b5061027861031e36600461145d565b61079f565b34801561032f57600080fd5b5061027861033e3660046114d8565b6107f1565b34801561034f57600080fd5b506101a661035e36600461148b565b61097f565b34801561036f57600080fd5b5061027861037e3660046114bb565b6109a8565b610278610391366004611506565b610a0f565b3480156103a257600080fd5b506101d06103b1366004611588565b6001600160a01b03919091166000908152600660209081526040808320938352929052205490565b3480156103e557600080fd5b506102786103f43660046115b4565b610e56565b34801561040557600080fd5b506101d0610ff4565b34801561041a57600080fd5b5061027861042936600461148b565b61103e565b34801561043a57600080fd5b5060025461044e906001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b34801561047257600080fd5b506101d06000805160206117cf83398151915281565b34801561049457600080fd5b506101d060035481565b3480156104aa57600080fd5b506101d07f68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba81565b3480156104de57600080fd5b506102786104ed36600461145d565b611063565b3480156104fe57600080fd5b506101a661050d366004611588565b6001600160a01b03919091166000908152600560209081526040808320938352929052205460ff1690565b60006001600160e01b03198216637965db0b60e01b148061056957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008281526020819052604090206001015461058a8161124f565b610594838361125c565b505050565b6001600160a01b038116331461060e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61061882826112e0565b5050565b6002546040805163d5abeb0160e01b815290516000926001600160a01b03169163d5abeb019160048083019260209291908290030181865afa158015610666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068a91906115f5565b905090565b6000805160206117cf8339815191526106a78161124f565b47806106ec5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606401610605565b6000836001600160a01b03168260405160006040518083038185875af1925050503d8060008114610739576040519150601f19603f3d011682016040523d82523d6000602084013e61073e565b606091505b505090508061074c57600080fd5b604080516001600160a01b03861681526020810184905242918101919091527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906060015b60405180910390a150505050565b60006107aa8161124f565b600480549083905560408051828152602081018590527f123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe91015b60405180910390a1505050565b6000805160206117cf8339815191526108098161124f565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610850573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087491906115f5565b9050600081116108bd5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606401610605565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af115801561090c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610930919061160e565b50604080516001600160a01b038087168252851660208201529081018290524260608201527fb818a975f91276df8ba59329becbc23c793df0d503c19ac296c3c372a1fa046190608001610791565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60006109b38161124f565b600280546001600160a01b038481166001600160a01b0319831681179093556040805191909216808252602082019390935284917fabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d9739101610791565b600260015403610a615760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610605565b600260015580610aab5760405162461bcd60e51b815260206004820152601560248201527426b4b73a1034b9903737ba1030b8383937bb32b21760591b6044820152606401610605565b8060035414610b0c5760405162461bcd60e51b815260206004820152602760248201527f436f6e747261637420617265206e6f7420696e2074686973206d696e74696e67604482015266103937bab7321760c91b6064820152608401610605565b610b1461061c565b82610b1d610ff4565b610b279190611646565b10610b625760405162461bcd60e51b815260206004820152600b60248201526a4f76657220737570706c7960a81b6044820152606401610605565b33600090815260056020908152604080832084845290915290205460ff1615610bcd5760405162461bcd60e51b815260206004820152601760248201527f596f752061726520616c7265616479206d696e7465642e0000000000000000006044820152606401610605565b6002546040516355138f0d60e11b81523060048201526001600160a01b039091169063aa271e1a90602401602060405180830381865afa158015610c15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c39919061160e565b610c855760405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374204d696e74206973206e6f7420617070726f7665642e00006044820152606401610605565b610d08848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506004546040516bffffffffffffffffffffffff193360601b1660208201526034810188905260548101879052909250607401905060405160208183030381529060405280519060200120611345565b610d625760405162461bcd60e51b815260206004820152602560248201527f556e617574686f72697a65642057686974656c6973744d696e742054686973206044820152642ab9b2b91760d91b6064820152608401610605565b3360008181526005602090815260408083208584528252808320805460ff191660011790559282526006815282822084835290529081208054849290610da9908490611646565b90915550506002546040516343508b0560e01b8152336004820152602481018490526001600160a01b03909116906343508b0590604401600060405180830381600087803b158015610dfa57600080fd5b505af1158015610e0e573d6000803e3d6000fd5b5050604080518581524260208201523393507f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff92500160405180910390a25050600180555050565b6000805160206117cf833981519152610e6e8161124f565b6040516331a9108f60e11b81526004810183905230906001600160a01b03851690636352211e90602401602060405180830381865afa158015610eb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed9919061165e565b6001600160a01b031614610f3d5760405162461bcd60e51b815260206004820152602560248201527f5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e6044820152641d1c9858dd60da1b6064820152608401610605565b604051632142170760e11b81523060048201526001600160a01b038581166024830152604482018490528416906342842e0e90606401600060405180830381600087803b158015610f8d57600080fd5b505af1158015610fa1573d6000803e3d6000fd5b5050604080516001600160a01b038089168252871660208201529081018590524260608201527f0127a8d3f57942833f6930572bce52ad882683e36eeb5830d199d3fa4bfa946792506080019050610791565b600254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610666573d6000803e3d6000fd5b6000828152602081905260409020600101546110598161124f565b61059483836112e0565b600061106e8161124f565b600380549083905560408051828152602081018590527f521ec96875ca228cd2fc1dbd4c927a34328c9ce1a83bcb8c1f633f012c90d78591016107e4565b606060006110bb83600261167b565b6110c6906002611646565b67ffffffffffffffff8111156110de576110de61169a565b6040519080825280601f01601f191660200182016040528015611108576020820181803683370190505b509050600360fc1b81600081518110611123576111236116b0565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611152576111526116b0565b60200101906001600160f81b031916908160001a905350600061117684600261167b565b611181906001611646565b90505b60018111156111f9576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106111b5576111b56116b0565b1a60f81b8282815181106111cb576111cb6116b0565b60200101906001600160f81b031916908160001a90535060049490941c936111f2816116c6565b9050611184565b5083156112485760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610605565b9392505050565b611259813361135b565b50565b611266828261097f565b610618576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561129c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6112ea828261097f565b15610618576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008261135285846113bf565b14949350505050565b611365828261097f565b6106185761137d816001600160a01b031660146110ac565b6113888360206110ac565b60405160200161139992919061170d565b60408051601f198184030181529082905262461bcd60e51b825261060591600401611782565b600081815b845181101561142b5760008582815181106113e1576113e16116b0565b602002602001015190508083116114075760008381526020829052604090209250611418565b600081815260208490526040902092505b5080611423816117b5565b9150506113c4565b509392505050565b60006020828403121561144557600080fd5b81356001600160e01b03198116811461124857600080fd5b60006020828403121561146f57600080fd5b5035919050565b6001600160a01b038116811461125957600080fd5b6000806040838503121561149e57600080fd5b8235915060208301356114b081611476565b809150509250929050565b6000602082840312156114cd57600080fd5b813561124881611476565b600080604083850312156114eb57600080fd5b82356114f681611476565b915060208301356114b081611476565b6000806000806060858703121561151c57600080fd5b843567ffffffffffffffff8082111561153457600080fd5b818701915087601f83011261154857600080fd5b81358181111561155757600080fd5b8860208260051b850101111561156c57600080fd5b6020928301999098509187013596604001359550909350505050565b6000806040838503121561159b57600080fd5b82356115a681611476565b946020939093013593505050565b6000806000606084860312156115c957600080fd5b83356115d481611476565b925060208401356115e481611476565b929592945050506040919091013590565b60006020828403121561160757600080fd5b5051919050565b60006020828403121561162057600080fd5b8151801515811461124857600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561165957611659611630565b500190565b60006020828403121561167057600080fd5b815161124881611476565b600081600019048311821515161561169557611695611630565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816116d5576116d5611630565b506000190190565b60005b838110156116f85781810151838201526020016116e0565b83811115611707576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516117458160178501602088016116dd565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516117768160288401602088016116dd565b01602801949350505050565b60208152600082518060208401526117a18160408501602087016116dd565b601f01601f19169190910160400192915050565b6000600182016117c7576117c7611630565b506001019056fe5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108eca26469706673582212209bb9fd3bdf22b22bdcafbca7ff910eba4d05f7bb54f4702ca0411d7b97c8d12564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E6C8855 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xEF5FE79F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEF5FE79F EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xF500CDFC EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xFF05FE4A EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0xFFDC6129 EQ PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xDF4E5881 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0xE02023A1 EQ PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E6C8855 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x9F930765 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xB5ABAFA1 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xBFF863EC EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5B94BBC3 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x5B94BBC3 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x8407ECC4 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x4C0F38C2 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xA25DEA9 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x24C37A85 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x258 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH32 0xB3C595E55271590809F54E2F4FC3A582754F45B104DD3C41666E2AD310493DB3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x61C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x14BB JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH32 0x5C8C0CE107274AD0569BD760C3D2406C1ED72C697935F3F965BD096C5CDEDEE4 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x145D JUMP JUMPDEST PUSH2 0x79F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x14BB JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B4 JUMP JUMPDEST PUSH2 0xE56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0xFF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x103E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x44E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH32 0x68E7D51FDB912CB107DDA2E59B053D87FCCA666DD0EF5339CD3474CCB5276BBA DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x4ED CALLDATASIZE PUSH1 0x4 PUSH2 0x145D JUMP JUMPDEST PUSH2 0x1063 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x50D CALLDATASIZE PUSH1 0x4 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x569 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x58A DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH2 0x594 DUP4 DUP4 PUSH2 0x125C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x60E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x618 DUP3 DUP3 PUSH2 0x12E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5ABEB01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD5ABEB01 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x666 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68A SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x6A7 DUP2 PUSH2 0x124F JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x73E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AA DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x809 DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x90C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x930 SWAP2 SWAP1 PUSH2 0x160E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xB818A975F91276DF8BA59329BECBC23C793DF0D503C19AC296C3C372A1FA0461 SWAP1 PUSH1 0x80 ADD PUSH2 0x791 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B3 DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP5 SWAP2 PUSH32 0xABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973 SWAP2 ADD PUSH2 0x791 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE DUP1 PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x26B4B73A1034B9903737BA1030B8383937BB32B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST DUP1 PUSH1 0x3 SLOAD EQ PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420617265206E6F7420696E2074686973206D696E74696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x103937BAB73217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x605 JUMP JUMPDEST PUSH2 0xB14 PUSH2 0x61C JUMP JUMPDEST DUP3 PUSH2 0xB1D PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0xB27 SWAP2 SWAP1 PUSH2 0x1646 JUMP JUMPDEST LT PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4F76657220737570706C79 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616C7265616479206D696E7465642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x55138F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAA271E1A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC39 SWAP2 SWAP1 PUSH2 0x160E JUMP JUMPDEST PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST PUSH2 0xD08 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH1 0x74 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642057686974656C6973744D696E74205468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2AB9B2B917 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x605 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDA9 SWAP1 DUP5 SWAP1 PUSH2 0x1646 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x43508B05 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x43508B05 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP PUSH32 0x25B428DFDE728CCFADDAD7E29E4AC23C24ED7FD1A6E3E3F91894A9A073F5DFFF SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE6E DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED9 SWAP2 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E4964206973206E6F74206F776E656420627920636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x127A8D3F57942833F6930572BCE52AD882683E36EEB5830D199D3FA4BFA9467 SWAP3 POP PUSH1 0x80 ADD SWAP1 POP PUSH2 0x791 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x666 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1059 DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH2 0x594 DUP4 DUP4 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP2 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x521EC96875CA228CD2FC1DBD4C927A34328C9CE1A83BCB8C1F633F012C90D785 SWAP2 ADD PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x10BB DUP4 PUSH1 0x2 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x10C6 SWAP1 PUSH1 0x2 PUSH2 0x1646 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10DE JUMPI PUSH2 0x10DE PUSH2 0x169A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1108 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1123 JUMPI PUSH2 0x1123 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1152 JUMPI PUSH2 0x1152 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1176 DUP5 PUSH1 0x2 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x1181 SWAP1 PUSH1 0x1 PUSH2 0x1646 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11F9 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x11B5 JUMPI PUSH2 0x11B5 PUSH2 0x16B0 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11CB JUMPI PUSH2 0x11CB PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x11F2 DUP2 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1184 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x605 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1259 DUP2 CALLER PUSH2 0x135B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1266 DUP3 DUP3 PUSH2 0x97F JUMP JUMPDEST PUSH2 0x618 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x129C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x12EA DUP3 DUP3 PUSH2 0x97F JUMP JUMPDEST ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1352 DUP6 DUP5 PUSH2 0x13BF JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1365 DUP3 DUP3 PUSH2 0x97F JUMP JUMPDEST PUSH2 0x618 JUMPI PUSH2 0x137D DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x10AC JUMP JUMPDEST PUSH2 0x1388 DUP4 PUSH1 0x20 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1399 SWAP3 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x605 SWAP2 PUSH1 0x4 ADD PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x142B JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13E1 JUMPI PUSH2 0x13E1 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x1407 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x1418 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x1423 DUP2 PUSH2 0x17B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13C4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x146F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14B0 DUP2 PUSH2 0x1476 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1248 DUP2 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14F6 DUP2 PUSH2 0x1476 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14B0 DUP2 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x151C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x156C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP10 SWAP1 SWAP9 POP SWAP2 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x40 ADD CALLDATALOAD SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x159B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15A6 DUP2 PUSH2 0x1476 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x15D4 DUP2 PUSH2 0x1476 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x15E4 DUP2 PUSH2 0x1476 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1659 JUMPI PUSH2 0x1659 PUSH2 0x1630 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1248 DUP2 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1695 JUMPI PUSH2 0x1695 PUSH2 0x1630 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x16D5 JUMPI PUSH2 0x16D5 PUSH2 0x1630 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16E0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1707 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1745 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16DD JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1776 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x16DD JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x17A1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16DD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x17C7 JUMPI PUSH2 0x17C7 PUSH2 0x1630 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0x5D DUP15 SLT 0xC3 SWAP2 TIMESTAMP SELFDESTRUCT SWAP7 0xD7 SWAP14 DIV 0xD1 0x5D SHL LOG1 0x26 SWAP15 0x4F 0xE5 PUSH28 0xB9D26F43523628B34BA108ECA26469706673582212209BB9FD3BDF22 0xB2 0x2B 0xDC 0xAF 0xBC 0xA7 SELFDESTRUCT SWAP2 0xE 0xBA 0x4D SDIV 0xF7 0xBB SLOAD DELEGATECALL PUSH17 0x2CA0411D7B97C8D12564736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "401:5188:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:0;;;;;;;;;;-1:-1:-1;2606:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:16;;463:22;445:41;;433:2;418:18;2606:202:0;;;;;;;;937:100:11;;;;;;;;;;-1:-1:-1;937:100:11;971:66;937:100;;;;;643:25:16;;;631:2;616:18;937:100:11;497:177:16;4391:129:0;;;;;;;;;;-1:-1:-1;4391:129:0;;;;;:::i;:::-;4465:7;4491:12;;;;;;;;;;:22;;;;4391:129;623:84:11;;;;;;;;;;;;672:35;623:84;;1201:25;;;;;;;;;;;;;;;;4770:145:0;;;;;;;;;;-1:-1:-1;4770:145:0;;;;;:::i;:::-;;:::i;:::-;;5787:214;;;;;;;;;;-1:-1:-1;5787:214:0;;;;;:::i;:::-;;:::i;5477:107:11:-;;;;;;;;;;;;;:::i;3943:352::-;;;;;;;;;;-1:-1:-1;3943:352:11;;;;;:::i;:::-;;:::i;784:76::-;;;;;;;;;;;;829:31;784:76;;2781:239;;;;;;;;;;-1:-1:-1;2781:239:11;;;;;:::i;:::-;;:::i;4303:391::-;;;;;;;;;;-1:-1:-1;4303:391:11;;;;;:::i;:::-;;:::i;2895:145:0:-;;;;;;;;;;-1:-1:-1;2895:145:0;;;;;:::i;:::-;;:::i;2242:307:11:-;;;;;;;;;;-1:-1:-1;2242:307:11;;;;;:::i;:::-;;:::i;3028:907::-;;;;;;:::i;:::-;;:::i;5207:143::-;;;;;;;;;;-1:-1:-1;5207:143:11;;;;;:::i;:::-;-1:-1:-1;;;;;5310:24:11;;;;5283:7;5310:24;;;:17;:24;;;;;;;;:32;;;;;;;;;5207:143;4702:357;;;;;;;;;;-1:-1:-1;4702:357:11;;;;;:::i;:::-;;:::i;5358:111::-;;;;;;;;;;;;;:::i;5149:147:0:-;;;;;;;;;;-1:-1:-1;5149:147:0;;;;;:::i;:::-;;:::i;1125:31:11:-;;;;;;;;;;-1:-1:-1;1125:31:11;;;;-1:-1:-1;;;;;1125:31:11;;;;;;-1:-1:-1;;;;;4140:32:16;;;4122:51;;4110:2;4095:18;1125:31:11;3959:220:16;1050:66:11;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1050:66:11;;1163:31;;;;;;;;;;;;;;;;466:80;;;;;;;;;;;;513:33;466:80;;2557:216;;;;;;;;;;-1:-1:-1;2557:216:11;;;;;:::i;:::-;;:::i;5067:132::-;;;;;;;;;;-1:-1:-1;5067:132:11;;;;;:::i;:::-;-1:-1:-1;;;;;5163:20:11;;;;5139:4;5163:20;;;:13;:20;;;;;;;;:28;;;;;;;;;;;5067:132;2606:202:0;2691:4;-1:-1:-1;;;;;;2714:47:0;;-1:-1:-1;;;2714:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:8;;;2765:36:0;2707:94;2606:202;-1:-1:-1;;2606:202:0:o;4770:145::-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4883:25:::1;4894:4;4900:7;4883:10;:25::i;:::-;4770:145:::0;;;:::o;5787:214::-;-1:-1:-1;;;;;5882:23:0;;719:10:5;5882:23:0;5874:83;;;;-1:-1:-1;;;5874:83:0;;4386:2:16;5874:83:0;;;4368:21:16;4425:2;4405:18;;;4398:30;4464:34;4444:18;;;4437:62;-1:-1:-1;;;4515:18:16;;;4508:45;4570:19;;5874:83:0;;;;;;;;;5968:26;5980:4;5986:7;5968:11;:26::i;:::-;5787:214;;:::o;5477:107:11:-;5549:15;;:27;;;-1:-1:-1;;;5549:27:11;;;;5522:7;;-1:-1:-1;;;;;5549:15:11;;:25;;:27;;;;;;;;;;;;;;:15;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5542:34;;5477:107;:::o;3943:352::-;-1:-1:-1;;;;;;;;;;;2505:16:0;2516:4;2505:10;:16::i;:::-;4041:21:11::1;4081::::0;4073:54:::1;;;::::0;-1:-1:-1;;;4073:54:11;;4991:2:16;4073:54:11::1;::::0;::::1;4973:21:16::0;5030:2;5010:18;;;5003:30;-1:-1:-1;;;5049:18:16;;;5042:50;5109:18;;4073:54:11::1;4789:344:16::0;4073:54:11::1;4139:11;4155:3;-1:-1:-1::0;;;;;4155:8:11::1;4171:17;4155:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4138:56;;;4213:6;4205:15;;;::::0;::::1;;4238:49;::::0;;-1:-1:-1;;;;;5568:32:16;;5550:51;;5632:2;5617:18;;5610:34;;;4271:15:11::1;5660:18:16::0;;;5653:34;;;;4238:49:11::1;::::0;5538:2:16;5523:18;4238:49:11::1;;;;;;;;4005:290;;3943:352:::0;;:::o;2781:239::-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;2900:10:11::1;::::0;;2921:24;;;;2963:49:::1;::::0;;5872:25:16;;;5928:2;5913:18;;5906:34;;;2963:49:11::1;::::0;5845:18:16;2963:49:11::1;;;;;;;;2861:159;2781:239:::0;;:::o;4303:391::-;-1:-1:-1;;;;;;;;;;;2505:16:0;2516:4;2505:10;:16::i;:::-;4427:42:11::1;::::0;-1:-1:-1;;;4427:42:11;;4463:4:::1;4427:42;::::0;::::1;4122:51:16::0;4402:22:11::1;::::0;-1:-1:-1;;;;;4427:27:11;::::1;::::0;::::1;::::0;4095:18:16;;4427:42:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4402:67;;4508:1;4488:17;:21;4480:54;;;::::0;-1:-1:-1;;;4480:54:11;;4991:2:16;4480:54:11::1;::::0;::::1;4973:21:16::0;5030:2;5010:18;;;5003:30;-1:-1:-1;;;5049:18:16;;;5042:50;5109:18;;4480:54:11::1;4789:344:16::0;4480:54:11::1;4545:50;::::0;-1:-1:-1;;;4545:50:11;;-1:-1:-1;;;;;6351:32:16;;;4545:50:11::1;::::0;::::1;6333:51:16::0;6400:18;;;6393:34;;;4545:26:11;::::1;::::0;::::1;::::0;6306:18:16;;4545:50:11::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4621:65:11::1;::::0;;-1:-1:-1;;;;;7007:15:16;;;6989:34;;7059:15;;7054:2;7039:18;;7032:43;7091:18;;;7084:34;;;4670:15:11::1;7149:2:16::0;7134:18;;7127:34;4621:65:11::1;::::0;6938:3:16;6923:19;4621:65:11::1;6720:447:16::0;2895:145:0;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;;;;2895:145::o;2242:307:11:-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;2368:15:11::1;::::0;;-1:-1:-1;;;;;2395:26:11;;::::1;-1:-1:-1::0;;;;;;2395:26:11;::::1;::::0;::::1;::::0;;;2490:51:::1;::::0;;2368:15;;;::::1;7384:34:16::0;;;7449:2;7434:18;;7427:43;;;;2395:26:11;;2490:51:::1;::::0;7319:18:16;2490:51:11::1;7172:304:16::0;3028:907:11;1744:1:2;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:2;;7683:2:16;2317:63:2;;;7665:21:16;7722:2;7702:18;;;7695:30;7761:33;7741:18;;;7734:61;7812:18;;2317:63:2;7481:355:16;2317:63:2;1744:1;2455:7;:18;3149:6:11;3141:50:::1;;;::::0;-1:-1:-1;;;3141:50:11;;8043:2:16;3141:50:11::1;::::0;::::1;8025:21:16::0;8082:2;8062:18;;;8055:30;-1:-1:-1;;;8101:18:16;;;8094:51;8162:18;;3141:50:11::1;7841:345:16::0;3141:50:11::1;3230:6;3210:16;;:26;3202:78;;;::::0;-1:-1:-1;;;3202:78:11;;8393:2:16;3202:78:11::1;::::0;::::1;8375:21:16::0;8432:2;8412:18;;;8405:30;8471:34;8451:18;;;8444:62;-1:-1:-1;;;8522:18:16;;;8515:37;8569:19;;3202:78:11::1;8191:403:16::0;3202:78:11::1;3328:14;:12;:14::i;:::-;3318:7;3299:16;:14;:16::i;:::-;:26;;;;:::i;:::-;:43;3291:67;;;::::0;-1:-1:-1;;;3291:67:11;;9066:2:16;3291:67:11::1;::::0;::::1;9048:21:16::0;9105:2;9085:18;;;9078:30;-1:-1:-1;;;9124:18:16;;;9117:41;9175:18;;3291:67:11::1;8864:335:16::0;3291:67:11::1;3390:10;5139:4:::0;5163:20;;;:13;:20;;;;;;;;:28;;;;;;;;;;;3377:40:::1;3369:76;;;::::0;-1:-1:-1;;;3369:76:11;;9406:2:16;3369:76:11::1;::::0;::::1;9388:21:16::0;9445:2;9425:18;;;9418:30;9484:25;9464:18;;;9457:53;9527:18;;3369:76:11::1;9204:347:16::0;3369:76:11::1;3464:15;::::0;:39:::1;::::0;-1:-1:-1;;;3464:39:11;;3497:4:::1;3464:39;::::0;::::1;4122:51:16::0;-1:-1:-1;;;;;3464:15:11;;::::1;::::0;:24:::1;::::0;4095:18:16;;3464:39:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3456:82;;;::::0;-1:-1:-1;;;3456:82:11;;9758:2:16;3456:82:11::1;::::0;::::1;9740:21:16::0;9797:2;9777:18;;;9770:30;9836:32;9816:18;;;9809:60;9886:18;;3456:82:11::1;9556:354:16::0;3456:82:11::1;3557:96;3576:6;;3557:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;3584:10:11::1;::::0;3606:45:::1;::::0;-1:-1:-1;;3623:10:11::1;10120:2:16::0;10116:15;10112:53;3606:45:11::1;::::0;::::1;10100:66:16::0;10182:12;;;10175:28;;;10219:12;;;10212:28;;;3584:10:11;;-1:-1:-1;10256:12:16;;;-1:-1:-1;3606:45:11::1;;;;;;;;;;;;3596:56;;;;;;3557:18;:96::i;:::-;3549:146;;;::::0;-1:-1:-1;;;3549:146:11;;10481:2:16;3549:146:11::1;::::0;::::1;10463:21:16::0;10520:2;10500:18;;;10493:30;10559:34;10539:18;;;10532:62;-1:-1:-1;;;10610:18:16;;;10603:35;10655:19;;3549:146:11::1;10279:401:16::0;3549:146:11::1;3722:10;3708:25;::::0;;;:13:::1;:25;::::0;;;;;;;:33;;;;;;;;:40;;-1:-1:-1;;3708:40:11::1;3744:4;3708:40;::::0;;3759:29;;;:17:::1;:29:::0;;;;;:37;;;;;;;;:48;;3800:7;;3708:25;3759:48:::1;::::0;3800:7;;3759:48:::1;:::i;:::-;::::0;;;-1:-1:-1;;3820:15:11::1;::::0;:45:::1;::::0;-1:-1:-1;;;3820:45:11;;3846:10:::1;3820:45;::::0;::::1;6333:51:16::0;6400:18;;;6393:34;;;-1:-1:-1;;;;;3820:15:11;;::::1;::::0;:25:::1;::::0;6306:18:16;;3820:45:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3883:44:11::1;::::0;;5872:25:16;;;3911:15:11::1;5928:2:16::0;5913:18;;5906:34;3890:10:11::1;::::0;-1:-1:-1;3883:44:11::1;::::0;-1:-1:-1;5845:18:16;3883:44:11::1;;;;;;;-1:-1:-1::0;;1701:1:2;2628:22;;-1:-1:-1;;3028:907:11:o;4702:357::-;-1:-1:-1;;;;;;;;;;;2505:16:0;2516:4;2505:10;:16::i;:::-;4816:31:11::1;::::0;-1:-1:-1;;;4816:31:11;;::::1;::::0;::::1;643:25:16::0;;;4859:4:11::1;::::0;-1:-1:-1;;;;;4816:21:11;::::1;::::0;::::1;::::0;616:18:16;;4816:31:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4816:48:11::1;;4808:98;;;::::0;-1:-1:-1;;;4808:98:11;;11396:2:16;4808:98:11::1;::::0;::::1;11378:21:16::0;11435:2;11415:18;;;11408:30;11474:34;11454:18;;;11447:62;-1:-1:-1;;;11525:18:16;;;11518:35;11570:19;;4808:98:11::1;11194:401:16::0;4808:98:11::1;4919:60;::::0;-1:-1:-1;;;4919:60:11;;4958:4:::1;4919:60;::::0;::::1;11840:34:16::0;-1:-1:-1;;;;;11910:15:16;;;11890:18;;;11883:43;11942:18;;;11935:34;;;4919:30:11;::::1;::::0;::::1;::::0;11775:18:16;;4919:60:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5005:46:11::1;::::0;;-1:-1:-1;;;;;7007:15:16;;;6989:34;;7059:15;;7054:2;7039:18;;7032:43;7091:18;;;7084:34;;;5035:15:11::1;7149:2:16::0;7134:18;;7127:34;5005:46:11::1;::::0;-1:-1:-1;6938:3:16;6923:19;;-1:-1:-1;5005:46:11::1;6720:447:16::0;5358:111:11;5432:15;;:29;;;-1:-1:-1;;;5432:29:11;;;;5405:7;;-1:-1:-1;;;;;5432:15:11;;:27;;:29;;;;;;;;;;;;;;:15;:29;;;;;;;;;;;;;;5149:147:0;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5263:26:::1;5275:4;5281:7;5263:11;:26::i;2557:216:11:-:0;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;2661::11::1;::::0;;2688:25;;;;2731:34:::1;::::0;;5872:25:16;;;5928:2;5913:18;;5906:34;;;2731::11::1;::::0;5845:18:16;2731:34:11::1;5698:248:16::0;1588:441:6;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:6;;1688:47;;-1:-1:-1;;;1745:6:6;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:6;;;;;;;;;-1:-1:-1;;;1770:6:6;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:6;;;;;;;;-1:-1:-1;1800:9:6;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:6;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:6;;;;;;;;-1:-1:-1;1915:1:6;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:6;;1936:55;;;;-1:-1:-1;;;1936:55:6;;12760:2:16;1936:55:6;;;12742:21:16;;;12779:18;;;12772:30;12838:34;12818:18;;;12811:62;12890:18;;1936:55:6;12558:356:16;1936:55:6;2015:6;1588:441;-1:-1:-1;;;1588:441:6:o;3334:103:0:-;3400:30;3411:4;719:10:5;3400::0;:30::i;:::-;3334:103;:::o;7244:233::-;7327:22;7335:4;7341:7;7327;:22::i;:::-;7322:149;;7365:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7365:29:0;;;;;;;;;:36;;-1:-1:-1;;7365:36:0;7397:4;7365:36;;;7447:12;719:10:5;;640:96;7447:12:0;-1:-1:-1;;;;;7420:40:0;7438:7;-1:-1:-1;;;;;7420:40:0;7432:4;7420:40;;;;;;;;;;7244:233;;:::o;7602:234::-;7685:22;7693:4;7699:7;7685;:22::i;:::-;7681:149;;;7755:5;7723:12;;;;;;;;;;;-1:-1:-1;;;;;7723:29:0;;;;;;;;;;:37;;-1:-1:-1;;7723:37:0;;;7779:40;719:10:5;;7723:12:0;;7779:40;;7755:5;7779:40;7602:234;;:::o;1154:184:7:-;1275:4;1327;1298:25;1311:5;1318:4;1298:12;:25::i;:::-;:33;;1154:184;-1:-1:-1;;;;1154:184:7:o;3718:492:0:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:0;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:0;;;;;;;;;;-1:-1:-1;;;3844:349:0;;;;;;;:::i;1689:662:7:-;1772:7;1814:4;1772:7;1828:488;1852:5;:12;1848:1;:16;1828:488;;;1885:20;1908:5;1914:1;1908:8;;;;;;;;:::i;:::-;;;;;;;1885:31;;1950:12;1934;:28;1930:376;;2425:13;2473:15;;;2508:4;2501:15;;;2554:4;2538:21;;2060:57;;1930:376;;;2425:13;2473:15;;;2508:4;2501:15;;;2554:4;2538:21;;2234:57;;1930:376;-1:-1:-1;1866:3:7;;;;:::i;:::-;;;;1828:488;;;-1:-1:-1;2332:12:7;1689:662;-1:-1:-1;;;1689:662:7:o;14:286:16:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:16;;209:43;;199:71;;266:1;263;256:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:16;;679:180;-1:-1:-1;679:180:16:o;864:131::-;-1:-1:-1;;;;;939:31:16;;929:42;;919:70;;985:1;982;975:12;1000:315;1068:6;1076;1129:2;1117:9;1108:7;1104:23;1100:32;1097:52;;;1145:1;1142;1135:12;1097:52;1181:9;1168:23;1158:33;;1241:2;1230:9;1226:18;1213:32;1254:31;1279:5;1254:31;:::i;:::-;1304:5;1294:15;;;1000:315;;;;;:::o;1502:247::-;1561:6;1614:2;1602:9;1593:7;1589:23;1585:32;1582:52;;;1630:1;1627;1620:12;1582:52;1669:9;1656:23;1688:31;1713:5;1688:31;:::i;1754:388::-;1822:6;1830;1883:2;1871:9;1862:7;1858:23;1854:32;1851:52;;;1899:1;1896;1889:12;1851:52;1938:9;1925:23;1957:31;1982:5;1957:31;:::i;:::-;2007:5;-1:-1:-1;2064:2:16;2049:18;;2036:32;2077:33;2036:32;2077:33;:::i;2416:757::-;2520:6;2528;2536;2544;2597:2;2585:9;2576:7;2572:23;2568:32;2565:52;;;2613:1;2610;2603:12;2565:52;2653:9;2640:23;2682:18;2723:2;2715:6;2712:14;2709:34;;;2739:1;2736;2729:12;2709:34;2777:6;2766:9;2762:22;2752:32;;2822:7;2815:4;2811:2;2807:13;2803:27;2793:55;;2844:1;2841;2834:12;2793:55;2884:2;2871:16;2910:2;2902:6;2899:14;2896:34;;;2926:1;2923;2916:12;2896:34;2981:7;2974:4;2964:6;2961:1;2957:14;2953:2;2949:23;2945:34;2942:47;2939:67;;;3002:1;2999;2992:12;2939:67;3033:4;3025:13;;;;3057:6;;-1:-1:-1;3095:20:16;;;3082:34;;3163:2;3148:18;3135:32;;-1:-1:-1;2416:757:16;;-1:-1:-1;;;;2416:757:16:o;3178:315::-;3246:6;3254;3307:2;3295:9;3286:7;3282:23;3278:32;3275:52;;;3323:1;3320;3313:12;3275:52;3362:9;3349:23;3381:31;3406:5;3381:31;:::i;:::-;3431:5;3483:2;3468:18;;;;3455:32;;-1:-1:-1;;;3178:315:16:o;3498:456::-;3575:6;3583;3591;3644:2;3632:9;3623:7;3619:23;3615:32;3612:52;;;3660:1;3657;3650:12;3612:52;3699:9;3686:23;3718:31;3743:5;3718:31;:::i;:::-;3768:5;-1:-1:-1;3825:2:16;3810:18;;3797:32;3838:33;3797:32;3838:33;:::i;:::-;3498:456;;3890:7;;-1:-1:-1;;;3944:2:16;3929:18;;;;3916:32;;3498:456::o;4600:184::-;4670:6;4723:2;4711:9;4702:7;4698:23;4694:32;4691:52;;;4739:1;4736;4729:12;4691:52;-1:-1:-1;4762:16:16;;4600:184;-1:-1:-1;4600:184:16:o;6438:277::-;6505:6;6558:2;6546:9;6537:7;6533:23;6529:32;6526:52;;;6574:1;6571;6564:12;6526:52;6606:9;6600:16;6659:5;6652:13;6645:21;6638:5;6635:32;6625:60;;6681:1;6678;6671:12;8599:127;8660:10;8655:3;8651:20;8648:1;8641:31;8691:4;8688:1;8681:15;8715:4;8712:1;8705:15;8731:128;8771:3;8802:1;8798:6;8795:1;8792:13;8789:39;;;8808:18;;:::i;:::-;-1:-1:-1;8844:9:16;;8731:128::o;10938:251::-;11008:6;11061:2;11049:9;11040:7;11036:23;11032:32;11029:52;;;11077:1;11074;11067:12;11029:52;11109:9;11103:16;11128:31;11153:5;11128:31;:::i;11980:168::-;12020:7;12086:1;12082;12078:6;12074:14;12071:1;12068:21;12063:1;12056:9;12049:17;12045:45;12042:71;;;12093:18;;:::i;:::-;-1:-1:-1;12133:9:16;;11980:168::o;12153:127::-;12214:10;12209:3;12205:20;12202:1;12195:31;12245:4;12242:1;12235:15;12269:4;12266:1;12259:15;12285:127;12346:10;12341:3;12337:20;12334:1;12327:31;12377:4;12374:1;12367:15;12401:4;12398:1;12391:15;12417:136;12456:3;12484:5;12474:39;;12493:18;;:::i;:::-;-1:-1:-1;;;12529:18:16;;12417:136::o;12919:258::-;12991:1;13001:113;13015:6;13012:1;13009:13;13001:113;;;13091:11;;;13085:18;13072:11;;;13065:39;13037:2;13030:10;13001:113;;;13132:6;13129:1;13126:13;13123:48;;;13167:1;13158:6;13153:3;13149:16;13142:27;13123:48;;12919:258;;;:::o;13182:786::-;13593:25;13588:3;13581:38;13563:3;13648:6;13642:13;13664:62;13719:6;13714:2;13709:3;13705:12;13698:4;13690:6;13686:17;13664:62;:::i;:::-;-1:-1:-1;;;13785:2:16;13745:16;;;13777:11;;;13770:40;13835:13;;13857:63;13835:13;13906:2;13898:11;;13891:4;13879:17;;13857:63;:::i;:::-;13940:17;13959:2;13936:26;;13182:786;-1:-1:-1;;;;13182:786:16:o;13973:383::-;14122:2;14111:9;14104:21;14085:4;14154:6;14148:13;14197:6;14192:2;14181:9;14177:18;14170:34;14213:66;14272:6;14267:2;14256:9;14252:18;14247:2;14239:6;14235:15;14213:66;:::i;:::-;14340:2;14319:15;-1:-1:-1;;14315:29:16;14300:45;;;;14347:2;14296:54;;13973:383;-1:-1:-1;;13973:383:16:o;14361:135::-;14400:3;14421:17;;;14418:43;;14441:18;;:::i;:::-;-1:-1:-1;14488:1:16;14477:13;;14361:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1236000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT()": "241",
								"DEFAULT_ADMIN_ROLE()": "262",
								"NAGA_HOLDER_MINT_ROUND()": "285",
								"SPECIAL_MINT_ROUND()": "240",
								"WHITELIST_MINT_ROUND()": "261",
								"WITHDRAW_ROLE()": "infinite",
								"currentMintRound()": "2339",
								"getMaxSupply()": "infinite",
								"getRoleAdmin(bytes32)": "2515",
								"getTotalSupply()": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2761",
								"isUserMinted(address,bytes32)": "2741",
								"merkleRoot()": "2407",
								"mint(bytes32[],uint256,bytes32)": "infinite",
								"nagaKidContract()": "2404",
								"renounceRole(bytes32,address)": "29040",
								"revokeRole(bytes32,address)": "infinite",
								"setMerkleRoot(bytes32)": "infinite",
								"setNagaKidContract(address)": "infinite",
								"setRound(bytes32)": "infinite",
								"supportsInterface(bytes4)": "450",
								"userMintedAmount(address,bytes32)": "2719",
								"withdraw(address)": "infinite",
								"withdrawCurrency(address,address)": "infinite",
								"withdrawNFT(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 401,
									"end": 5589,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 401,
									"end": 5589,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 401,
									"end": 5589,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1977,
									"end": 2234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2050,
									"end": 2092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2081,
									"end": 2091,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 2050,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 2050,
									"end": 2092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2050,
									"end": 2092,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 2050,
									"end": 2092,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2103,
									"end": 2140,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 1090,
									"end": 1116,
									"name": "PUSH",
									"source": 11,
									"value": "5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC"
								},
								{
									"begin": 2129,
									"end": 2139,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 2103,
									"end": 2113,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 2103,
									"end": 2140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2103,
									"end": 2140,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 2103,
									"end": 2140,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2151,
									"end": 2187,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2170,
									"end": 2186,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2151,
									"end": 2169,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 2151,
									"end": 2187,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2151,
									"end": 2187,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2151,
									"end": 2187,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2198,
									"end": 2224,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 2212,
									"end": 2223,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2198,
									"end": 2211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2198,
									"end": 2224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2198,
									"end": 2224,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 2198,
									"end": 2224,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 2234,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 401,
									"end": 5589,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 401,
									"end": 5589,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7371,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7397,
									"end": 7401,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7447,
									"end": 7459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7447,
									"end": 7459,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7447,
									"end": 7459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7438,
									"end": 7445,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7432,
									"end": 7436,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2242,
									"end": 2549,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 2242,
									"end": 2549,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2505,
									"end": 2521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2368,
									"end": 2383,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2368,
									"end": 2383,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2368,
									"end": 2383,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2395,
									"end": 2421,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2395,
									"end": 2421,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2395,
									"end": 2421,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2395,
									"end": 2421,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2395,
									"end": 2421,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2395,
									"end": 2421,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2395,
									"end": 2421,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2395,
									"end": 2421,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2395,
									"end": 2421,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2395,
									"end": 2421,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2490,
									"end": 2541,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2490,
									"end": 2541,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2490,
									"end": 2541,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2368,
									"end": 2383,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2368,
									"end": 2383,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2368,
									"end": 2383,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2368,
									"end": 2383,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 599,
									"end": 633,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 599,
									"end": 633,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 599,
									"end": 633,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 664,
									"end": 666,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 649,
									"end": 667,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 649,
									"end": 667,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 642,
									"end": 685,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 642,
									"end": 685,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 642,
									"end": 685,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 642,
									"end": 685,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2395,
									"end": 2421,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2395,
									"end": 2421,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2490,
									"end": 2541,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "ABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973"
								},
								{
									"begin": 2490,
									"end": 2541,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 534,
									"end": 552,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2490,
									"end": 2541,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2490,
									"end": 2541,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2490,
									"end": 2541,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2490,
									"end": 2541,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2490,
									"end": 2541,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2490,
									"end": 2541,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2490,
									"end": 2541,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 11
								},
								{
									"begin": 2325,
									"end": 2549,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2325,
									"end": 2549,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2242,
									"end": 2549,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2242,
									"end": 2549,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2242,
									"end": 2549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 3020,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2781,
									"end": 3020,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2505,
									"end": 2521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2910,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2900,
									"end": 2910,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2900,
									"end": 2910,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2921,
									"end": 2945,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2921,
									"end": 2945,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2921,
									"end": 2945,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2921,
									"end": 2945,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2963,
									"end": 3012,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2963,
									"end": 3012,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2963,
									"end": 3012,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 870,
									"end": 895,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 870,
									"end": 895,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 870,
									"end": 895,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 926,
									"end": 928,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 911,
									"end": 929,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 911,
									"end": 929,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 904,
									"end": 938,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 904,
									"end": 938,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 904,
									"end": 938,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2963,
									"end": 3012,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE"
								},
								{
									"begin": 2963,
									"end": 3012,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 843,
									"end": 861,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2963,
									"end": 3012,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2963,
									"end": 3012,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2963,
									"end": 3012,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2963,
									"end": 3012,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2963,
									"end": 3012,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2963,
									"end": 3012,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2963,
									"end": 3012,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 11
								},
								{
									"begin": 2861,
									"end": 3020,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 3020,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 3020,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 3020,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3437,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3334,
									"end": 3437,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 3411,
									"end": 3415,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 3400,
									"end": 3430,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3334,
									"end": 3437,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3334,
									"end": 3437,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3718,
									"end": 4210,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 3718,
									"end": 4210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3801,
									"end": 4204,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 3801,
									"end": 4204,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 4017,
									"end": 4024,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4027,
									"end": 4029,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551770"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 4129,
									"end": 4133,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4136,
									"end": 4138,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551770"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 3896,
									"end": 4161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 3844,
									"end": 4193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 1676,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1724,
									"end": 1730,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1721,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1720,
									"end": 1730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1720,
									"end": 1734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1710,
									"end": 1735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "CALLDATASIZE",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "CALLDATACOPY",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1745,
									"end": 1751,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1752,
									"end": 1753,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1745,
									"end": 1754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "POP",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1777,
									"end": 1778,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1770,
									"end": 1779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1800,
									"end": 1809,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1816,
									"end": 1822,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1812,
									"end": 1822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1812,
									"end": 1826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1826,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1826,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1832,
									"end": 1833,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1828,
									"end": 1829,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1828,
									"end": 1833,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "181899199A1A9B1B9C1CB0B131B232B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "81"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1879,
									"end": 1884,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1887,
									"end": 1890,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 1879,
									"end": 1890,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1866,
									"end": 1891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1860,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1861,
									"end": 1862,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1854,
									"end": 1863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1915,
									"end": 1916,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1835,
									"end": 1838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1944,
									"end": 1954,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1954,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3438,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3418,
									"end": 3439,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3418,
									"end": 3439,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3418,
									"end": 3439,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3455,
									"end": 3473,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3455,
									"end": 3473,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3455,
									"end": 3473,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3448,
									"end": 3478,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3514,
									"end": 3548,
									"name": "PUSH",
									"source": 16,
									"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
								},
								{
									"begin": 3494,
									"end": 3512,
									"name": "PUSH",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 3494,
									"end": 3512,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3494,
									"end": 3512,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3487,
									"end": 3549,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3566,
									"end": 3584,
									"name": "PUSH",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 3566,
									"end": 3584,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 3234,
									"end": 3590,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2021,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1588,
									"end": 2029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 382,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 382,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 110,
									"end": 116,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 124,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 171,
									"end": 173,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 150,
									"end": 157,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 146,
									"end": 169,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 142,
									"end": 174,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 139,
									"end": 191,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 139,
									"end": 191,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 139,
									"end": 191,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 187,
									"end": 188,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 185,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 177,
									"end": 189,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 139,
									"end": 191,
									"name": "tag",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 139,
									"end": 191,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 213,
									"end": 229,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 213,
									"end": 229,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 258,
									"end": 289,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 258,
									"end": 289,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 248,
									"end": 290,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 248,
									"end": 290,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 238,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 238,
									"end": 308,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 304,
									"end": 305,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 302,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 294,
									"end": 306,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 238,
									"end": 308,
									"name": "tag",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 238,
									"end": 308,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 372,
									"end": 374,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 357,
									"end": 375,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 357,
									"end": 375,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 357,
									"end": 375,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 357,
									"end": 375,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 351,
									"end": 376,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 327,
									"end": 332,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 327,
									"end": 332,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 351,
									"end": 376,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 351,
									"end": 376,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 382,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 949,
									"end": 1207,
									"name": "tag",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 949,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1021,
									"end": 1022,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1031,
									"end": 1144,
									"name": "tag",
									"source": 16,
									"value": "86"
								},
								{
									"begin": 1031,
									"end": 1144,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1045,
									"end": 1051,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1042,
									"end": 1043,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1039,
									"end": 1052,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 1144,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 1144,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "88"
								},
								{
									"begin": 1031,
									"end": 1144,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1121,
									"end": 1132,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1121,
									"end": 1132,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1121,
									"end": 1132,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1102,
									"end": 1113,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1102,
									"end": 1113,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1102,
									"end": 1113,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1095,
									"end": 1134,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1067,
									"end": 1069,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1060,
									"end": 1070,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 1144,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "86"
								},
								{
									"begin": 1031,
									"end": 1144,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1031,
									"end": 1144,
									"name": "tag",
									"source": 16,
									"value": "88"
								},
								{
									"begin": 1031,
									"end": 1144,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1159,
									"end": 1160,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1156,
									"end": 1169,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1153,
									"end": 1201,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1153,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 1153,
									"end": 1201,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1197,
									"end": 1198,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1188,
									"end": 1194,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1183,
									"end": 1186,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1179,
									"end": 1195,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1172,
									"end": 1199,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1153,
									"end": 1201,
									"name": "tag",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 1153,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1153,
									"end": 1201,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 949,
									"end": 1207,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 949,
									"end": 1207,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 949,
									"end": 1207,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 949,
									"end": 1207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1212,
									"end": 1998,
									"name": "tag",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 1212,
									"end": 1998,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1623,
									"end": 1648,
									"name": "PUSH",
									"source": 16,
									"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
								},
								{
									"begin": 1618,
									"end": 1621,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1611,
									"end": 1649,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1593,
									"end": 1596,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1694,
									"end": 1756,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 1749,
									"end": 1755,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1744,
									"end": 1746,
									"name": "PUSH",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 1739,
									"end": 1742,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1735,
									"end": 1747,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1728,
									"end": 1732,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1720,
									"end": 1726,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 1716,
									"end": 1733,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1694,
									"end": 1756,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 1694,
									"end": 1756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1694,
									"end": 1756,
									"name": "tag",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 1694,
									"end": 1756,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1034B99036B4B9B9B4B733903937B6329"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1815,
									"end": 1817,
									"name": "PUSH",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 1775,
									"end": 1791,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1775,
									"end": 1791,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1775,
									"end": 1791,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1807,
									"end": 1818,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1807,
									"end": 1818,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1807,
									"end": 1818,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1800,
									"end": 1840,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1878,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1878,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1887,
									"end": 1950,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "92"
								},
								{
									"begin": 1865,
									"end": 1878,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1936,
									"end": 1938,
									"name": "PUSH",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 1928,
									"end": 1939,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1928,
									"end": 1939,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1921,
									"end": 1925,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1909,
									"end": 1926,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 1909,
									"end": 1926,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1887,
									"end": 1950,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 1887,
									"end": 1950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1887,
									"end": 1950,
									"name": "tag",
									"source": 16,
									"value": "92"
								},
								{
									"begin": 1887,
									"end": 1950,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1970,
									"end": 1987,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1989,
									"end": 1991,
									"name": "PUSH",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 1966,
									"end": 1992,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1966,
									"end": 1992,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 1212,
									"end": 1998,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1212,
									"end": 1998,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2003,
									"end": 2386,
									"name": "tag",
									"source": 16,
									"value": "48"
								},
								{
									"begin": 2003,
									"end": 2386,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2152,
									"end": 2154,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2141,
									"end": 2150,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2134,
									"end": 2155,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2115,
									"end": 2119,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2184,
									"end": 2190,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2178,
									"end": 2191,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 2227,
									"end": 2233,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2222,
									"end": 2224,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2211,
									"end": 2220,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2207,
									"end": 2225,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2200,
									"end": 2234,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2243,
									"end": 2309,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "94"
								},
								{
									"begin": 2302,
									"end": 2308,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2297,
									"end": 2299,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 2286,
									"end": 2295,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2282,
									"end": 2300,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2277,
									"end": 2279,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 2265,
									"end": 2280,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2243,
									"end": 2309,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 2243,
									"end": 2309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2243,
									"end": 2309,
									"name": "tag",
									"source": 16,
									"value": "94"
								},
								{
									"begin": 2243,
									"end": 2309,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2370,
									"end": 2372,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2349,
									"end": 2364,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2345,
									"end": 2374,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2330,
									"end": 2375,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2330,
									"end": 2375,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2330,
									"end": 2375,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2330,
									"end": 2375,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2377,
									"end": 2379,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 2326,
									"end": 2380,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2326,
									"end": 2380,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2003,
									"end": 2386,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2003,
									"end": 2386,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2391,
									"end": 2518,
									"name": "tag",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 2391,
									"end": 2518,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2452,
									"end": 2462,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 2447,
									"end": 2450,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 2443,
									"end": 2463,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2440,
									"end": 2441,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2433,
									"end": 2464,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2483,
									"end": 2487,
									"name": "PUSH",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 2480,
									"end": 2481,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 2473,
									"end": 2488,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2507,
									"end": 2511,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2504,
									"end": 2505,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2497,
									"end": 2512,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 2523,
									"end": 2691,
									"name": "tag",
									"source": 16,
									"value": "51"
								},
								{
									"begin": 2523,
									"end": 2691,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2563,
									"end": 2570,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2629,
									"end": 2630,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2625,
									"end": 2626,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2621,
									"end": 2627,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 2617,
									"end": 2631,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 2614,
									"end": 2615,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2611,
									"end": 2632,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2606,
									"end": 2607,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2599,
									"end": 2608,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2592,
									"end": 2609,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2588,
									"end": 2633,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2585,
									"end": 2656,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2585,
									"end": 2656,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "98"
								},
								{
									"begin": 2585,
									"end": 2656,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2636,
									"end": 2654,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "98"
								},
								{
									"begin": 2636,
									"end": 2654,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 2636,
									"end": 2654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2636,
									"end": 2654,
									"name": "tag",
									"source": 16,
									"value": "98"
								},
								{
									"begin": 2636,
									"end": 2654,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2676,
									"end": 2685,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 2676,
									"end": 2685,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2523,
									"end": 2691,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2696,
									"end": 2824,
									"name": "tag",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 2696,
									"end": 2824,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2736,
									"end": 2739,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 2768,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2763,
									"end": 2769,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 2760,
									"end": 2761,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2757,
									"end": 2770,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "101"
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2773,
									"end": 2791,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "101"
								},
								{
									"begin": 2773,
									"end": 2791,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 2773,
									"end": 2791,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2773,
									"end": 2791,
									"name": "tag",
									"source": 16,
									"value": "101"
								},
								{
									"begin": 2773,
									"end": 2791,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2809,
									"end": 2818,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2809,
									"end": 2818,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2696,
									"end": 2824,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2829,
									"end": 2956,
									"name": "tag",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 2829,
									"end": 2956,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2890,
									"end": 2900,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 2885,
									"end": 2888,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 2881,
									"end": 2901,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2878,
									"end": 2879,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2871,
									"end": 2902,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2921,
									"end": 2925,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 2918,
									"end": 2919,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 2911,
									"end": 2926,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2945,
									"end": 2949,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2942,
									"end": 2943,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2935,
									"end": 2950,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 2961,
									"end": 3088,
									"name": "tag",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 2961,
									"end": 3088,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3022,
									"end": 3032,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 3017,
									"end": 3020,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 3013,
									"end": 3033,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3010,
									"end": 3011,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3003,
									"end": 3034,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "PUSH",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 3050,
									"end": 3051,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 3043,
									"end": 3058,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3077,
									"end": 3081,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3074,
									"end": 3075,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3067,
									"end": 3082,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 3093,
									"end": 3229,
									"name": "tag",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 3093,
									"end": 3229,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3132,
									"end": 3135,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3160,
									"end": 3165,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3150,
									"end": 3189,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "106"
								},
								{
									"begin": 3150,
									"end": 3189,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3169,
									"end": 3187,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "106"
								},
								{
									"begin": 3169,
									"end": 3187,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 3169,
									"end": 3187,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3169,
									"end": 3187,
									"name": "tag",
									"source": 16,
									"value": "106"
								},
								{
									"begin": 3169,
									"end": 3187,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3093,
									"end": 3229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3234,
									"end": 3590,
									"name": "tag",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 3234,
									"end": 3590,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 401,
									"end": 5589,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 401,
									"end": 5589,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 401,
									"end": 5589,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 401,
									"end": 5589,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 5589,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 401,
									"end": 5589,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 5589,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bb9fd3bdf22b22bdcafbca7ff910eba4d05f7bb54f4702ca0411d7b97c8d12564736f6c634300080f0033",
									".code": [
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "9E6C8855"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "EF5FE79F"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "EF5FE79F"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "F500CDFC"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "FF05FE4A"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "FFDC6129"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "DF4E5881"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "E02023A1"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "9E6C8855"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "9F930765"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "B5ABAFA1"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "BFF863EC"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "C4E41B22"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "5B94BBC3"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "5B94BBC3"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "7CB64759"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "8407ECC4"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "4C0F38C2"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "51CFF8D9"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "A25DEA9"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "24C37A85"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "2EB4A7AB"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 5589,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 971,
											"end": 1037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 643,
											"end": 668,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 643,
											"end": 668,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 937,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 497,
											"end": 674,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4391,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 623,
											"end": 707,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 623,
											"end": 707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 623,
											"end": 707,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 623,
											"end": 707,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 623,
											"end": 707,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 623,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 623,
											"end": 707,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 623,
											"end": 707,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 707,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 623,
											"end": 707,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 623,
											"end": 707,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 623,
											"end": 707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 623,
											"end": 707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 623,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 672,
											"end": 707,
											"name": "PUSH",
											"source": 11,
											"value": "B3C595E55271590809F54E2F4FC3A582754F45B104DD3C41666E2AD310493DB3"
										},
										{
											"begin": 623,
											"end": 707,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 623,
											"end": 707,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1226,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4770,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4770,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5787,
											"end": 6001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5787,
											"end": 6001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 5477,
											"end": 5584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3943,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 3943,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 784,
											"end": 860,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 784,
											"end": 860,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 784,
											"end": 860,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 784,
											"end": 860,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 784,
											"end": 860,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 784,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 784,
											"end": 860,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 784,
											"end": 860,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 860,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 784,
											"end": 860,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 784,
											"end": 860,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 784,
											"end": 860,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 784,
											"end": 860,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 784,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 829,
											"end": 860,
											"name": "PUSH",
											"source": 11,
											"value": "5C8C0CE107274AD0569BD760C3D2406C1ED72C697935F3F965BD096C5CDEDEE4"
										},
										{
											"begin": 784,
											"end": 860,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 784,
											"end": 860,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2781,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 2781,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 4303,
											"end": 4694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 4303,
											"end": 4694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 2242,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2242,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3028,
											"end": 3935,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 3028,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3028,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3028,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3028,
											"end": 3935,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3028,
											"end": 3935,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3028,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 3028,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3028,
											"end": 3935,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3028,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3028,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3028,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 5207,
											"end": 5350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5350,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 4702,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 4702,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 5358,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5149,
											"end": 5296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5149,
											"end": 5296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4172,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4140,
											"end": 4172,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4140,
											"end": 4172,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4122,
											"end": 4173,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4122,
											"end": 4173,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4110,
											"end": 4112,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 3959,
											"end": 4179,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "71BC58B11912E913810B39E571F45210DF6492F34A736E059BCE6194BD700432"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1194,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 546,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 466,
											"end": 546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 466,
											"end": 546,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 466,
											"end": 546,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 466,
											"end": 546,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 466,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 466,
											"end": 546,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 466,
											"end": 546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 546,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 466,
											"end": 546,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 466,
											"end": 546,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 466,
											"end": 546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 466,
											"end": 546,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 513,
											"end": 546,
											"name": "PUSH",
											"source": 11,
											"value": "68E7D51FDB912CB107DDA2E59B053D87FCCA666DD0EF5339CD3474CCB5276BBA"
										},
										{
											"begin": 466,
											"end": 546,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 466,
											"end": 546,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2557,
											"end": 2773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2557,
											"end": 2773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 5067,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5139,
											"end": 5143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5176,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5199,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4894,
											"end": 4898,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4907,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4883,
											"end": 4908,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4883,
											"end": 4908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4388,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4425,
											"end": 4427,
											"name": "PUSH",
											"source": 16,
											"value": "2F"
										},
										{
											"begin": 4405,
											"end": 4423,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4405,
											"end": 4423,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4405,
											"end": 4423,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4398,
											"end": 4428,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4464,
											"end": 4498,
											"name": "PUSH",
											"source": 16,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4437,
											"end": 4499,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4515,
											"end": 4533,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 4515,
											"end": 4533,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4515,
											"end": 4533,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4508,
											"end": 4553,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5980,
											"end": 5984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 5993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5968,
											"end": 5994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5564,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5549,
											"end": 5564,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D5ABEB01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5522,
											"end": 5529,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5529,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5549,
											"end": 5564,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5564,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5574,
											"name": "PUSH",
											"source": 11,
											"value": "D5ABEB01"
										},
										{
											"begin": 5549,
											"end": 5574,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5564,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5549,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5477,
											"end": 5584,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5477,
											"end": 5584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "71BC58B11912E913810B39E571F45210DF6492F34A736E059BCE6194BD700432"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4041,
											"end": 4062,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 11
										},
										{
											"begin": 4081,
											"end": 4102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 4073,
											"end": 4127,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4073,
											"end": 4127,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4073,
											"end": 4127,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4127,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4991,
											"end": 4993,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4073,
											"end": 4127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4073,
											"end": 4127,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4973,
											"end": 4994,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5030,
											"end": 5032,
											"name": "PUSH",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5003,
											"end": 5033,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742042616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5049,
											"end": 5067,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 5049,
											"end": 5067,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5049,
											"end": 5067,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5042,
											"end": 5092,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5109,
											"end": 5127,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 5109,
											"end": 5127,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4073,
											"end": 4127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 4789,
											"end": 5133,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4073,
											"end": 4127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 4073,
											"end": 4127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4158,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4155,
											"end": 4163,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4171,
											"end": 4188,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4155,
											"end": 4194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4213,
											"end": 4219,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4205,
											"end": 4220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 4205,
											"end": 4220,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4205,
											"end": 4220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4220,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4205,
											"end": 4220,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4205,
											"end": 4220,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 4205,
											"end": 4220,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4238,
											"end": 4287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4238,
											"end": 4287,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5568,
											"end": 5600,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5568,
											"end": 5600,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5550,
											"end": 5601,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5550,
											"end": 5601,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5610,
											"end": 5644,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5610,
											"end": 5644,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5610,
											"end": 5644,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4271,
											"end": 4286,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5653,
											"end": 5687,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5653,
											"end": 5687,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5653,
											"end": 5687,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5653,
											"end": 5687,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4238,
											"end": 4287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 4238,
											"end": 4287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4238,
											"end": 4287,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 4238,
											"end": 4287,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4238,
											"end": 4287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4287,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4238,
											"end": 4287,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4238,
											"end": 4287,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4238,
											"end": 4287,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4238,
											"end": 4287,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4238,
											"end": 4287,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4295,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4295,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 4295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2900,
											"end": 2910,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2900,
											"end": 2910,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2921,
											"end": 2945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2921,
											"end": 2945,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2921,
											"end": 2945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2921,
											"end": 2945,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3012,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3012,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5872,
											"end": 5897,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5872,
											"end": 5897,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5872,
											"end": 5897,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5928,
											"end": 5930,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2963,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE"
										},
										{
											"begin": 2963,
											"end": 3012,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5863,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2963,
											"end": 3012,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2963,
											"end": 3012,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3012,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3012,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3012,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3012,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 3020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 3020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 4303,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "71BC58B11912E913810B39E571F45210DF6492F34A736E059BCE6194BD700432"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4427,
											"end": 4469,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4427,
											"end": 4469,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4463,
											"end": 4467,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4427,
											"end": 4469,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4122,
											"end": 4173,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4402,
											"end": 4424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4424,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4427,
											"end": 4454,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4454,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 4427,
											"end": 4454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 4427,
											"end": 4469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 4427,
											"end": 4469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4402,
											"end": 4469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4402,
											"end": 4469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4505,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4488,
											"end": 4509,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4480,
											"end": 4534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 4480,
											"end": 4534,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4480,
											"end": 4534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4480,
											"end": 4534,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4480,
											"end": 4534,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4480,
											"end": 4534,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4991,
											"end": 4993,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4480,
											"end": 4534,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4480,
											"end": 4534,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4973,
											"end": 4994,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5030,
											"end": 5032,
											"name": "PUSH",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5003,
											"end": 5033,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742042616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5049,
											"end": 5067,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 5049,
											"end": 5067,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5049,
											"end": 5067,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5042,
											"end": 5092,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5109,
											"end": 5127,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 5109,
											"end": 5127,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4480,
											"end": 4534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 4789,
											"end": 5133,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4480,
											"end": 4534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 4480,
											"end": 4534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4545,
											"end": 4595,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4545,
											"end": 4595,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6351,
											"end": 6383,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6351,
											"end": 6383,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6351,
											"end": 6383,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4545,
											"end": 4595,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6333,
											"end": 6384,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6393,
											"end": 6427,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6393,
											"end": 6427,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6393,
											"end": 6427,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4545,
											"end": 4571,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4571,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4571,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 4545,
											"end": 4571,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6324,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6306,
											"end": 6324,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4595,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 4545,
											"end": 4595,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 4545,
											"end": 4595,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4621,
											"end": 4686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4621,
											"end": 4686,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4621,
											"end": 4686,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7059,
											"end": 7074,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7059,
											"end": 7074,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7054,
											"end": 7056,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7032,
											"end": 7075,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7084,
											"end": 7118,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7084,
											"end": 7118,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7084,
											"end": 7118,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4670,
											"end": 4685,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 7149,
											"end": 7151,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7127,
											"end": 7161,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4621,
											"end": 4686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "B818A975F91276DF8BA59329BECBC23C793DF0D503C19AC296C3C372A1FA0461"
										},
										{
											"begin": 4621,
											"end": 4686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6938,
											"end": 6941,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 6923,
											"end": 6942,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4621,
											"end": 4686,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 6720,
											"end": 7167,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2368,
											"end": 2383,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2383,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2421,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2421,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2421,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2490,
											"end": 2541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2541,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2490,
											"end": 2541,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2383,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2383,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2383,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7384,
											"end": 7418,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7384,
											"end": 7418,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7384,
											"end": 7418,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7449,
											"end": 7451,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7470,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7470,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7470,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7470,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2490,
											"end": 2541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "ABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973"
										},
										{
											"begin": 2490,
											"end": 2541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7319,
											"end": 7337,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 7172,
											"end": 7476,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3935,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3028,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7685,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7665,
											"end": 7686,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7722,
											"end": 7724,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 7702,
											"end": 7720,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7702,
											"end": 7720,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7702,
											"end": 7720,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7695,
											"end": 7725,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7761,
											"end": 7794,
											"name": "PUSH",
											"source": 16,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7734,
											"end": 7795,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7812,
											"end": 7830,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 7812,
											"end": 7830,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 7481,
											"end": 7836,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3155,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8043,
											"end": 8045,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8025,
											"end": 8046,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8082,
											"end": 8084,
											"name": "PUSH",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 8062,
											"end": 8080,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8062,
											"end": 8080,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8062,
											"end": 8080,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8085,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26B4B73A1034B9903737BA1030B8383937BB32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8101,
											"end": 8119,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 8101,
											"end": 8119,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8101,
											"end": 8119,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8094,
											"end": 8145,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 7841,
											"end": 8186,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3230,
											"end": 3236,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3210,
											"end": 3226,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3236,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 3202,
											"end": 3280,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3280,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3202,
											"end": 3280,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3280,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8393,
											"end": 8395,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3202,
											"end": 3280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3202,
											"end": 3280,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3280,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8375,
											"end": 8396,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8432,
											"end": 8434,
											"name": "PUSH",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8405,
											"end": 8435,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8471,
											"end": 8505,
											"name": "PUSH",
											"source": 16,
											"value": "436F6E747261637420617265206E6F7420696E2074686973206D696E74696E67"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8444,
											"end": 8506,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937BAB73217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8515,
											"end": 8552,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8569,
											"end": 8588,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 8569,
											"end": 8588,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3202,
											"end": 3280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 8191,
											"end": 8594,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3202,
											"end": 3280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 3202,
											"end": 3280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3328,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3328,
											"end": 3340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 3328,
											"end": 3342,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3328,
											"end": 3342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3328,
											"end": 3342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3318,
											"end": 3325,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3299,
											"end": 3313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3299,
											"end": 3315,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3299,
											"end": 3315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3299,
											"end": 3325,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3299,
											"end": 3325,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3299,
											"end": 3325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3342,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3291,
											"end": 3358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3291,
											"end": 3358,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3291,
											"end": 3358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9066,
											"end": 9068,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3291,
											"end": 3358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3291,
											"end": 3358,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9048,
											"end": 9069,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9105,
											"end": 9107,
											"name": "PUSH",
											"source": 16,
											"value": "B"
										},
										{
											"begin": 9085,
											"end": 9103,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9085,
											"end": 9103,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9085,
											"end": 9103,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9078,
											"end": 9108,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F76657220737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9124,
											"end": 9142,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9124,
											"end": 9142,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9124,
											"end": 9142,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9117,
											"end": 9158,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9175,
											"end": 9193,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 9175,
											"end": 9193,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3291,
											"end": 3358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 8864,
											"end": 9199,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3291,
											"end": 3358,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3291,
											"end": 3358,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3390,
											"end": 3400,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5139,
											"end": 5143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5176,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5183,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5163,
											"end": 5191,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3377,
											"end": 3417,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 3369,
											"end": 3445,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3445,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3369,
											"end": 3445,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3445,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9406,
											"end": 9408,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3369,
											"end": 3445,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3445,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9388,
											"end": 9409,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9445,
											"end": 9447,
											"name": "PUSH",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9418,
											"end": 9448,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9484,
											"end": 9509,
											"name": "PUSH",
											"source": 16,
											"value": "596F752061726520616C7265616479206D696E7465642E000000000000000000"
										},
										{
											"begin": 9464,
											"end": 9482,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9464,
											"end": 9482,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9464,
											"end": 9482,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9457,
											"end": 9510,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9527,
											"end": 9545,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 9527,
											"end": 9545,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3369,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 9204,
											"end": 9551,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3369,
											"end": 3445,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 3369,
											"end": 3445,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3464,
											"end": 3479,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3503,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55138F0D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3464,
											"end": 3503,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3501,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3464,
											"end": 3503,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4122,
											"end": 4173,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3464,
											"end": 3479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3479,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "AA271E1A"
										},
										{
											"begin": 3464,
											"end": 3488,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3503,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 3464,
											"end": 3503,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 3464,
											"end": 3503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 3456,
											"end": 3538,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3538,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3456,
											"end": 3538,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3538,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9758,
											"end": 9760,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3456,
											"end": 3538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3456,
											"end": 3538,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3538,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9740,
											"end": 9761,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9797,
											"end": 9799,
											"name": "PUSH",
											"source": 16,
											"value": "1E"
										},
										{
											"begin": 9777,
											"end": 9795,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9777,
											"end": 9795,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9777,
											"end": 9795,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9770,
											"end": 9800,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 16,
											"value": "436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000"
										},
										{
											"begin": 9816,
											"end": 9834,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9816,
											"end": 9834,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9816,
											"end": 9834,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3456,
											"end": 3538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 9556,
											"end": 9910,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3456,
											"end": 3538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 3456,
											"end": 3538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 3576,
											"end": 3582,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3576,
											"end": 3582,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3653,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3584,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3594,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3651,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3623,
											"end": 3633,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10120,
											"end": 10122,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 10116,
											"end": 10131,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 10112,
											"end": 10165,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3651,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10100,
											"end": 10166,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10182,
											"end": 10194,
											"name": "PUSH",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 10182,
											"end": 10194,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10182,
											"end": 10194,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10175,
											"end": 10203,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 10175,
											"end": 10203,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10175,
											"end": 10203,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10219,
											"end": 10231,
											"name": "PUSH",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 10219,
											"end": 10231,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10219,
											"end": 10231,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10212,
											"end": 10240,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 10212,
											"end": 10240,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10212,
											"end": 10240,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3584,
											"end": 3594,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3584,
											"end": 3594,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "PUSH",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3596,
											"end": 3652,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3596,
											"end": 3652,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3596,
											"end": 3652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3596,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3596,
											"end": 3652,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 3557,
											"end": 3653,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 3557,
											"end": 3653,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 3549,
											"end": 3695,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3695,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3549,
											"end": 3695,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3695,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10481,
											"end": 10483,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3549,
											"end": 3695,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3695,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10463,
											"end": 10484,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10520,
											"end": 10522,
											"name": "PUSH",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 10500,
											"end": 10518,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10500,
											"end": 10518,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10500,
											"end": 10518,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10493,
											"end": 10523,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10559,
											"end": 10593,
											"name": "PUSH",
											"source": 16,
											"value": "556E617574686F72697A65642057686974656C6973744D696E74205468697320"
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2AB9B2B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10610,
											"end": 10628,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 10610,
											"end": 10628,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10610,
											"end": 10628,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10603,
											"end": 10638,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10655,
											"end": 10674,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 10655,
											"end": 10674,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3549,
											"end": 3695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 10279,
											"end": 10680,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3549,
											"end": 3695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 3549,
											"end": 3695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 3732,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3733,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3733,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3733,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3708,
											"end": 3733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3708,
											"end": 3733,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3733,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3733,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3733,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3733,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3733,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3733,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3741,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3741,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3741,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3741,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3741,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3741,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3741,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3741,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3748,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3748,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3748,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3744,
											"end": 3748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3708,
											"end": 3748,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3748,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3748,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3788,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3788,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3788,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3759,
											"end": 3788,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3788,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3788,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3788,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3788,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3796,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3796,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3796,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3796,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3796,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3796,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3796,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3796,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3807,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3807,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3800,
											"end": 3807,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3800,
											"end": 3807,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3733,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3759,
											"end": 3807,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3800,
											"end": 3807,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3800,
											"end": 3807,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3759,
											"end": 3807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3759,
											"end": 3807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3807,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3807,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3807,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3820,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3820,
											"end": 3835,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3865,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43508B05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3820,
											"end": 3865,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3846,
											"end": 3856,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3820,
											"end": 3865,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6333,
											"end": 6384,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6393,
											"end": 6427,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6393,
											"end": 6427,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6393,
											"end": 6427,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3820,
											"end": 3835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3835,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "43508B05"
										},
										{
											"begin": 3820,
											"end": 3845,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6324,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6306,
											"end": 6324,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3865,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3865,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 3820,
											"end": 3865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3883,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 3927,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3927,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5872,
											"end": 5897,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5872,
											"end": 5897,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5872,
											"end": 5897,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3911,
											"end": 3926,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5930,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3890,
											"end": 3900,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3890,
											"end": 3900,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3883,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "25B428DFDE728CCFADDAD7E29E4AC23C24ED7FD1A6E3E3F91894A9A073F5DFFF"
										},
										{
											"begin": 3883,
											"end": 3927,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5845,
											"end": 5863,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3883,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 3927,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3927,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3927,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3927,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3927,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3927,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3028,
											"end": 3935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 4702,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "71BC58B11912E913810B39E571F45210DF6492F34A736E059BCE6194BD700432"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4816,
											"end": 4847,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4816,
											"end": 4847,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4816,
											"end": 4847,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 643,
											"end": 668,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 643,
											"end": 668,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4859,
											"end": 4863,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 4859,
											"end": 4863,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4816,
											"end": 4837,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4837,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6352211E"
										},
										{
											"begin": 4816,
											"end": 4837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 634,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4847,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 4816,
											"end": 4847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 4816,
											"end": 4847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4816,
											"end": 4864,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4864,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4808,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 4808,
											"end": 4906,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4808,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4808,
											"end": 4906,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4808,
											"end": 4906,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4808,
											"end": 4906,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11396,
											"end": 11398,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4808,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4808,
											"end": 4906,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4808,
											"end": 4906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11378,
											"end": 11399,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11435,
											"end": 11437,
											"name": "PUSH",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 11415,
											"end": 11433,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 11415,
											"end": 11433,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11415,
											"end": 11433,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11408,
											"end": 11438,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11474,
											"end": 11508,
											"name": "PUSH",
											"source": 16,
											"value": "5468697320746F6B656E4964206973206E6F74206F776E656420627920636F6E"
										},
										{
											"begin": 11454,
											"end": 11472,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 11454,
											"end": 11472,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11454,
											"end": 11472,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 11509,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11518,
											"end": 11553,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11570,
											"end": 11589,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 11570,
											"end": 11589,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4808,
											"end": 4906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 11194,
											"end": 11595,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4808,
											"end": 4906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 4808,
											"end": 4906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 4979,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4919,
											"end": 4979,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4958,
											"end": 4962,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4919,
											"end": 4979,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11840,
											"end": 11874,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11910,
											"end": 11925,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11910,
											"end": 11925,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11910,
											"end": 11925,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11883,
											"end": 11926,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11935,
											"end": 11969,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11935,
											"end": 11969,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11935,
											"end": 11969,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4919,
											"end": 4949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "42842E0E"
										},
										{
											"begin": 4919,
											"end": 4949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11775,
											"end": 11793,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 11775,
											"end": 11793,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4979,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4979,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 4919,
											"end": 4979,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5005,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5051,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5005,
											"end": 5051,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7059,
											"end": 7074,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 7059,
											"end": 7074,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7054,
											"end": 7056,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7032,
											"end": 7075,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7084,
											"end": 7118,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7084,
											"end": 7118,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7084,
											"end": 7118,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5035,
											"end": 5050,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 7149,
											"end": 7151,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7127,
											"end": 7161,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5005,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "127A8D3F57942833F6930572BCE52AD882683E36EEB5830D199D3FA4BFA9467"
										},
										{
											"begin": 5005,
											"end": 5051,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6938,
											"end": 6941,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 6923,
											"end": 6942,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6923,
											"end": 6942,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5005,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 6720,
											"end": 7167,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 5358,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5447,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5432,
											"end": 5447,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18160DDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5405,
											"end": 5412,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5412,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5432,
											"end": 5447,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5447,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5459,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 5432,
											"end": 5459,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5447,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5461,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5275,
											"end": 5279,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5281,
											"end": 5288,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5263,
											"end": 5289,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2557,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2661,
											"end": 2677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2661,
											"end": 2677,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2661,
											"end": 2677,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2688,
											"end": 2713,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2688,
											"end": 2713,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2688,
											"end": 2713,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2688,
											"end": 2713,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2731,
											"end": 2765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2765,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5872,
											"end": 5897,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5872,
											"end": 5897,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5872,
											"end": 5897,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5928,
											"end": 5930,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5906,
											"end": 5940,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2731,
											"end": 2765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "521EC96875CA228CD2FC1DBD4C927A34328C9CE1A83BCB8C1F633F012C90D785"
										},
										{
											"begin": 2731,
											"end": 2765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5863,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2731,
											"end": 2765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 5698,
											"end": 5946,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 1724,
											"end": 1730,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 1720,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1720,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 1710,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 1745,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 1770,
											"end": 1779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1800,
											"end": 1809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 1812,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1812,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1833,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1879,
											"end": 1884,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1890,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 1879,
											"end": 1890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 1866,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 1854,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 1835,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12760,
											"end": 12762,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12742,
											"end": 12763,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12742,
											"end": 12763,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12742,
											"end": 12763,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12772,
											"end": 12802,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12838,
											"end": 12872,
											"name": "PUSH",
											"source": 16,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 12818,
											"end": 12836,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 12818,
											"end": 12836,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12818,
											"end": 12836,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12811,
											"end": 12873,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12890,
											"end": 12908,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12890,
											"end": 12908,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 12558,
											"end": 12914,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 2029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 3400,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 7335,
											"end": 7339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7327,
											"end": 7349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7397,
											"end": 7401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7447,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 7447,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7438,
											"end": 7445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7436,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7699,
											"end": 7706,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7685,
											"end": 7707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1279,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1322,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 1298,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1331,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1331,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1154,
											"end": 1338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3806,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3989,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4101,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 3896,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 3844,
											"end": 4193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1852,
											"end": 1864,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1848,
											"end": 1864,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1908,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1885,
											"end": 1916,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1885,
											"end": 1916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 1946,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 1962,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2558,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2060,
											"end": 2117,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2060,
											"end": 2117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2558,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2291,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 1866,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 679,
											"end": 859,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 679,
											"end": 859,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 738,
											"end": 744,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 793,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 779,
											"end": 788,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 770,
											"end": 777,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 766,
											"end": 789,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 762,
											"end": 794,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 759,
											"end": 811,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 759,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 759,
											"end": 811,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 807,
											"end": 808,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 805,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 797,
											"end": 809,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 759,
											"end": 811,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 759,
											"end": 811,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 830,
											"end": 853,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 830,
											"end": 853,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 679,
											"end": 859,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 679,
											"end": 859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 864,
											"end": 995,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 864,
											"end": 995,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 939,
											"end": 970,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 939,
											"end": 970,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 929,
											"end": 971,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 929,
											"end": 971,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 919,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 919,
											"end": 989,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 985,
											"end": 986,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 983,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 975,
											"end": 987,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "tag",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1129,
											"end": 1131,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1126,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1108,
											"end": 1115,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1100,
											"end": 1132,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1145,
											"end": 1146,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1143,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "tag",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1181,
											"end": 1190,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1168,
											"end": 1191,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1158,
											"end": 1191,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1158,
											"end": 1191,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1241,
											"end": 1243,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1213,
											"end": 1245,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 1279,
											"end": 1284,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 1254,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1502,
											"end": 1749,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1502,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1561,
											"end": 1567,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1611,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1593,
											"end": 1600,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1589,
											"end": 1612,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1617,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1582,
											"end": 1634,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1582,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 1582,
											"end": 1634,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1630,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1628,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1582,
											"end": 1634,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 1582,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1669,
											"end": 1678,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1656,
											"end": 1679,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1688,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 1713,
											"end": 1718,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1688,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 1688,
											"end": 1719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1754,
											"end": 2142,
											"name": "tag",
											"source": 16,
											"value": "89"
										},
										{
											"begin": 1754,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1822,
											"end": 1828,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1883,
											"end": 1885,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1880,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1862,
											"end": 1869,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1858,
											"end": 1881,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1851,
											"end": 1903,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1851,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 1851,
											"end": 1903,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1851,
											"end": 1903,
											"name": "tag",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 1851,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1925,
											"end": 1948,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1957,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 1982,
											"end": 1987,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1957,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 1957,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1957,
											"end": 1988,
											"name": "tag",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 1957,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2066,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2077,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2077,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 2077,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2416,
											"end": 3173,
											"name": "tag",
											"source": 16,
											"value": "103"
										},
										{
											"begin": 2416,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2534,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2536,
											"end": 2542,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2597,
											"end": 2599,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2585,
											"end": 2594,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2576,
											"end": 2583,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2568,
											"end": 2600,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2617,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 2565,
											"end": 2617,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2617,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 2565,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2653,
											"end": 2662,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2725,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2709,
											"end": 2743,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2709,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 2709,
											"end": 2743,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2739,
											"end": 2740,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2737,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2729,
											"end": 2741,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2709,
											"end": 2743,
											"name": "tag",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 2709,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2777,
											"end": 2783,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2766,
											"end": 2775,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 2762,
											"end": 2784,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2752,
											"end": 2784,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2752,
											"end": 2784,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2822,
											"end": 2829,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 2815,
											"end": 2819,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2811,
											"end": 2813,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2820,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2793,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 2793,
											"end": 2848,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2844,
											"end": 2845,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2842,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2834,
											"end": 2846,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2793,
											"end": 2848,
											"name": "tag",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 2793,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2884,
											"end": 2886,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2871,
											"end": 2887,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2896,
											"end": 2930,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2896,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 2896,
											"end": 2930,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2924,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2916,
											"end": 2928,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2896,
											"end": 2930,
											"name": "tag",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 2896,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2981,
											"end": 2988,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 2974,
											"end": 2978,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 2970,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2961,
											"end": 2962,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2953,
											"end": 2955,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2949,
											"end": 2972,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2945,
											"end": 2979,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2942,
											"end": 2989,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2939,
											"end": 3006,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2939,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 2939,
											"end": 3006,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3002,
											"end": 3003,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2999,
											"end": 3000,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2992,
											"end": 3004,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2939,
											"end": 3006,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 2939,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3033,
											"end": 3037,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "SWAP10",
											"source": 16
										},
										{
											"begin": 3057,
											"end": 3063,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3057,
											"end": 3063,
											"name": "SWAP9",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3115,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3095,
											"end": 3115,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3095,
											"end": 3115,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3082,
											"end": 3116,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3082,
											"end": 3116,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3135,
											"end": 3167,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3135,
											"end": 3167,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2416,
											"end": 3173,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2416,
											"end": 3173,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2416,
											"end": 3173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3178,
											"end": 3493,
											"name": "tag",
											"source": 16,
											"value": "112"
										},
										{
											"begin": 3178,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3307,
											"end": 3309,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3295,
											"end": 3304,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3286,
											"end": 3293,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3282,
											"end": 3305,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3278,
											"end": 3310,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3313,
											"end": 3325,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3362,
											"end": 3371,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3381,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 3406,
											"end": 3411,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3381,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 3381,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3381,
											"end": 3412,
											"name": "tag",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 3381,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3431,
											"end": 3436,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 3483,
											"end": 3485,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3468,
											"end": 3486,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3468,
											"end": 3486,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3468,
											"end": 3486,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3468,
											"end": 3486,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3487,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3455,
											"end": 3487,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3178,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3498,
											"end": 3954,
											"name": "tag",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 3498,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3589,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3591,
											"end": 3597,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3646,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3632,
											"end": 3641,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3623,
											"end": 3630,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3619,
											"end": 3642,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3615,
											"end": 3647,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3612,
											"end": 3664,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3612,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 3612,
											"end": 3664,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3650,
											"end": 3662,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3612,
											"end": 3664,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 3612,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3699,
											"end": 3708,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3686,
											"end": 3709,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3718,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3718,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 3718,
											"end": 3749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3718,
											"end": 3749,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 3718,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3768,
											"end": 3773,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3825,
											"end": 3827,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3797,
											"end": 3829,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3838,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 3797,
											"end": 3829,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3838,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 3838,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3838,
											"end": 3871,
											"name": "tag",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 3838,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3498,
											"end": 3954,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3498,
											"end": 3954,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 3890,
											"end": 3897,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3890,
											"end": 3897,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3944,
											"end": 3946,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3916,
											"end": 3948,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3916,
											"end": 3948,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3498,
											"end": 3954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4600,
											"end": 4784,
											"name": "tag",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 4600,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4725,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4702,
											"end": 4709,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4698,
											"end": 4721,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4691,
											"end": 4743,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4691,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 4691,
											"end": 4743,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4737,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4691,
											"end": 4743,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 4691,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4762,
											"end": 4778,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4762,
											"end": 4778,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4600,
											"end": 4784,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4600,
											"end": 4784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6438,
											"end": 6715,
											"name": "tag",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 6438,
											"end": 6715,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6505,
											"end": 6511,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6560,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6546,
											"end": 6555,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6537,
											"end": 6544,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6533,
											"end": 6556,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6529,
											"end": 6561,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6526,
											"end": 6578,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6526,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 6526,
											"end": 6578,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6574,
											"end": 6575,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6572,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6564,
											"end": 6576,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6526,
											"end": 6578,
											"name": "tag",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 6526,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6606,
											"end": 6615,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6600,
											"end": 6616,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6659,
											"end": 6664,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6652,
											"end": 6665,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6645,
											"end": 6666,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6638,
											"end": 6643,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6635,
											"end": 6667,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6625,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 6625,
											"end": 6685,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6681,
											"end": 6682,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6679,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6671,
											"end": 6683,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8599,
											"end": 8726,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 8599,
											"end": 8726,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8660,
											"end": 8670,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 8651,
											"end": 8671,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 8648,
											"end": 8649,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8672,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8691,
											"end": 8695,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 8688,
											"end": 8689,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8681,
											"end": 8696,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8715,
											"end": 8719,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8712,
											"end": 8713,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8720,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8731,
											"end": 8859,
											"name": "tag",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 8731,
											"end": 8859,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8771,
											"end": 8774,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8803,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8798,
											"end": 8804,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8792,
											"end": 8805,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 8789,
											"end": 8828,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8789,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 8789,
											"end": 8828,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8808,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 8808,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 8808,
											"end": 8826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8808,
											"end": 8826,
											"name": "tag",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 8808,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8844,
											"end": 8853,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8844,
											"end": 8853,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8731,
											"end": 8859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10938,
											"end": 11189,
											"name": "tag",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 10938,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11008,
											"end": 11014,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11061,
											"end": 11063,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11049,
											"end": 11058,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11040,
											"end": 11047,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11036,
											"end": 11059,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11032,
											"end": 11064,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11029,
											"end": 11081,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11029,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 11029,
											"end": 11081,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11077,
											"end": 11078,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11074,
											"end": 11075,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11067,
											"end": 11079,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11029,
											"end": 11081,
											"name": "tag",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 11029,
											"end": 11081,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11109,
											"end": 11118,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11103,
											"end": 11119,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 11128,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 11153,
											"end": 11158,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11128,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 11128,
											"end": 11159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11980,
											"end": 12148,
											"name": "tag",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 11980,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12020,
											"end": 12027,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12086,
											"end": 12087,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12082,
											"end": 12083,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12078,
											"end": 12084,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 12074,
											"end": 12088,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12071,
											"end": 12072,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12068,
											"end": 12089,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 12063,
											"end": 12064,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12056,
											"end": 12065,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12049,
											"end": 12066,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12045,
											"end": 12090,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12042,
											"end": 12113,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12042,
											"end": 12113,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 12042,
											"end": 12113,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 12093,
											"end": 12111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "tag",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12133,
											"end": 12142,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 12133,
											"end": 12142,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11980,
											"end": 12148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12153,
											"end": 12280,
											"name": "tag",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 12153,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 12224,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 12209,
											"end": 12212,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 12205,
											"end": 12225,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 12202,
											"end": 12203,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12195,
											"end": 12226,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12245,
											"end": 12249,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 12242,
											"end": 12243,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12235,
											"end": 12250,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12269,
											"end": 12273,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12266,
											"end": 12267,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12259,
											"end": 12274,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 12285,
											"end": 12412,
											"name": "tag",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 12285,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12346,
											"end": 12356,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 12341,
											"end": 12344,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 12337,
											"end": 12357,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 12334,
											"end": 12335,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12327,
											"end": 12358,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12377,
											"end": 12381,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 12374,
											"end": 12375,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12367,
											"end": 12382,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12401,
											"end": 12405,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12398,
											"end": 12399,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12391,
											"end": 12406,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 12417,
											"end": 12553,
											"name": "tag",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 12417,
											"end": 12553,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12456,
											"end": 12459,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12484,
											"end": 12489,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12474,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 12474,
											"end": 12513,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12493,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 12493,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 12493,
											"end": 12511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12493,
											"end": 12511,
											"name": "tag",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 12493,
											"end": 12511,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12529,
											"end": 12547,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12529,
											"end": 12547,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12417,
											"end": 12553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12919,
											"end": 13177,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 12919,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12991,
											"end": 12992,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13001,
											"end": 13114,
											"name": "tag",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 13001,
											"end": 13114,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13015,
											"end": 13021,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13012,
											"end": 13013,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13009,
											"end": 13022,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13001,
											"end": 13114,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13001,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 13001,
											"end": 13114,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13091,
											"end": 13102,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13091,
											"end": 13102,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13091,
											"end": 13102,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13085,
											"end": 13103,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 13072,
											"end": 13083,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13072,
											"end": 13083,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13072,
											"end": 13083,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13104,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13037,
											"end": 13039,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13030,
											"end": 13040,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13001,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 13001,
											"end": 13114,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13001,
											"end": 13114,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 13001,
											"end": 13114,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13132,
											"end": 13138,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13129,
											"end": 13130,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13126,
											"end": 13139,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 13123,
											"end": 13171,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13123,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 13123,
											"end": 13171,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13167,
											"end": 13168,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13158,
											"end": 13164,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13153,
											"end": 13156,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13149,
											"end": 13165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13142,
											"end": 13169,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13123,
											"end": 13171,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 13123,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13123,
											"end": 13171,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12919,
											"end": 13177,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12919,
											"end": 13177,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12919,
											"end": 13177,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12919,
											"end": 13177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13182,
											"end": 13968,
											"name": "tag",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 13182,
											"end": 13968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13593,
											"end": 13618,
											"name": "PUSH",
											"source": 16,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 13588,
											"end": 13591,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13581,
											"end": 13619,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13563,
											"end": 13566,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13648,
											"end": 13654,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13642,
											"end": 13655,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 13664,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 13719,
											"end": 13725,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13714,
											"end": 13716,
											"name": "PUSH",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 13709,
											"end": 13712,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13705,
											"end": 13717,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13698,
											"end": 13702,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13690,
											"end": 13696,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 13686,
											"end": 13703,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13664,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 13664,
											"end": 13726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13664,
											"end": 13726,
											"name": "tag",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 13664,
											"end": 13726,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13785,
											"end": 13787,
											"name": "PUSH",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 13745,
											"end": 13761,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13745,
											"end": 13761,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13745,
											"end": 13761,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13777,
											"end": 13788,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13777,
											"end": 13788,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13777,
											"end": 13788,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13770,
											"end": 13810,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13835,
											"end": 13848,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13835,
											"end": 13848,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 13857,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 13835,
											"end": 13848,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13906,
											"end": 13908,
											"name": "PUSH",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 13898,
											"end": 13909,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13898,
											"end": 13909,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13891,
											"end": 13895,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13879,
											"end": 13896,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 13879,
											"end": 13896,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13857,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 13857,
											"end": 13920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13857,
											"end": 13920,
											"name": "tag",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 13857,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13940,
											"end": 13957,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13959,
											"end": 13961,
											"name": "PUSH",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 13936,
											"end": 13962,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13936,
											"end": 13962,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 13182,
											"end": 13968,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13182,
											"end": 13968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13973,
											"end": 14356,
											"name": "tag",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 13973,
											"end": 14356,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14122,
											"end": 14124,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14120,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14104,
											"end": 14125,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14085,
											"end": 14089,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14154,
											"end": 14160,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14148,
											"end": 14161,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 14197,
											"end": 14203,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14192,
											"end": 14194,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14181,
											"end": 14190,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14177,
											"end": 14195,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14170,
											"end": 14204,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14213,
											"end": 14279,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 14272,
											"end": 14278,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14267,
											"end": 14269,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 14256,
											"end": 14265,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14252,
											"end": 14270,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14247,
											"end": 14249,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14239,
											"end": 14245,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 14235,
											"end": 14250,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14213,
											"end": 14279,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 14213,
											"end": 14279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14213,
											"end": 14279,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 14213,
											"end": 14279,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14340,
											"end": 14342,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 14319,
											"end": 14334,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14315,
											"end": 14344,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 14300,
											"end": 14345,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14300,
											"end": 14345,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14300,
											"end": 14345,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14300,
											"end": 14345,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14347,
											"end": 14349,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 14296,
											"end": 14350,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14296,
											"end": 14350,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13973,
											"end": 14356,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13973,
											"end": 14356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14361,
											"end": 14496,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 14361,
											"end": 14496,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14400,
											"end": 14403,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14421,
											"end": 14438,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 14421,
											"end": 14438,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14421,
											"end": 14438,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14418,
											"end": 14461,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 14418,
											"end": 14461,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14441,
											"end": 14459,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 14441,
											"end": 14459,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 14441,
											"end": 14459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14441,
											"end": 14459,
											"name": "tag",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 14441,
											"end": 14459,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14488,
											"end": 14489,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 14477,
											"end": 14490,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14477,
											"end": 14490,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14361,
											"end": 14496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									],
									".data": {
										"71BC58B11912E913810B39E571F45210DF6492F34A736E059BCE6194BD700432": "5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ERC721A/INagaKid.sol",
								"ERC721A/MintNagaKids.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/ERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT()": "0a25dea9",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"NAGA_HOLDER_MINT_ROUND()": "24c37a85",
							"SPECIAL_MINT_ROUND()": "5b94bbc3",
							"WHITELIST_MINT_ROUND()": "f500cdfc",
							"WITHDRAW_ROLE()": "e02023a1",
							"currentMintRound()": "ef5fe79f",
							"getMaxSupply()": "4c0f38c2",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getTotalSupply()": "c4e41b22",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isUserMinted(address,bytes32)": "ffdc6129",
							"merkleRoot()": "2eb4a7ab",
							"mint(bytes32[],uint256,bytes32)": "9f930765",
							"nagaKidContract()": "df4e5881",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setMerkleRoot(bytes32)": "7cb64759",
							"setNagaKidContract(address)": "9e6c8855",
							"setRound(bytes32)": "ff05fe4a",
							"supportsInterface(bytes4)": "01ffc9a7",
							"userMintedAmount(address,bytes32)": "b5abafa1",
							"withdraw(address)": "51cff8d9",
							"withdrawCurrency(address,address)": "8407ecc4",
							"withdrawNFT(address,address,uint256)": "bff863ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract INagaKid\",\"name\":\"_nagaKidContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRootBefore\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRootAfter\",\"type\":\"bytes32\"}],\"name\":\"MerkleRootChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nagaKidBefore\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nagaKidAfter\",\"type\":\"address\"}],\"name\":\"NagaKidContractChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"roundBefore\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"roundAfter\",\"type\":\"bytes32\"}],\"name\":\"RoundChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceOFContract\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceOfContract\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WithdrawCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"NFT\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WithdrawNFT\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAGA_HOLDER_MINT_ROUND\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPECIAL_MINT_ROUND\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WHITELIST_MINT_ROUND\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMintRound\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_round\",\"type\":\"bytes32\"}],\"name\":\"isUserMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_round\",\"type\":\"bytes32\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nagaKidContract\",\"outputs\":[{\"internalType\":\"contract INagaKid\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INagaKid\",\"name\":\"_nagaKid\",\"type\":\"address\"}],\"name\":\"setNagaKidContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_round\",\"type\":\"bytes32\"}],\"name\":\"setRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_round\",\"type\":\"bytes32\"}],\"name\":\"userMintedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"withdrawCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721A/MintNagaKids.sol\":\"MintNagaKids\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"ERC721A/INagaKid.sol\":{\"keccak256\":\"0x7c880cba0d09817b520df026dcb0b4fd7a129a7b4433ef8821e84eacd67e14a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76a6945d0d105709844d1a5eee65e5c8fdc6363d5612ce4e7f34f2556b7e2a3\",\"dweb:/ipfs/QmdiHLF3hVtJPgpz5Qism44oCFSX8SD3bLfh4i7krHapwf\"]},\"ERC721A/MintNagaKids.sol\":{\"keccak256\":\"0x15928586a8ffb354d358ed38304c001e851fc9023688801bfb67982dbeba9e1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://255f65e076dee16aff8a30e4b1c9057fb1761fa8ca30a76b05533d23d15c7639\",\"dweb:/ipfs/QmYtiG6s8F2izEnXWPCMn7284kYPz89yYbaVjv3jZdJ78t\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/ERC721ABurnable.sol\":{\"keccak256\":\"0x19ba9af16e4159db5e89cecf3288eefa8bd8dff0dbd0ca2560d9da05adb2728e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00c6045054fca386d5646c017c932759eb821b29363cd7c5ad3e3a1896e68d5f\",\"dweb:/ipfs/QmNuvnZ5spjAkPFfTKy6mzWSUFtgdkhJfGU6ZU9HgVov3u\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 403,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1079,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "nagaKidContract",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(INagaKid)1041"
							},
							{
								"astId": 1081,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "currentMintRound",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 1083,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "merkleRoot",
								"offset": 0,
								"slot": "4",
								"type": "t_bytes32"
							},
							{
								"astId": 1089,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_isUserMinted",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))"
							},
							{
								"astId": 1095,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_userMintedAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(INagaKid)1041": {
								"encoding": "inplace",
								"label": "contract INagaKid",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(bytes32 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes32,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(bytes32 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes32,t_uint256)"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at `_startTokenId()` (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"erc721a/contracts/ERC721A.sol\":3986:4140  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4057  _name */\n  0x02\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4065  _name = name_ */\n  tag_6\n    /* \"erc721a/contracts/ERC721A.sol\":4060:4065  name_ */\n  dup4\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4057  _name */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4065  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4082  _symbol */\n  0x03\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4092  _symbol = symbol_ */\n  tag_8\n    /* \"erc721a/contracts/ERC721A.sol\":4085:4092  symbol_ */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4082  _symbol */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4092  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4332:4339  uint256 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4133  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_13:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_14:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_22:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_24\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_26\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_27:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_28:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_28)\ntag_30:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_31:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_33:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_34:\n    /* \"#utility.yul\":1354:1415   */\n  tag_35\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_14\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_37\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_14\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_15:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_39:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2114:2659   */\ntag_17:\n    /* \"#utility.yul\":2216:2218   */\n  0x1f\n    /* \"#utility.yul\":2211:2214   */\n  dup3\n    /* \"#utility.yul\":2208:2219   */\n  gt\n    /* \"#utility.yul\":2205:2653   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2252:2253   */\n  0x00\n    /* \"#utility.yul\":2277:2282   */\n  dup2\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2266:2283   */\n  mstore\n    /* \"#utility.yul\":2322:2326   */\n  0x20\n    /* \"#utility.yul\":2318:2320   */\n  dup2\n    /* \"#utility.yul\":2308:2327   */\n  keccak256\n    /* \"#utility.yul\":2392:2394   */\n  0x1f\n    /* \"#utility.yul\":2380:2390   */\n  dup6\n    /* \"#utility.yul\":2376:2395   */\n  add\n    /* \"#utility.yul\":2373:2374   */\n  0x05\n    /* \"#utility.yul\":2369:2396   */\n  shr\n    /* \"#utility.yul\":2363:2367   */\n  dup2\n    /* \"#utility.yul\":2359:2397   */\n  add\n    /* \"#utility.yul\":2428:2432   */\n  0x20\n    /* \"#utility.yul\":2416:2426   */\n  dup7\n    /* \"#utility.yul\":2413:2433   */\n  lt\n    /* \"#utility.yul\":2410:2457   */\n  iszero\n  tag_44\n  jumpi\n  pop\n    /* \"#utility.yul\":2451:2455   */\n  dup1\n    /* \"#utility.yul\":2410:2457   */\ntag_44:\n    /* \"#utility.yul\":2506:2508   */\n  0x1f\n    /* \"#utility.yul\":2501:2504   */\n  dup6\n    /* \"#utility.yul\":2497:2509   */\n  add\n    /* \"#utility.yul\":2494:2495   */\n  0x05\n    /* \"#utility.yul\":2490:2510   */\n  shr\n    /* \"#utility.yul\":2484:2488   */\n  dup3\n    /* \"#utility.yul\":2480:2511   */\n  add\n    /* \"#utility.yul\":2470:2511   */\n  swap2\n  pop\n    /* \"#utility.yul\":2561:2643   */\ntag_45:\n    /* \"#utility.yul\":2579:2581   */\n  dup2\n    /* \"#utility.yul\":2572:2577   */\n  dup2\n    /* \"#utility.yul\":2569:2582   */\n  lt\n    /* \"#utility.yul\":2561:2643   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2624:2641   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2605:2606   */\n  0x01\n    /* \"#utility.yul\":2594:2607   */\n  add\n    /* \"#utility.yul\":2561:2643   */\n  jump(tag_45)\ntag_47:\n    /* \"#utility.yul\":2565:2568   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2205:2653   */\ntag_43:\n    /* \"#utility.yul\":2114:2659   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2835:4187   */\ntag_7:\n    /* \"#utility.yul\":2955:2965   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2977:3007   */\n  dup2\n  gt\n    /* \"#utility.yul\":2974:3030   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3010:3028   */\n  tag_51\n  tag_13\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":3039:3136   */\n  tag_52\n    /* \"#utility.yul\":3129:3135   */\n  dup2\n    /* \"#utility.yul\":3089:3127   */\n  tag_53\n    /* \"#utility.yul\":3121:3125   */\n  dup5\n    /* \"#utility.yul\":3115:3126   */\n  sload\n    /* \"#utility.yul\":3089:3127   */\n  tag_15\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":3083:3087   */\n  dup5\n    /* \"#utility.yul\":3039:3136   */\n  tag_17\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3191:3195   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3255:3257   */\n  0x1f\n    /* \"#utility.yul\":3244:3258   */\n  dup4\n  gt\n    /* \"#utility.yul\":3272:3273   */\n  0x01\n    /* \"#utility.yul\":3267:3930   */\n  dup2\n  eq\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3991:3997   */\n  dup5\n    /* \"#utility.yul\":3988:4077   */\n  iszero\n  tag_56\n  jumpi\n  pop\n    /* \"#utility.yul\":4043:4062   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4037:4063   */\n  mload\n    /* \"#utility.yul\":3988:4077   */\ntag_56:\n  not(0x00)\n    /* \"#utility.yul\":2792:2793   */\n  0x03\n    /* \"#utility.yul\":2788:2799   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2784:2808   */\n  shr\n    /* \"#utility.yul\":2780:2809   */\n  not\n    /* \"#utility.yul\":2770:2810   */\n  and\n    /* \"#utility.yul\":2816:2817   */\n  0x01\n    /* \"#utility.yul\":2812:2823   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2767:2824   */\n  or\n    /* \"#utility.yul\":4090:4171   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3237:4181   */\n  jump(tag_47)\n    /* \"#utility.yul\":3267:3930   */\ntag_55:\n    /* \"#utility.yul\":2061:2062   */\n  0x00\n    /* \"#utility.yul\":2054:2068   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2098:2102   */\n  0x20\n    /* \"#utility.yul\":2085:2103   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3303:3323   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3421:3657   */\ntag_59:\n    /* \"#utility.yul\":3435:3442   */\n  dup3\n    /* \"#utility.yul\":3432:3433   */\n  dup2\n    /* \"#utility.yul\":3429:3443   */\n  lt\n    /* \"#utility.yul\":3421:3657   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3524:3543   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3518:3544   */\n  mload\n    /* \"#utility.yul\":3503:3545   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3616:3643   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3584:3585   */\n  0x01\n    /* \"#utility.yul\":3572:3586   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3451:3470   */\n  dup5\n  add\n    /* \"#utility.yul\":3421:3657   */\n  jump(tag_59)\ntag_61:\n    /* \"#utility.yul\":3425:3428   */\n  pop\n    /* \"#utility.yul\":3685:3691   */\n  dup6\n    /* \"#utility.yul\":3676:3683   */\n  dup3\n    /* \"#utility.yul\":3673:3692   */\n  lt\n    /* \"#utility.yul\":3670:3871   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":3746:3765   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3740:3766   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3829:3830   */\n  0x03\n    /* \"#utility.yul\":3825:3839   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3841:3844   */\n  0xf8\n    /* \"#utility.yul\":3821:3845   */\n  and\n    /* \"#utility.yul\":3817:3854   */\n  shr\n    /* \"#utility.yul\":3813:3855   */\n  not\n    /* \"#utility.yul\":3798:3856   */\n  and\n    /* \"#utility.yul\":3783:3857   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3670:3871   */\ntag_62:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3917:3918   */\n  0x01\n    /* \"#utility.yul\":3901:3915   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3897:3919   */\n  add\n    /* \"#utility.yul\":3884:3920   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2835:4187   */\n  jump\t// out\ntag_19:\n    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1724   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1674:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1528:1731   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n        /* \"erc721a/contracts/ERC721A.sol\":4998:5010  _burnCounter */\n      sload(0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":4789:4796  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":4982:4995  _currentIndex */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5010  _currentIndex - _burnCounter */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":2319:2344   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2307:2309   */\n      0x20\n        /* \"#utility.yul\":2292:2310   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2173:2350   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_9:\n      tag_36\n      tag_49\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_10:\n      tag_30\n      tag_52\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_11:\n      tag_40\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_26\n      tag_61\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_36\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_14:\n      tag_36\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_20\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13781:13785  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13822  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13839  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"erc721a/contracts/ERC721A.sol\":5738:5742  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6058  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_81\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6134  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_81:\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_82\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6210  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_82:\n        /* \"erc721a/contracts/ERC721A.sol\":6014:6210  return... */\n      swap3\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"erc721a/contracts/ERC721A.sol\":11215:11228  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11247:11252  _name */\n      0x02\n        /* \"erc721a/contracts/ERC721A.sol\":11240:11252  return _name */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_33:\n        /* \"erc721a/contracts/ERC721A.sol\":13116:13123  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      tag_91\n        /* \"erc721a/contracts/ERC721A.sol\":13148:13155  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13147  _exists */\n      tag_92\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_93\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13165:13199  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_93:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13232  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_39:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12696  address owner */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      tag_95\n        /* \"erc721a/contracts/ERC721A.sol\":12707:12714  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12706  ownerOf */\n      tag_53\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      jump\t// in\n    tag_95:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12715  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12758  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":12726:12898  if (_msgSenderERC721A() != owner)... */\n      tag_101\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_99\n        /* \"erc721a/contracts/ERC721A.sol\":12794:12799  owner */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_76\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_99:\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_101\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12848:12883  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_101:\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12923  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12937  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":12673:12987  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_47:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22211  uint256 prevOwnershipPacked */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      tag_106\n        /* \"erc721a/contracts/ERC721A.sol\":22233:22240  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22232  _packedOwnershipOf */\n      tag_107\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22241  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22297:22301  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22272:22291  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_108\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22310:22338  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_108:\n        /* \"erc721a/contracts/ERC721A.sol\":22350:22377  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20821:20842  mstore(0x00, tokenId) */\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20652:20667  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":20862:20866  0x20 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":20855:20891  mstore(0x20, tokenApprovalsPtr.slot) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20943:20947  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":20927:20948  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":21031:21057  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":21766:21796  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":21468:21494  and(from, BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21745:21764  eq(msgSender, from) */\n      swap1\n      swap2\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21742:21797  or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":22526:22699  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_117\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_115\n        /* \"erc721a/contracts/ERC721A.sol\":22629:22633  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_76\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_115:\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_117\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22664:22699  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22730  to == address(0) */\n      dup6\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_118\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22739:22762  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_118:\n        /* \"erc721a/contracts/ERC721A.sol\":22905:22920  approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":23043:23044  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23022:23041  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":23015:23045  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23447  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23427:23453  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23519  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23495:23519  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":10863:10874  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":10839:10861  BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":10835:10875  shl(BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":10822:10884  or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23800  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23954  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24117  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24122  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_126\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24174:24175  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":24164:24175  tokenId + 1 */\n      dup5\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":24142:24161  uint256 nextTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24312  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24330  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":24291:24669  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_128\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24431:24444  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24427  nextTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24444  nextTokenId != _currentIndex */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n      tag_128\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24593  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24628  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n    tag_128:\n        /* \"erc721a/contracts/ERC721A.sol\":24124:24683  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_126:\n        /* \"erc721a/contracts/ERC721A.sol\":24727:24734  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24723:24725  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24717:24721  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":22174:24794  {... */\n      pop\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_50:\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      tag_132\n        /* \"erc721a/contracts/ERC721A.sol\":14062:14066  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14068:14070  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14072:14079  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14061  safeTransferFrom */\n      tag_70\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_132:\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_53:\n        /* \"erc721a/contracts/ERC721A.sol\":11021:11028  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      tag_82\n        /* \"erc721a/contracts/ERC721A.sol\":11082:11089  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11081  _packedOwnershipOf */\n      tag_107\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_58:\n        /* \"erc721a/contracts/ERC721A.sol\":6383:6390  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6425  owner == address(0) */\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_136\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":6434:6462  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_136:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6497  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":1022:1035  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6533  _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_61:\n        /* \"erc721a/contracts/ERC721A.sol\":11379:11392  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11411:11418  _symbol */\n      0x03\n        /* \"erc721a/contracts/ERC721A.sol\":11404:11418  return _symbol */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_66:\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13444  operator == _msgSenderERC721A() */\n      dup4\n      and\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n      tag_145\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13453:13470  ApproveToCaller() */\n      mload(0x40)\n      shl(0xe0, 0xb06307db)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n    tag_145:\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13499  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13541  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_70:\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      tag_150\n        /* \"erc721a/contracts/ERC721A.sol\":14331:14335  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14337:14339  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14341:14348  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14330  transferFrom */\n      tag_47\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14377  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14382  to.code.length != 0 */\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":14359:14539  if (to.code.length != 0)... */\n      tag_154\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_152\n        /* \"erc721a/contracts/ERC721A.sol\":14432:14436  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14438:14440  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14442:14449  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14451:14456  _data */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14431  _checkContractOnERC721Received */\n      tag_153\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_152:\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_154\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14484:14524  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_154:\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"erc721a/contracts/ERC721A.sol\":11564:11577  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      tag_156\n        /* \"erc721a/contracts/ERC721A.sol\":11602:11609  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11601  _exists */\n      tag_92\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_157\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":11619:11648  URIQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_157:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11680  string memory baseURI */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n      tag_158\n        /* \"erc721a/contracts/ERC721A.sol\":12125:12134  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":12049:12141  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n    tag_158:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11693  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11716:11723  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11731  bytes(baseURI).length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":11735:11736  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11736  bytes(baseURI).length != 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_160\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_161)\n    tag_160:\n        /* \"erc721a/contracts/ERC721A.sol\":11763:11770  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      tag_162\n        /* \"erc721a/contracts/ERC721A.sol\":11782:11789  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11781  _toString */\n      tag_163\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"erc721a/contracts/ERC721A.sol\":11746:11791  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_161:\n        /* \"erc721a/contracts/ERC721A.sol\":11703:11797  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_92:\n        /* \"erc721a/contracts/ERC721A.sol\":14848:14852  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":14935:14948  _currentIndex */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14932  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14948  tokenId < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":14883:15033  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15002  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15028  _packedOwnerships[tokenId] & BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15033  _packedOwnerships[tokenId] & BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":7949:9054  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_107:\n        /* \"erc721a/contracts/ERC721A.sol\":8016:8023  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8050:8057  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8148:8161  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8145  curr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8161  curr < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8185:8199  uint256 packed */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8219  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n      shl(0xe0, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8312  packed & BITMASK_BURNED */\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8317  packed & BITMASK_BURNED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n      tag_177\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n    tag_178:\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8813  packed */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8817:8818  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8818  packed == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      tag_161\n      jumpi\n      pop\n      not(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":8877:8883  --curr */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8876  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      jump(tag_178)\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n    tag_177:\n        /* \"erc721a/contracts/ERC721A.sol\":8163:8990  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n    tag_176:\n        /* \"erc721a/contracts/ERC721A.sol\":9016:9047  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n    tag_153:\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":28807:28811  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28872  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_190\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28894:28898  from */\n      dup10\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28900:28907  tokenId */\n      dup9\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28909:28914  _data */\n      dup9\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_191\n      jump\t// in\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_193\n      swap2\n      dup2\n      add\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x01\n    tag_192:\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_195\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_200\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_199)\n    tag_200:\n      0x60\n      swap2\n      pop\n    tag_199:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29111  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29118  reason.length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29122:29123  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29123  reason.length == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n      tag_201\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":29150:29190  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n    tag_201:\n        /* \"erc721a/contracts/ERC721A.sol\":29290:29296  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29284:29297  mload(reason) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29275:29281  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29271:29273  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":29267:29282  add(32, reason) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":29260:29298  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_195:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n    tag_163:\n        /* \"erc721a/contracts/ERC721A.sol\":33541:33545  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":33535:33546  mload(0x40) */\n      dup1\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":33548:33551  128 */\n      0x80\n        /* \"erc721a/contracts/ERC721A.sol\":33531:33552  add(mload(0x40), 128) */\n      dup2\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":33624:33641  mstore(0x40, ptr) */\n      swap2\n      dup3\n      swap1\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":34307:34318  sub(ptr, 1) */\n      0x7f\n      add\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":34188:34193  value */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":34437:34439  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34451:34453  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34441:34454  mod(temp, 10) */\n      dup3\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34433:34455  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34307:34318  sub(ptr, 1) */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34420:34456  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34491:34493  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34481:34494  div(temp, 10) */\n      swap1\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n    tag_206:\n        /* \"erc721a/contracts/ERC721A.sol\":34509:34513  temp */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":34695:34696  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":34690:34693  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34686:34697  sub(ptr, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34679:34697  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34745:34747  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34739:34743  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34735:34748  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34731:34733  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34727:34749  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34722:34725  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34714:34750  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34602:34604  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34592:34605  div(temp, 10) */\n      swap1\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      jump(tag_206)\n    tag_208:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34792:34805  sub(end, ptr) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"erc721a/contracts/ERC721A.sol\":34905:34917  sub(ptr, 32) */\n      swap1\n      swap2\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34963:34982  mstore(ptr, length) */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":34905:34917  sub(ptr, 32) */\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_210:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_217:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_22:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_219:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_161\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_210\n      jump\t// in\n        /* \"#utility.yul\":592:850   */\n    tag_211:\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":674:787   */\n    tag_223:\n        /* \"#utility.yul\":688:694   */\n      dup4\n        /* \"#utility.yul\":685:686   */\n      dup2\n        /* \"#utility.yul\":682:695   */\n      lt\n        /* \"#utility.yul\":674:787   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":764:775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":758:776   */\n      mload\n        /* \"#utility.yul\":745:756   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":738:777   */\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":703:713   */\n      add\n        /* \"#utility.yul\":674:787   */\n      jump(tag_223)\n    tag_225:\n        /* \"#utility.yul\":805:811   */\n      dup4\n        /* \"#utility.yul\":802:803   */\n      dup2\n        /* \"#utility.yul\":799:812   */\n      gt\n        /* \"#utility.yul\":796:844   */\n      iszero\n      tag_154\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":822:838   */\n      swap2\n      add\n        /* \"#utility.yul\":815:842   */\n      mstore\n        /* \"#utility.yul\":592:850   */\n      jump\t// out\n        /* \"#utility.yul\":855:1113   */\n    tag_212:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":962:968   */\n      dup1\n        /* \"#utility.yul\":957:960   */\n      dup5\n        /* \"#utility.yul\":950:969   */\n      mstore\n        /* \"#utility.yul\":978:1041   */\n      tag_228\n        /* \"#utility.yul\":1034:1040   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      0x20\n        /* \"#utility.yul\":1022:1025   */\n      dup7\n        /* \"#utility.yul\":1018:1032   */\n      add\n        /* \"#utility.yul\":1011:1015   */\n      0x20\n        /* \"#utility.yul\":1004:1009   */\n      dup7\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":978:1041   */\n      tag_211\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1095:1097   */\n      0x1f\n        /* \"#utility.yul\":1074:1089   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1070:1099   */\n      and\n        /* \"#utility.yul\":1061:1100   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1057:1107   */\n      add\n      swap3\n        /* \"#utility.yul\":855:1113   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1338   */\n    tag_29:\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"#utility.yul\":1256:1265   */\n      dup2\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1230:1234   */\n      0x00\n        /* \"#utility.yul\":1287:1332   */\n      tag_161\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1313:1331   */\n      add\n        /* \"#utility.yul\":1305:1311   */\n      dup5\n        /* \"#utility.yul\":1287:1332   */\n      tag_212\n      jump\t// in\n        /* \"#utility.yul\":1343:1523   */\n    tag_32:\n        /* \"#utility.yul\":1402:1408   */\n      0x00\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup3\n        /* \"#utility.yul\":1434:1441   */\n      dup5\n        /* \"#utility.yul\":1430:1453   */\n      sub\n        /* \"#utility.yul\":1426:1458   */\n      slt\n        /* \"#utility.yul\":1423:1475   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1468:1469   */\n      dup1\n        /* \"#utility.yul\":1461:1473   */\n      revert\n        /* \"#utility.yul\":1423:1475   */\n    tag_232:\n      pop\n        /* \"#utility.yul\":1494:1517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1343:1523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1909   */\n    tag_213:\n        /* \"#utility.yul\":1804:1824   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1853:1884   */\n      dup2\n      and\n        /* \"#utility.yul\":1843:1885   */\n      dup2\n      eq\n        /* \"#utility.yul\":1833:1903   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      dup1\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1833:1903   */\n    tag_235:\n        /* \"#utility.yul\":1736:1909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2168   */\n    tag_38:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup1\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2022:2029   */\n      dup6\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2063   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2011:2063   */\n    tag_237:\n        /* \"#utility.yul\":2082:2111   */\n      tag_238\n        /* \"#utility.yul\":2101:2110   */\n      dup4\n        /* \"#utility.yul\":2082:2111   */\n      tag_213\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2072:2111   */\n      swap5\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2130:2162   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1914:2168   */\n      jump\t// out\n        /* \"#utility.yul\":2355:2683   */\n    tag_46:\n        /* \"#utility.yul\":2432:2438   */\n      0x00\n        /* \"#utility.yul\":2440:2446   */\n      dup1\n        /* \"#utility.yul\":2448:2454   */\n      0x00\n        /* \"#utility.yul\":2501:2503   */\n      0x60\n        /* \"#utility.yul\":2489:2498   */\n      dup5\n        /* \"#utility.yul\":2480:2487   */\n      dup7\n        /* \"#utility.yul\":2476:2499   */\n      sub\n        /* \"#utility.yul\":2472:2504   */\n      slt\n        /* \"#utility.yul\":2469:2521   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2514:2515   */\n      dup1\n        /* \"#utility.yul\":2507:2519   */\n      revert\n        /* \"#utility.yul\":2469:2521   */\n    tag_241:\n        /* \"#utility.yul\":2540:2569   */\n      tag_242\n        /* \"#utility.yul\":2559:2568   */\n      dup5\n        /* \"#utility.yul\":2540:2569   */\n      tag_213\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2530:2569   */\n      swap3\n      pop\n        /* \"#utility.yul\":2588:2626   */\n      tag_243\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup6\n        /* \"#utility.yul\":2607:2625   */\n      add\n        /* \"#utility.yul\":2588:2626   */\n      tag_213\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2578:2626   */\n      swap2\n      pop\n        /* \"#utility.yul\":2673:2675   */\n      0x40\n        /* \"#utility.yul\":2662:2671   */\n      dup5\n        /* \"#utility.yul\":2658:2676   */\n      add\n        /* \"#utility.yul\":2645:2677   */\n      calldataload\n        /* \"#utility.yul\":2635:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2355:2683   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2688:2874   */\n    tag_57:\n        /* \"#utility.yul\":2747:2753   */\n      0x00\n        /* \"#utility.yul\":2800:2802   */\n      0x20\n        /* \"#utility.yul\":2788:2797   */\n      dup3\n        /* \"#utility.yul\":2779:2786   */\n      dup5\n        /* \"#utility.yul\":2775:2798   */\n      sub\n        /* \"#utility.yul\":2771:2803   */\n      slt\n        /* \"#utility.yul\":2768:2820   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":2816:2817   */\n      0x00\n        /* \"#utility.yul\":2813:2814   */\n      dup1\n        /* \"#utility.yul\":2806:2818   */\n      revert\n        /* \"#utility.yul\":2768:2820   */\n    tag_245:\n        /* \"#utility.yul\":2839:2868   */\n      tag_161\n        /* \"#utility.yul\":2858:2867   */\n      dup3\n        /* \"#utility.yul\":2839:2868   */\n      tag_213\n      jump\t// in\n        /* \"#utility.yul\":2879:3226   */\n    tag_65:\n        /* \"#utility.yul\":2944:2950   */\n      0x00\n        /* \"#utility.yul\":2952:2958   */\n      dup1\n        /* \"#utility.yul\":3005:3007   */\n      0x40\n        /* \"#utility.yul\":2993:3002   */\n      dup4\n        /* \"#utility.yul\":2984:2991   */\n      dup6\n        /* \"#utility.yul\":2980:3003   */\n      sub\n        /* \"#utility.yul\":2976:3008   */\n      slt\n        /* \"#utility.yul\":2973:3025   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":3021:3022   */\n      0x00\n        /* \"#utility.yul\":3018:3019   */\n      dup1\n        /* \"#utility.yul\":3011:3023   */\n      revert\n        /* \"#utility.yul\":2973:3025   */\n    tag_248:\n        /* \"#utility.yul\":3044:3073   */\n      tag_249\n        /* \"#utility.yul\":3063:3072   */\n      dup4\n        /* \"#utility.yul\":3044:3073   */\n      tag_213\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3034:3073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3123:3125   */\n      0x20\n        /* \"#utility.yul\":3112:3121   */\n      dup4\n        /* \"#utility.yul\":3108:3126   */\n      add\n        /* \"#utility.yul\":3095:3127   */\n      calldataload\n        /* \"#utility.yul\":3170:3175   */\n      dup1\n        /* \"#utility.yul\":3163:3176   */\n      iszero\n        /* \"#utility.yul\":3156:3177   */\n      iszero\n        /* \"#utility.yul\":3149:3154   */\n      dup2\n        /* \"#utility.yul\":3146:3178   */\n      eq\n        /* \"#utility.yul\":3136:3196   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":3192:3193   */\n      0x00\n        /* \"#utility.yul\":3189:3190   */\n      dup1\n        /* \"#utility.yul\":3182:3194   */\n      revert\n        /* \"#utility.yul\":3136:3196   */\n    tag_250:\n        /* \"#utility.yul\":3215:3220   */\n      dup1\n        /* \"#utility.yul\":3205:3220   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2879:3226   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3231:3358   */\n    tag_214:\n        /* \"#utility.yul\":3292:3302   */\n      0x4e487b71\n        /* \"#utility.yul\":3287:3290   */\n      0xe0\n        /* \"#utility.yul\":3283:3303   */\n      shl\n        /* \"#utility.yul\":3280:3281   */\n      0x00\n        /* \"#utility.yul\":3273:3304   */\n      mstore\n        /* \"#utility.yul\":3323:3327   */\n      0x41\n        /* \"#utility.yul\":3320:3321   */\n      0x04\n        /* \"#utility.yul\":3313:3328   */\n      mstore\n        /* \"#utility.yul\":3347:3351   */\n      0x24\n        /* \"#utility.yul\":3344:3345   */\n      0x00\n        /* \"#utility.yul\":3337:3352   */\n      revert\n        /* \"#utility.yul\":3363:4501   */\n    tag_69:\n        /* \"#utility.yul\":3458:3464   */\n      0x00\n        /* \"#utility.yul\":3466:3472   */\n      dup1\n        /* \"#utility.yul\":3474:3480   */\n      0x00\n        /* \"#utility.yul\":3482:3488   */\n      dup1\n        /* \"#utility.yul\":3535:3538   */\n      0x80\n        /* \"#utility.yul\":3523:3532   */\n      dup6\n        /* \"#utility.yul\":3514:3521   */\n      dup8\n        /* \"#utility.yul\":3510:3533   */\n      sub\n        /* \"#utility.yul\":3506:3539   */\n      slt\n        /* \"#utility.yul\":3503:3556   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":3552:3553   */\n      0x00\n        /* \"#utility.yul\":3549:3550   */\n      dup1\n        /* \"#utility.yul\":3542:3554   */\n      revert\n        /* \"#utility.yul\":3503:3556   */\n    tag_253:\n        /* \"#utility.yul\":3575:3604   */\n      tag_254\n        /* \"#utility.yul\":3594:3603   */\n      dup6\n        /* \"#utility.yul\":3575:3604   */\n      tag_213\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3565:3604   */\n      swap4\n      pop\n        /* \"#utility.yul\":3623:3661   */\n      tag_255\n        /* \"#utility.yul\":3657:3659   */\n      0x20\n        /* \"#utility.yul\":3646:3655   */\n      dup7\n        /* \"#utility.yul\":3642:3660   */\n      add\n        /* \"#utility.yul\":3623:3661   */\n      tag_213\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3613:3661   */\n      swap3\n      pop\n        /* \"#utility.yul\":3708:3710   */\n      0x40\n        /* \"#utility.yul\":3697:3706   */\n      dup6\n        /* \"#utility.yul\":3693:3711   */\n      add\n        /* \"#utility.yul\":3680:3712   */\n      calldataload\n        /* \"#utility.yul\":3670:3712   */\n      swap2\n      pop\n        /* \"#utility.yul\":3763:3765   */\n      0x60\n        /* \"#utility.yul\":3752:3761   */\n      dup6\n        /* \"#utility.yul\":3748:3766   */\n      add\n        /* \"#utility.yul\":3735:3767   */\n      calldataload\n        /* \"#utility.yul\":3786:3804   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3827:3829   */\n      dup1\n        /* \"#utility.yul\":3819:3825   */\n      dup3\n        /* \"#utility.yul\":3816:3830   */\n      gt\n        /* \"#utility.yul\":3813:3847   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3840:3841   */\n      dup1\n        /* \"#utility.yul\":3833:3845   */\n      revert\n        /* \"#utility.yul\":3813:3847   */\n    tag_256:\n        /* \"#utility.yul\":3881:3887   */\n      dup2\n        /* \"#utility.yul\":3870:3879   */\n      dup8\n        /* \"#utility.yul\":3866:3888   */\n      add\n        /* \"#utility.yul\":3856:3888   */\n      swap2\n      pop\n        /* \"#utility.yul\":3926:3933   */\n      dup8\n        /* \"#utility.yul\":3919:3923   */\n      0x1f\n        /* \"#utility.yul\":3915:3917   */\n      dup4\n        /* \"#utility.yul\":3911:3924   */\n      add\n        /* \"#utility.yul\":3907:3934   */\n      slt\n        /* \"#utility.yul\":3897:3952   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3945:3946   */\n      dup1\n        /* \"#utility.yul\":3938:3950   */\n      revert\n        /* \"#utility.yul\":3897:3952   */\n    tag_257:\n        /* \"#utility.yul\":3984:3986   */\n      dup2\n        /* \"#utility.yul\":3971:3987   */\n      calldataload\n        /* \"#utility.yul\":4006:4008   */\n      dup2\n        /* \"#utility.yul\":4002:4004   */\n      dup2\n        /* \"#utility.yul\":3999:4009   */\n      gt\n        /* \"#utility.yul\":3996:4032   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":4012:4030   */\n      tag_259\n      tag_214\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4087:4089   */\n      0x40\n        /* \"#utility.yul\":4081:4090   */\n      mload\n        /* \"#utility.yul\":4055:4057   */\n      0x1f\n        /* \"#utility.yul\":4141:4154   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4137:4159   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4161:4163   */\n      0x3f\n        /* \"#utility.yul\":4133:4164   */\n      add\n        /* \"#utility.yul\":4129:4169   */\n      and\n        /* \"#utility.yul\":4117:4170   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4185:4203   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4205:4227   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4182:4228   */\n      or\n        /* \"#utility.yul\":4179:4251   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":4231:4249   */\n      tag_261\n      tag_214\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4271:4281   */\n      dup2\n        /* \"#utility.yul\":4267:4269   */\n      0x40\n        /* \"#utility.yul\":4260:4282   */\n      mstore\n        /* \"#utility.yul\":4306:4308   */\n      dup3\n        /* \"#utility.yul\":4298:4304   */\n      dup2\n        /* \"#utility.yul\":4291:4309   */\n      mstore\n        /* \"#utility.yul\":4346:4353   */\n      dup11\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4336:4338   */\n      dup5\n        /* \"#utility.yul\":4332:4334   */\n      dup8\n        /* \"#utility.yul\":4328:4339   */\n      add\n        /* \"#utility.yul\":4324:4344   */\n      add\n        /* \"#utility.yul\":4321:4354   */\n      gt\n        /* \"#utility.yul\":4318:4371   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":4367:4368   */\n      0x00\n        /* \"#utility.yul\":4364:4365   */\n      dup1\n        /* \"#utility.yul\":4357:4369   */\n      revert\n        /* \"#utility.yul\":4318:4371   */\n    tag_262:\n        /* \"#utility.yul\":4423:4425   */\n      dup3\n        /* \"#utility.yul\":4418:4420   */\n      0x20\n        /* \"#utility.yul\":4414:4416   */\n      dup7\n        /* \"#utility.yul\":4410:4421   */\n      add\n        /* \"#utility.yul\":4405:4407   */\n      0x20\n        /* \"#utility.yul\":4397:4403   */\n      dup4\n        /* \"#utility.yul\":4393:4408   */\n      add\n        /* \"#utility.yul\":4380:4426   */\n      calldatacopy\n        /* \"#utility.yul\":4468:4469   */\n      0x00\n        /* \"#utility.yul\":4463:4465   */\n      0x20\n        /* \"#utility.yul\":4458:4460   */\n      dup5\n        /* \"#utility.yul\":4450:4456   */\n      dup4\n        /* \"#utility.yul\":4446:4461   */\n      add\n        /* \"#utility.yul\":4442:4466   */\n      add\n        /* \"#utility.yul\":4435:4470   */\n      mstore\n        /* \"#utility.yul\":4489:4495   */\n      dup1\n        /* \"#utility.yul\":4479:4495   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3363:4501   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4506:4766   */\n    tag_77:\n        /* \"#utility.yul\":4574:4580   */\n      0x00\n        /* \"#utility.yul\":4582:4588   */\n      dup1\n        /* \"#utility.yul\":4635:4637   */\n      0x40\n        /* \"#utility.yul\":4623:4632   */\n      dup4\n        /* \"#utility.yul\":4614:4621   */\n      dup6\n        /* \"#utility.yul\":4610:4633   */\n      sub\n        /* \"#utility.yul\":4606:4638   */\n      slt\n        /* \"#utility.yul\":4603:4655   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":4651:4652   */\n      0x00\n        /* \"#utility.yul\":4648:4649   */\n      dup1\n        /* \"#utility.yul\":4641:4653   */\n      revert\n        /* \"#utility.yul\":4603:4655   */\n    tag_264:\n        /* \"#utility.yul\":4674:4703   */\n      tag_265\n        /* \"#utility.yul\":4693:4702   */\n      dup4\n        /* \"#utility.yul\":4674:4703   */\n      tag_213\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4664:4703   */\n      swap2\n      pop\n        /* \"#utility.yul\":4722:4760   */\n      tag_266\n        /* \"#utility.yul\":4756:4758   */\n      0x20\n        /* \"#utility.yul\":4745:4754   */\n      dup5\n        /* \"#utility.yul\":4741:4759   */\n      add\n        /* \"#utility.yul\":4722:4760   */\n      tag_213\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4712:4760   */\n      swap1\n      pop\n        /* \"#utility.yul\":4506:4766   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4771:5151   */\n    tag_85:\n        /* \"#utility.yul\":4850:4851   */\n      0x01\n        /* \"#utility.yul\":4846:4858   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4893:4905   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4914:4975   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":4968:4972   */\n      0x7f\n        /* \"#utility.yul\":4960:4966   */\n      dup3\n        /* \"#utility.yul\":4956:4973   */\n      and\n        /* \"#utility.yul\":4946:4973   */\n      swap2\n      pop\n        /* \"#utility.yul\":4914:4975   */\n    tag_268:\n        /* \"#utility.yul\":5021:5023   */\n      0x20\n        /* \"#utility.yul\":5013:5019   */\n      dup3\n        /* \"#utility.yul\":5010:5024   */\n      lt\n        /* \"#utility.yul\":4990:5008   */\n      dup2\n        /* \"#utility.yul\":4987:5025   */\n      sub\n        /* \"#utility.yul\":4984:5145   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":5067:5077   */\n      0x4e487b71\n        /* \"#utility.yul\":5062:5065   */\n      0xe0\n        /* \"#utility.yul\":5058:5078   */\n      shl\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5048:5079   */\n      mstore\n        /* \"#utility.yul\":5102:5106   */\n      0x22\n        /* \"#utility.yul\":5099:5100   */\n      0x04\n        /* \"#utility.yul\":5092:5107   */\n      mstore\n        /* \"#utility.yul\":5130:5134   */\n      0x24\n        /* \"#utility.yul\":5127:5128   */\n      0x00\n        /* \"#utility.yul\":5120:5135   */\n      revert\n        /* \"#utility.yul\":4984:5145   */\n    tag_269:\n      pop\n        /* \"#utility.yul\":4771:5151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5626   */\n    tag_165:\n        /* \"#utility.yul\":5335:5338   */\n      0x00\n        /* \"#utility.yul\":5373:5379   */\n      dup4\n        /* \"#utility.yul\":5367:5380   */\n      mload\n        /* \"#utility.yul\":5389:5442   */\n      tag_271\n        /* \"#utility.yul\":5435:5441   */\n      dup2\n        /* \"#utility.yul\":5430:5433   */\n      dup5\n        /* \"#utility.yul\":5423:5427   */\n      0x20\n        /* \"#utility.yul\":5415:5421   */\n      dup9\n        /* \"#utility.yul\":5411:5428   */\n      add\n        /* \"#utility.yul\":5389:5442   */\n      tag_211\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5505:5518   */\n      dup4\n      mload\n        /* \"#utility.yul\":5464:5480   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5527:5584   */\n      tag_272\n        /* \"#utility.yul\":5505:5518   */\n      dup2\n        /* \"#utility.yul\":5464:5480   */\n      dup4\n        /* \"#utility.yul\":5561:5565   */\n      0x20\n        /* \"#utility.yul\":5549:5566   */\n      dup9\n      add\n        /* \"#utility.yul\":5527:5584   */\n      tag_211\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5600:5620   */\n      add\n      swap5\n        /* \"#utility.yul\":5156:5626   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5631:6120   */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5900:5915   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":5882:5916   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5952:5967   */\n      dup5\n      and\n        /* \"#utility.yul\":5947:5949   */\n      0x20\n        /* \"#utility.yul\":5932:5950   */\n      dup3\n      add\n        /* \"#utility.yul\":5925:5968   */\n      mstore\n        /* \"#utility.yul\":5999:6001   */\n      0x40\n        /* \"#utility.yul\":5984:6002   */\n      dup2\n      add\n        /* \"#utility.yul\":5977:6011   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6047:6050   */\n      0x80\n        /* \"#utility.yul\":6042:6044   */\n      0x60\n        /* \"#utility.yul\":6027:6045   */\n      dup3\n      add\n        /* \"#utility.yul\":6020:6051   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5825:5829   */\n      0x00\n      swap1\n        /* \"#utility.yul\":6068:6114   */\n      tag_274\n      swap1\n        /* \"#utility.yul\":6094:6113   */\n      dup4\n      add\n        /* \"#utility.yul\":6086:6092   */\n      dup5\n        /* \"#utility.yul\":6068:6114   */\n      tag_212\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":6060:6114   */\n      swap7\n        /* \"#utility.yul\":5631:6120   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6125:6374   */\n    tag_194:\n        /* \"#utility.yul\":6194:6200   */\n      0x00\n        /* \"#utility.yul\":6247:6249   */\n      0x20\n        /* \"#utility.yul\":6235:6244   */\n      dup3\n        /* \"#utility.yul\":6226:6233   */\n      dup5\n        /* \"#utility.yul\":6222:6245   */\n      sub\n        /* \"#utility.yul\":6218:6250   */\n      slt\n        /* \"#utility.yul\":6215:6267   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":6263:6264   */\n      0x00\n        /* \"#utility.yul\":6260:6261   */\n      dup1\n        /* \"#utility.yul\":6253:6265   */\n      revert\n        /* \"#utility.yul\":6215:6267   */\n    tag_276:\n        /* \"#utility.yul\":6295:6304   */\n      dup2\n        /* \"#utility.yul\":6289:6305   */\n      mload\n        /* \"#utility.yul\":6314:6344   */\n      tag_161\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_210\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220113b81d1a5a20c7fe0271c8de1004c0e4d3861dd04dc4ef941abcd61c7145f4b64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1689": {
									"entryPoint": null,
									"id": 1689,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_1698": {
									"entryPoint": null,
									"id": 1698,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 94,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4189:16",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:16"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:16"
															},
															"nodeType": "YulIf",
															"src": "220:55:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:16",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:16"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:16"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:16"
															},
															"nodeType": "YulIf",
															"src": "353:36:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:16"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:16"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:16",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:16"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:16"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:16",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:16"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:16"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:16"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:16"
															},
															"nodeType": "YulIf",
															"src": "536:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:16",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:16"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:16"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:16"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:16"
															},
															"nodeType": "YulIf",
															"src": "698:53:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:16"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:16"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:16"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:16"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:16"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:16"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:16"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:16",
																"statements": []
															},
															"src": "779:133:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:16"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:16"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:16"
															},
															"nodeType": "YulIf",
															"src": "921:80:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:16",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:16",
														"type": ""
													}
												],
												"src": "146:885:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:16"
															},
															"nodeType": "YulIf",
															"src": "1164:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:16",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:16"
															},
															"nodeType": "YulIf",
															"src": "1301:34:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:16"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:16"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:16"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:16"
															},
															"nodeType": "YulIf",
															"src": "1474:36:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:16"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:16"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:16",
														"type": ""
													}
												],
												"src": "1036:562:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:16"
															},
															"nodeType": "YulIf",
															"src": "1746:61:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:16"
															},
															"nodeType": "YulIf",
															"src": "1816:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:16",
														"type": ""
													}
												],
												"src": "1603:380:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2044:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2064:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:14:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2054:14:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2095:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2085:9:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2027:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2035:4:16",
														"type": ""
													}
												],
												"src": "1988:121:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2195:464:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2228:425:16",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2242:11:16",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2252:1:16",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2246:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:16"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2277:5:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2266:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2266:17:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2266:17:16"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2296:31:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2318:2:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2322:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2308:9:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2308:19:16"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2300:4:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2340:57:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2363:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2373:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2380:10:16"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2392:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2376:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2376:19:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2369:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2369:27:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2359:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2359:38:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2344:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2434:23:16",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2436:19:16",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2451:4:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2436:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2416:10:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2428:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2413:2:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2413:20:16"
																		},
																		"nodeType": "YulIf",
																		"src": "2410:47:16"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2470:41:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2484:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2494:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2501:3:16"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2506:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2497:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2497:12:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2490:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2490:20:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2480:31:16"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2474:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2524:24:16",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2537:11:16"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2528:5:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2622:21:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2631:5:16"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2638:2:16"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2624:6:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2624:17:16"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2624:17:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2572:5:16"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2579:2:16"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2569:2:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2569:13:16"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2583:26:16",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2585:22:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2598:5:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2605:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2594:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2594:13:16"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2585:5:16"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2565:3:16",
																			"statements": []
																		},
																		"src": "2561:82:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2211:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2208:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:11:16"
															},
															"nodeType": "YulIf",
															"src": "2205:448:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2167:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2174:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2179:10:16",
														"type": ""
													}
												],
												"src": "2114:545:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2749:81:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2759:65:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2774:4:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2792:1:16",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2795:3:16"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2788:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2788:11:16"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2805:1:16",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2801:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2801:6:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2784:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2784:24:16"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2780:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2780:29:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:40:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2816:1:16",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2819:3:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2767:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2767:57:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2759:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2726:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2732:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2740:4:16",
														"type": ""
													}
												],
												"src": "2664:166:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:1256:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:24:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2961:3:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2955:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:10:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2945:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3008:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3010:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3010:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3010:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2980:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2996:2:16",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3000:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2992:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2992:10:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3004:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2988:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:18:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2977:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2977:30:16"
															},
															"nodeType": "YulIf",
															"src": "2974:56:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3083:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3121:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3115:5:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3115:11:16"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3089:25:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:38:16"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3129:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3039:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:97:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3039:97:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3145:18:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3162:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3149:9:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3172:23:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3191:4:16",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3176:11:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3204:24:16",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3217:11:16"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3204:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3274:656:16",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3288:35:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3307:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3319:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3315:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3315:7:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3303:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3303:20:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3292:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3336:49:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3380:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3350:29:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3350:35:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3340:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3398:10:16",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3407:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3402:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3485:172:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3510:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3528:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3533:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3524:3:16"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3524:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3518:5:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3518:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3503:6:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3503:42:16"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3503:42:16"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3562:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3576:6:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3584:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3572:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3572:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3562:6:16"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3603:40:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3620:9:16"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3631:11:16"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3616:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3616:27:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3603:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3432:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3435:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3429:2:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3429:14:16"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3444:28:16",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3446:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3455:1:16"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3458:11:16"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3451:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3451:19:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3446:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3425:3:16",
																					"statements": []
																				},
																				"src": "3421:236:16"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3705:166:16",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3723:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3750:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3755:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3746:3:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3746:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3740:5:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3740:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3727:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3790:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3802:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3829:1:16",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3832:6:16"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3825:3:16"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3825:14:16"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3841:3:16",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3821:3:16"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3821:24:16"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3851:1:16",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3847:3:16"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3847:6:16"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3817:3:16"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3817:37:16"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3813:3:16"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3813:42:16"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3798:3:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3798:58:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3783:6:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3783:74:16"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3783:74:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3676:7:16"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3685:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3673:2:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3673:19:16"
																				},
																				"nodeType": "YulIf",
																				"src": "3670:201:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3891:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3905:1:16",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3908:6:16"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3901:3:16"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3901:14:16"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3917:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3897:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3897:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3884:6:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3884:36:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3884:36:16"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3267:663:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3272:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3947:234:16",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3961:14:16",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3974:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3965:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4010:67:16",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4028:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4047:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4052:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4043:3:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4043:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4037:5:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4037:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4028:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3991:6:16"
																				},
																				"nodeType": "YulIf",
																				"src": "3988:89:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4097:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4156:5:16"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4163:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4103:52:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4103:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4090:6:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4090:81:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4090:81:16"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3939:242:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3247:6:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3255:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3244:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:14:16"
															},
															"nodeType": "YulSwitch",
															"src": "3237:944:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2916:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2922:3:16",
														"type": ""
													}
												],
												"src": "2835:1352:16"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200101d3803806200101d83398101604081905262000034916200012b565b600262000042838262000224565b50600362000051828262000224565b50506000805550620002f0565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b83821115620001215760008385830101525b9695505050505050565b600080604083850312156200013f57600080fd5b82516001600160401b03808211156200015757600080fd5b620001658683870162000074565b935060208501519150808211156200017c57600080fd5b506200018b8582860162000074565b9150509250929050565b600181811c90821680620001aa57607f821691505b602082108103620001cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021f57600081815260208120601f850160051c81016020861015620001fa5750805b601f850160051c820191505b818110156200021b5782815560010162000206565b5050505b505050565b81516001600160401b038111156200024057620002406200005e565b620002588162000251845462000195565b84620001d1565b602080601f831160018114620002905760008415620002775750858301515b600019600386901b1c1916600185901b1785556200021b565b600085815260208120601f198616915b82811015620002c157888601518255948401946001909101908401620002a0565b5085821015620002e05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d1d80620003006000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f57600080fd5b80636352211e146101a857806370a08231146101bb57806395d89b41146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461018257806342842e0e1461019557600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610985565b61024b565b60405190151581526020015b60405180910390f35b61011f61029d565b60405161010e91906109fa565b61013f61013a366004610a0d565b61032f565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610a42565b610373565b005b600154600054035b60405190815260200161010e565b61016a610190366004610a6c565b610413565b61016a6101a3366004610a6c565b6105ab565b61013f6101b6366004610a0d565b6105cb565b6101746101c9366004610aa8565b6105d6565b61011f610625565b61016a6101e4366004610ac3565b610634565b61016a6101f7366004610b15565b6106c9565b61011f61020a366004610a0d565b610713565b61010261021d366004610bf1565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061027c57506380ac58cd60e01b6001600160e01b03198316145b806102975750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546102ac90610c24565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610c24565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061033a826107a4565b610357576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061037e826105cb565b9050336001600160a01b038216146103b75761039a813361021d565b6103b7576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061041e826107cb565b9050836001600160a01b0316816001600160a01b0316146104515760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761049e57610481863361021d565b61049e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166104c557604051633a954ecd60e21b815260040160405180910390fd5b80156104d057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610562576001840160008181526004602052604081205490036105605760005481146105605760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6105c6838383604051806020016040528060008152506106c9565b505050565b6000610297826107cb565b60006001600160a01b0382166105ff576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ac90610c24565b336001600160a01b0383160361065d5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106d4848484610413565b6001600160a01b0383163b1561070d576106f084848484610832565b61070d576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061071e826107a4565b61073b57604051630a14c4b560e41b815260040160405180910390fd5b600061075260408051602081019091526000815290565b90508051600003610772576040518060200160405280600081525061079d565b8061077c8461091d565b60405160200161078d929190610c5e565b6040516020818303038152906040525b9392505050565b6000805482108015610297575050600090815260046020526040902054600160e01b161590565b6000816000548110156108195760008181526004602052604081205490600160e01b82169003610817575b8060000361079d5750600019016000818152600460205260409020546107f6565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610867903390899088908890600401610c8d565b6020604051808303816000875af19250505080156108a2575060408051601f3d908101601f1916820190925261089f91810190610cca565b60015b610900573d8080156108d0576040519150601f19603f3d011682016040523d82523d6000602084013e6108d5565b606091505b5080516000036108f8576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080810191829052607f0190826030600a8206018353600a90045b801561095a57600183039250600a81066030018353600a900461093c565b50819003601f19909101908152919050565b6001600160e01b03198116811461098257600080fd5b50565b60006020828403121561099757600080fd5b813561079d8161096c565b60005b838110156109bd5781810151838201526020016109a5565b8381111561070d5750506000910152565b600081518084526109e68160208601602086016109a2565b601f01601f19169290920160200192915050565b60208152600061079d60208301846109ce565b600060208284031215610a1f57600080fd5b5035919050565b80356001600160a01b0381168114610a3d57600080fd5b919050565b60008060408385031215610a5557600080fd5b610a5e83610a26565b946020939093013593505050565b600080600060608486031215610a8157600080fd5b610a8a84610a26565b9250610a9860208501610a26565b9150604084013590509250925092565b600060208284031215610aba57600080fd5b61079d82610a26565b60008060408385031215610ad657600080fd5b610adf83610a26565b915060208301358015158114610af457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610b2b57600080fd5b610b3485610a26565b9350610b4260208601610a26565b925060408501359150606085013567ffffffffffffffff80821115610b6657600080fd5b818701915087601f830112610b7a57600080fd5b813581811115610b8c57610b8c610aff565b604051601f8201601f19908116603f01168101908382118183101715610bb457610bb4610aff565b816040528281528a6020848701011115610bcd57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610c0457600080fd5b610c0d83610a26565b9150610c1b60208401610a26565b90509250929050565b600181811c90821680610c3857607f821691505b602082108103610c5857634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610c708184602088016109a2565b835190830190610c848183602088016109a2565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610cc0908301846109ce565b9695505050505050565b600060208284031215610cdc57600080fd5b815161079d8161096c56fea2646970667358221220113b81d1a5a20c7fe0271c8de1004c0e4d3861dd04dc4ef941abcd61c7145f4b64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x101D CODESIZE SUB DUP1 PUSH3 0x101D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x12B JUMP JUMPDEST PUSH1 0x2 PUSH3 0x42 DUP4 DUP3 PUSH3 0x224 JUMP JUMPDEST POP PUSH1 0x3 PUSH3 0x51 DUP3 DUP3 PUSH3 0x224 JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SSTORE POP PUSH3 0x2F0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xA3 JUMPI PUSH3 0xA3 PUSH3 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCE JUMPI PUSH3 0xCE PUSH3 0x5E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10F JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xF0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x121 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x165 DUP7 DUP4 DUP8 ADD PUSH3 0x74 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x18B DUP6 DUP3 DUP7 ADD PUSH3 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x21F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1FA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x21B JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x206 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x240 JUMPI PUSH3 0x240 PUSH3 0x5E JUMP JUMPDEST PUSH3 0x258 DUP2 PUSH3 0x251 DUP5 SLOAD PUSH3 0x195 JUMP JUMPDEST DUP5 PUSH3 0x1D1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x290 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x277 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x21B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2C1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2A0 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2E0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD1D DUP1 PUSH3 0x300 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x625 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x27C JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC24 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xC24 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP3 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x5CB JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x3B7 JUMPI PUSH2 0x39A DUP2 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E DUP3 PUSH2 0x7CB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x49E JUMPI PUSH2 0x481 DUP7 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x562 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x560 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x560 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5C6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297 DUP3 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC24 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6D4 DUP5 DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x70D JUMPI PUSH2 0x6F0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x71E DUP3 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x73B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x752 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x79D JUMP JUMPDEST DUP1 PUSH2 0x77C DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78D SWAP3 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x297 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0x817 JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x79D JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7F6 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x867 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8A2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x89F SWAP2 DUP2 ADD SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x900 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x7F ADD SWAP1 DUP3 PUSH1 0x30 PUSH1 0xA DUP3 MOD ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV JUMPDEST DUP1 ISZERO PUSH2 0x95A JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV PUSH2 0x93C JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x79D DUP2 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9BD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9A5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x9E6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x79D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5E DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8A DUP5 PUSH2 0xA26 JUMP JUMPDEST SWAP3 POP PUSH2 0xA98 PUSH1 0x20 DUP6 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79D DUP3 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xADF DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB34 DUP6 PUSH2 0xA26 JUMP JUMPDEST SWAP4 POP PUSH2 0xB42 PUSH1 0x20 DUP7 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB8C JUMPI PUSH2 0xB8C PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0xAFF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xBCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0D DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH2 0xC1B PUSH1 0x20 DUP5 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC38 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xC70 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x9A2 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xC84 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9A2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCC0 SWAP1 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x79D DUP2 PUSH2 0x96C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT EXTCODESIZE DUP2 0xD1 0xA5 LOG2 0xC PUSH32 0xE0271C8DE1004C0E4D3861DD04DC4EF941ABCD61C7145F4B64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "885:34115:12:-:0;;;3986:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4052:5;:13;4060:5;4052;:13;:::i;:::-;-1:-1:-1;4075:7:12;:17;4085:7;4075;:17;:::i;:::-;-1:-1:-1;;4332:7:12;4102:31;;-1:-1:-1;885:34115:12;;14:127:16;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:16;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:16;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:16:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:16;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;2114:545::-;2216:2;2211:3;2208:11;2205:448;;;2252:1;2277:5;2273:2;2266:17;2322:4;2318:2;2308:19;2392:2;2380:10;2376:19;2373:1;2369:27;2363:4;2359:38;2428:4;2416:10;2413:20;2410:47;;;-1:-1:-1;2451:4:16;2410:47;2506:2;2501:3;2497:12;2494:1;2490:20;2484:4;2480:31;2470:41;;2561:82;2579:2;2572:5;2569:13;2561:82;;;2624:17;;;2605:1;2594:13;2561:82;;;2565:3;;;2205:448;2114:545;;;:::o;2835:1352::-;2955:10;;-1:-1:-1;;;;;2977:30:16;;2974:56;;;3010:18;;:::i;:::-;3039:97;3129:6;3089:38;3121:4;3115:11;3089:38;:::i;:::-;3083:4;3039:97;:::i;:::-;3191:4;;3255:2;3244:14;;3272:1;3267:663;;;;3974:1;3991:6;3988:89;;;-1:-1:-1;4043:19:16;;;4037:26;3988:89;-1:-1:-1;;2792:1:16;2788:11;;;2784:24;2780:29;2770:40;2816:1;2812:11;;;2767:57;4090:81;;3237:944;;3267:663;2061:1;2054:14;;;2098:4;2085:18;;-1:-1:-1;;3303:20:16;;;3421:236;3435:7;3432:1;3429:14;3421:236;;;3524:19;;;3518:26;3503:42;;3616:27;;;;3584:1;3572:14;;;;3451:19;;3421:236;;;3425:3;3685:6;3676:7;3673:19;3670:201;;;3746:19;;;3740:26;-1:-1:-1;;3829:1:16;3825:14;;;3841:3;3821:24;3817:37;3813:42;3798:58;3783:74;;3670:201;-1:-1:-1;;;;;3917:1:16;3901:14;;;3897:22;3884:36;;-1:-1:-1;2835:1352:16:o;:::-;885:34115:12;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_3176": {
									"entryPoint": null,
									"id": 3176,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_2150": {
									"entryPoint": null,
									"id": 2150,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_3163": {
									"entryPoint": null,
									"id": 3163,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_3060": {
									"entryPoint": 2098,
									"id": 3060,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_2361": {
									"entryPoint": 1956,
									"id": 2361,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_3150": {
									"entryPoint": null,
									"id": 3150,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedAddress_2682": {
									"entryPoint": null,
									"id": 2682,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isOwnerOrApproved_2696": {
									"entryPoint": null,
									"id": 2696,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_3186": {
									"entryPoint": null,
									"id": 3186,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_3137": {
									"entryPoint": null,
									"id": 3137,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_2058": {
									"entryPoint": null,
									"id": 2058,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_1938": {
									"entryPoint": 1995,
									"id": 1938,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_1698": {
									"entryPoint": null,
									"id": 1698,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_3196": {
									"entryPoint": 2333,
									"id": 3196,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_2204": {
									"entryPoint": 883,
									"id": 2204,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1793": {
									"entryPoint": 1494,
									"id": 1793,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_2226": {
									"entryPoint": 815,
									"id": 2226,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2278": {
									"entryPoint": null,
									"id": 2278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_2088": {
									"entryPoint": 669,
									"id": 2088,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_2078": {
									"entryPoint": 1483,
									"id": 2078,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_2297": {
									"entryPoint": 1451,
									"id": 2297,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2335": {
									"entryPoint": 1737,
									"id": 2335,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_2260": {
									"entryPoint": 1588,
									"id": 2260,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1767": {
									"entryPoint": 587,
									"id": 1767,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_2098": {
									"entryPoint": 1573,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_2141": {
									"entryPoint": 1811,
									"id": 2141,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1723": {
									"entryPoint": null,
									"id": 1723,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2841": {
									"entryPoint": 1043,
									"id": 2841,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 2466,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2815,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6376:16",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:16",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:16",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:16"
															},
															"nodeType": "YulIf",
															"src": "68:71:16"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:16",
														"type": ""
													}
												],
												"src": "14:131:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:16"
															},
															"nodeType": "YulIf",
															"src": "229:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:16",
														"type": ""
													}
												],
												"src": "150:245:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:16",
														"type": ""
													}
												],
												"src": "400:187:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:205:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "664:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "659:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:16"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "754:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "745:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "745:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "768:3:16"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "773:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "764:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "764:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:39:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "685:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "688:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "682:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:13:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "696:19:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "698:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "707:1:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "703:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "698:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "678:3:16",
																"statements": []
															},
															"src": "674:113:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:31:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "826:3:16"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "831:6:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "822:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "822:16:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:27:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:27:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "805:6:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:13:16"
															},
															"nodeType": "YulIf",
															"src": "796:48:16"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "623:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "628:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "633:6:16",
														"type": ""
													}
												],
												"src": "592:258:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:208:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:12:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "919:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:19:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:19:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1004:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1011:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1022:3:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1027:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:14:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "978:21:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:63:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:63:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1050:57:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1078:6:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1086:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1074:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1095:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1091:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1091:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:39:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:50:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1050:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "882:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "889:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "897:3:16",
														"type": ""
													}
												],
												"src": "855:258:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:99:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1287:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:45:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1208:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:16",
														"type": ""
													}
												],
												"src": "1118:220:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:110:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1468:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1471:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1434:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:32:16"
															},
															"nodeType": "YulIf",
															"src": "1423:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1484:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1494:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1379:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1390:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:16",
														"type": ""
													}
												],
												"src": "1343:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:102:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1639:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1712:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1708:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1708:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1721:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1620:4:16",
														"type": ""
													}
												],
												"src": "1528:203:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1795:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1795:5:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1846:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1857:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1872:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1868:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1868:11:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1881:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1864:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1864:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1853:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1843:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:50:16"
															},
															"nodeType": "YulIf",
															"src": "1833:70:16"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1764:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:16",
														"type": ""
													}
												],
												"src": "1736:173:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:167:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2047:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:32:16"
															},
															"nodeType": "YulIf",
															"src": "2011:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2072:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2082:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2158:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2130:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:32:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1959:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1970:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1990:6:16",
														"type": ""
													}
												],
												"src": "1914:254:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:76:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2284:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2296:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2307:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2292:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2284:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2326:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2337:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2319:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2319:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2243:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2254:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2265:4:16",
														"type": ""
													}
												],
												"src": "2173:177:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2459:224:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2505:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2514:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2507:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2507:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2489:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2501:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2472:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:32:16"
															},
															"nodeType": "YulIf",
															"src": "2469:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2530:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2540:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2578:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2622:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2607:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2588:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2635:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2662:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2673:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2645:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:32:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2635:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2409:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2420:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2432:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2440:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2448:6:16",
														"type": ""
													}
												],
												"src": "2355:328:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2758:116:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2804:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2813:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2816:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2806:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2806:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2779:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2788:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2775:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2775:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2800:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2771:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:32:16"
															},
															"nodeType": "YulIf",
															"src": "2768:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2829:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2858:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2839:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2724:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2735:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2747:6:16",
														"type": ""
													}
												],
												"src": "2688:186:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2963:263:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3009:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3018:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3021:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3011:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3011:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3011:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2984:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2993:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3005:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2976:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:32:16"
															},
															"nodeType": "YulIf",
															"src": "2973:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3034:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3063:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3044:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3034:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3082:45:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3095:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:32:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3086:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3180:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3189:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3192:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3182:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3182:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3182:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3149:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3170:5:16"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3163:6:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3163:13:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3156:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3156:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3146:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3139:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:40:16"
															},
															"nodeType": "YulIf",
															"src": "3136:60:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3205:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3215:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2921:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2932:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2944:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2952:6:16",
														"type": ""
													}
												],
												"src": "2879:347:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3287:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3283:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3320:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3337:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3231:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:1008:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3540:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3542:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3542:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3514:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3523:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:33:16"
															},
															"nodeType": "YulIf",
															"src": "3503:53:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3565:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3575:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3565:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3613:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3657:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3623:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3670:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3697:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3708:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3693:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3693:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3680:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:32:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3721:46:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3752:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3763:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3748:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3748:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3735:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:32:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3725:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3776:28:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3786:18:16",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3780:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3831:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3840:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3843:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3833:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3833:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3833:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3827:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3816:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:14:16"
															},
															"nodeType": "YulIf",
															"src": "3813:34:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3856:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3870:9:16"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3881:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3866:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:22:16"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3860:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3936:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3945:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3948:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3938:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3938:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3938:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3915:2:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3919:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3911:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3911:13:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3907:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3900:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:35:16"
															},
															"nodeType": "YulIf",
															"src": "3897:55:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3961:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3984:2:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3971:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:16:16"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3965:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4010:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4012:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4012:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4012:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4002:2:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4006:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3999:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:10:16"
															},
															"nodeType": "YulIf",
															"src": "3996:36:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4041:17:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4051:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:7:16"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4045:2:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4067:23:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4087:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4081:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:9:16"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4071:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4099:71:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4121:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4145:2:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4149:4:16",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4141:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4141:13:16"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4156:2:16"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4137:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4137:22:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4161:2:16",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4133:31:16"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4166:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4129:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4129:40:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4117:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4117:53:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4103:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4229:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4231:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4231:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4231:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4188:10:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4200:2:16"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4185:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4185:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4208:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4220:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4205:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4205:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4182:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:46:16"
															},
															"nodeType": "YulIf",
															"src": "4179:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4267:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4271:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:22:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:22:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4298:6:16"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4306:2:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4291:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:18:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4291:18:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4355:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4364:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4367:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4357:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4357:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4332:2:16"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4336:2:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4328:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4328:11:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4341:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4324:20:16"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4346:7:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4321:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:33:16"
															},
															"nodeType": "YulIf",
															"src": "4318:53:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4397:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4405:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4393:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4393:15:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4414:2:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4410:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4410:11:16"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4423:2:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4380:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:46:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4380:46:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4450:6:16"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4458:2:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4446:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4446:15:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4463:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:24:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:35:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:35:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4479:16:16",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4489:6:16"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3435:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3446:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3458:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3466:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3474:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3482:6:16",
														"type": ""
													}
												],
												"src": "3363:1138:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4593:173:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4639:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4648:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4651:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4641:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4641:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4641:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4614:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4623:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4635:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4606:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4606:32:16"
															},
															"nodeType": "YulIf",
															"src": "4603:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4664:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4674:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4712:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4756:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4741:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4722:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4551:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4562:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4574:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4582:6:16",
														"type": ""
													}
												],
												"src": "4506:260:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4826:325:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4836:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4850:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4853:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4846:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4836:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4867:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4897:4:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4893:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4871:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4944:31:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4946:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4960:6:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4968:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4956:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4956:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4946:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4924:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4917:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4917:26:16"
															},
															"nodeType": "YulIf",
															"src": "4914:61:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5034:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5062:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5058:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5058:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5048:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5048:31:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5048:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5099:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5102:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5092:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5092:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5092:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5127:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5130:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5120:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5120:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5120:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4990:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5013:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5021:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5010:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4987:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:38:16"
															},
															"nodeType": "YulIf",
															"src": "4984:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4806:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4815:6:16",
														"type": ""
													}
												],
												"src": "4771:380:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5343:283:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5353:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5373:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5367:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5357:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5415:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5423:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5411:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5411:17:16"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5430:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5435:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5389:21:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5389:53:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5389:53:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5451:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5468:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5473:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5464:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5464:16:16"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "5455:5:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5489:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5511:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5505:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5505:13:16"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "5493:8:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5553:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5561:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5549:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5549:17:16"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5568:5:16"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5575:8:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5527:21:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5527:57:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5527:57:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5593:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5604:5:16"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5611:8:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:20:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5311:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5316:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5324:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5335:3:16",
														"type": ""
													}
												],
												"src": "5156:470:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5834:286:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5844:29:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5862:3:16",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5867:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5858:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5858:11:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5871:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5854:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5854:19:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5848:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5889:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5904:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5912:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5882:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5936:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5947:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5932:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5932:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5956:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5964:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:43:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:43:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5999:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5984:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5984:18:16"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6004:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5977:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5977:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6031:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6042:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6027:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6027:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6047:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6020:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6020:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6060:54:16",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6086:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6098:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6109:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6094:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6094:19:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "6068:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6068:46:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6060:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5779:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5790:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5798:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5806:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5814:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5825:4:16",
														"type": ""
													}
												],
												"src": "5631:489:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6205:169:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6251:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6260:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6263:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6253:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6253:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6253:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6226:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6235:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6222:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6222:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6247:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6218:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:32:16"
															},
															"nodeType": "YulIf",
															"src": "6215:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6276:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6295:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6289:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6289:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6280:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6314:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6353:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6363:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6353:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6171:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6182:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6194:6:16",
														"type": ""
													}
												],
												"src": "6125:249:16"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f57600080fd5b80636352211e146101a857806370a08231146101bb57806395d89b41146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461018257806342842e0e1461019557600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610985565b61024b565b60405190151581526020015b60405180910390f35b61011f61029d565b60405161010e91906109fa565b61013f61013a366004610a0d565b61032f565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610a42565b610373565b005b600154600054035b60405190815260200161010e565b61016a610190366004610a6c565b610413565b61016a6101a3366004610a6c565b6105ab565b61013f6101b6366004610a0d565b6105cb565b6101746101c9366004610aa8565b6105d6565b61011f610625565b61016a6101e4366004610ac3565b610634565b61016a6101f7366004610b15565b6106c9565b61011f61020a366004610a0d565b610713565b61010261021d366004610bf1565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061027c57506380ac58cd60e01b6001600160e01b03198316145b806102975750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546102ac90610c24565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610c24565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061033a826107a4565b610357576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061037e826105cb565b9050336001600160a01b038216146103b75761039a813361021d565b6103b7576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061041e826107cb565b9050836001600160a01b0316816001600160a01b0316146104515760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761049e57610481863361021d565b61049e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166104c557604051633a954ecd60e21b815260040160405180910390fd5b80156104d057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610562576001840160008181526004602052604081205490036105605760005481146105605760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6105c6838383604051806020016040528060008152506106c9565b505050565b6000610297826107cb565b60006001600160a01b0382166105ff576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ac90610c24565b336001600160a01b0383160361065d5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106d4848484610413565b6001600160a01b0383163b1561070d576106f084848484610832565b61070d576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061071e826107a4565b61073b57604051630a14c4b560e41b815260040160405180910390fd5b600061075260408051602081019091526000815290565b90508051600003610772576040518060200160405280600081525061079d565b8061077c8461091d565b60405160200161078d929190610c5e565b6040516020818303038152906040525b9392505050565b6000805482108015610297575050600090815260046020526040902054600160e01b161590565b6000816000548110156108195760008181526004602052604081205490600160e01b82169003610817575b8060000361079d5750600019016000818152600460205260409020546107f6565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610867903390899088908890600401610c8d565b6020604051808303816000875af19250505080156108a2575060408051601f3d908101601f1916820190925261089f91810190610cca565b60015b610900573d8080156108d0576040519150601f19603f3d011682016040523d82523d6000602084013e6108d5565b606091505b5080516000036108f8576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080810191829052607f0190826030600a8206018353600a90045b801561095a57600183039250600a81066030018353600a900461093c565b50819003601f19909101908152919050565b6001600160e01b03198116811461098257600080fd5b50565b60006020828403121561099757600080fd5b813561079d8161096c565b60005b838110156109bd5781810151838201526020016109a5565b8381111561070d5750506000910152565b600081518084526109e68160208601602086016109a2565b601f01601f19169290920160200192915050565b60208152600061079d60208301846109ce565b600060208284031215610a1f57600080fd5b5035919050565b80356001600160a01b0381168114610a3d57600080fd5b919050565b60008060408385031215610a5557600080fd5b610a5e83610a26565b946020939093013593505050565b600080600060608486031215610a8157600080fd5b610a8a84610a26565b9250610a9860208501610a26565b9150604084013590509250925092565b600060208284031215610aba57600080fd5b61079d82610a26565b60008060408385031215610ad657600080fd5b610adf83610a26565b915060208301358015158114610af457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610b2b57600080fd5b610b3485610a26565b9350610b4260208601610a26565b925060408501359150606085013567ffffffffffffffff80821115610b6657600080fd5b818701915087601f830112610b7a57600080fd5b813581811115610b8c57610b8c610aff565b604051601f8201601f19908116603f01168101908382118183101715610bb457610bb4610aff565b816040528281528a6020848701011115610bcd57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610c0457600080fd5b610c0d83610a26565b9150610c1b60208401610a26565b90509250929050565b600181811c90821680610c3857607f821691505b602082108103610c5857634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610c708184602088016109a2565b835190830190610c848183602088016109a2565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610cc0908301846109ce565b9695505050505050565b600060208284031215610cdc57600080fd5b815161079d8161096c56fea2646970667358221220113b81d1a5a20c7fe0271c8de1004c0e4d3861dd04dc4ef941abcd61c7145f4b64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x625 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x27C JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC24 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xC24 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP3 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x5CB JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x3B7 JUMPI PUSH2 0x39A DUP2 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E DUP3 PUSH2 0x7CB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x49E JUMPI PUSH2 0x481 DUP7 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x562 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x560 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x560 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5C6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297 DUP3 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC24 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6D4 DUP5 DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x70D JUMPI PUSH2 0x6F0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x71E DUP3 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x73B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x752 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x79D JUMP JUMPDEST DUP1 PUSH2 0x77C DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78D SWAP3 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x297 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0x817 JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x79D JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7F6 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x867 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8A2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x89F SWAP2 DUP2 ADD SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x900 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x7F ADD SWAP1 DUP3 PUSH1 0x30 PUSH1 0xA DUP3 MOD ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV JUMPDEST DUP1 ISZERO PUSH2 0x95A JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV PUSH2 0x93C JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x79D DUP2 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9BD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9A5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x9E6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x79D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5E DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8A DUP5 PUSH2 0xA26 JUMP JUMPDEST SWAP3 POP PUSH2 0xA98 PUSH1 0x20 DUP6 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79D DUP3 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xADF DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB34 DUP6 PUSH2 0xA26 JUMP JUMPDEST SWAP4 POP PUSH2 0xB42 PUSH1 0x20 DUP7 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB8C JUMPI PUSH2 0xB8C PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0xAFF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xBCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0D DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH2 0xC1B PUSH1 0x20 DUP5 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC38 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xC70 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x9A2 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xC84 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9A2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCC0 SWAP1 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x79D DUP2 PUSH2 0x96C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT EXTCODESIZE DUP2 0xD1 0xA5 LOG2 0xC PUSH32 0xE0271C8DE1004C0E4D3861DD04DC4EF941ABCD61C7145F4B64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "885:34115:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5653:607;;;;;;:::i;:::-;;:::i;:::-;;;565:14:16;;558:22;540:41;;528:2;513:18;5653:607:12;;;;;;;;11161:98;;;:::i;:::-;;;;;;;:::i;13048:200::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:16;;;1674:51;;1662:2;1647:18;13048:200:12;1528:203:16;12611:376:12;;;;;;:::i;:::-;;:::i;:::-;;4736:309;4998:12;;4789:7;4982:13;:28;4736:309;;;2319:25:16;;;2307:2;2292:18;4736:309:12;2173:177:16;22055:2739:12;;;;;;:::i;:::-;;:::i;13912:179::-;;;;;;:::i;:::-;;:::i;10957:142::-;;;;;;:::i;:::-;;:::i;6319:221::-;;;;;;:::i;:::-;;:::i;11323:102::-;;;:::i;13315:303::-;;;;;;:::i;:::-;;:::i;14157:388::-;;;;;;:::i;:::-;;:::i;11491:313::-;;;;;;:::i;:::-;;:::i;13684:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13804:25:12;;;13781:4;13804:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;13684:162;5653:607;5738:4;-1:-1:-1;;;;;;;;;6033:25:12;;;;:101;;-1:-1:-1;;;;;;;;;;6109:25:12;;;6033:101;:177;;;-1:-1:-1;;;;;;;;;;6185:25:12;;;6033:177;6014:196;5653:607;-1:-1:-1;;5653:607:12:o;11161:98::-;11215:13;11247:5;11240:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11161:98;:::o;13048:200::-;13116:7;13140:16;13148:7;13140;:16::i;:::-;13135:64;;13165:34;;-1:-1:-1;;;13165:34:12;;;;;;;;;;;13135:64;-1:-1:-1;13217:24:12;;;;:15;:24;;;;;;-1:-1:-1;;;;;13217:24:12;;13048:200::o;12611:376::-;12683:13;12699:16;12707:7;12699;:16::i;:::-;12683:32;-1:-1:-1;32960:10:12;-1:-1:-1;;;;;12730:28:12;;;12726:172;;12777:44;12794:5;32960:10;13684:162;:::i;12777:44::-;12772:126;;12848:35;;-1:-1:-1;;;12848:35:12;;;;;;;;;;;12772:126;12908:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;12908:29:12;-1:-1:-1;;;;;12908:29:12;;;;;;;;;12952:28;;12908:24;;12952:28;;;;;;;12673:314;12611:376;;:::o;22055:2739::-;22184:27;22214;22233:7;22214:18;:27::i;:::-;22184:57;;22297:4;-1:-1:-1;;;;;22256:45:12;22272:19;-1:-1:-1;;;;;22256:45:12;;22252:86;;22310:28;;-1:-1:-1;;;22310:28:12;;;;;;;;;;;22252:86;22350:27;20821:21;;;20652:15;20862:4;20855:36;20943:4;20927:21;;21031:26;;32960:10;21766:30;;;-1:-1:-1;;;;;21468:26:12;;21745:19;;;21742:55;22526:173;;22612:43;22629:4;32960:10;13684:162;:::i;22612:43::-;22607:92;;22664:35;;-1:-1:-1;;;22664:35:12;;;;;;;;;;;22607:92;-1:-1:-1;;;;;22714:16:12;;22710:52;;22739:23;;-1:-1:-1;;;22739:23:12;;;;;;;;;;;22710:52;22905:15;22902:157;;;23043:1;23022:19;23015:30;22902:157;-1:-1:-1;;;;;23429:24:12;;;;;;;:18;:24;;;;;;23427:26;;-1:-1:-1;;23427:26:12;;;23497:22;;;;;;;;;23495:24;;-1:-1:-1;23495:24:12;;;10863:11;10839:22;10835:40;10822:62;-1:-1:-1;;;10822:62:12;23783:26;;;;:17;:26;;;;;:171;;;;-1:-1:-1;;;24071:46:12;;:51;;24067:616;;24174:1;24164:11;;24142:19;24295:30;;;:17;:30;;;;;;:35;;24291:378;;24431:13;;24416:11;:28;24412:239;;24576:30;;;;:17;:30;;;;;:52;;;24412:239;24124:559;24067:616;24727:7;24723:2;-1:-1:-1;;;;;24708:27:12;24717:4;-1:-1:-1;;;;;24708:27:12;;;;;;;;;;;22174:2620;;;22055:2739;;;:::o;13912:179::-;14045:39;14062:4;14068:2;14072:7;14045:39;;;;;;;;;;;;:16;:39::i;:::-;13912:179;;;:::o;10957:142::-;11021:7;11063:27;11082:7;11063:18;:27::i;6319:221::-;6383:7;-1:-1:-1;;;;;6406:19:12;;6402:60;;6434:28;;-1:-1:-1;;;6434:28:12;;;;;;;;;;;6402:60;-1:-1:-1;;;;;;6479:25:12;;;;;:18;:25;;;;;;1022:13;6479:54;;6319:221::o;11323:102::-;11379:13;11411:7;11404:14;;;;;:::i;13315:303::-;32960:10;-1:-1:-1;;;;;13413:31:12;;;13409:61;;13453:17;;-1:-1:-1;;;13453:17:12;;;;;;;;;;;13409:61;32960:10;13481:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;13481:49:12;;;;;;;;;;;;:60;;-1:-1:-1;;13481:60:12;;;;;;;;;;13556:55;;540:41:16;;;13481:49:12;;32960:10;13556:55;;513:18:16;13556:55:12;;;;;;;13315:303;;:::o;14157:388::-;14318:31;14331:4;14337:2;14341:7;14318:12;:31::i;:::-;-1:-1:-1;;;;;14363:14:12;;;:19;14359:180;;14401:56;14432:4;14438:2;14442:7;14451:5;14401:30;:56::i;:::-;14396:143;;14484:40;;-1:-1:-1;;;14484:40:12;;;;;;;;;;;14396:143;14157:388;;;;:::o;11491:313::-;11564:13;11594:16;11602:7;11594;:16::i;:::-;11589:59;;11619:29;;-1:-1:-1;;;11619:29:12;;;;;;;;;;;11589:59;11659:21;11683:10;12125:9;;;;;;;;;-1:-1:-1;12125:9:12;;;12049:92;11683:10;11659:34;;11716:7;11710:21;11735:1;11710:26;:87;;;;;;;;;;;;;;;;;11763:7;11772:18;11782:7;11772:9;:18::i;:::-;11746:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11710:87;11703:94;11491:313;-1:-1:-1;;;11491:313:12:o;14791:268::-;14848:4;14935:13;;14925:7;:23;14883:150;;;;-1:-1:-1;;14985:26:12;;;;:17;:26;;;;;;-1:-1:-1;;;14985:43:12;:48;;14791:268::o;7949:1105::-;8016:7;8050;8148:13;;8141:4;:20;8137:853;;;8185:14;8202:23;;;:17;:23;;;;;;;-1:-1:-1;;;8289:23:12;;:28;;8285:687;;8800:111;8807:6;8817:1;8807:11;8800:111;;-1:-1:-1;;;8877:6:12;8859:25;;;;:17;:25;;;;;;8800:111;;8285:687;8163:827;8137:853;9016:31;;-1:-1:-1;;;9016:31:12;;;;;;;;;;;28649:697;28827:88;;-1:-1:-1;;;28827:88:12;;28807:4;;-1:-1:-1;;;;;28827:45:12;;;;;:88;;32960:10;;28894:4;;28900:7;;28909:5;;28827:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28827:88:12;;;;;;;;-1:-1:-1;;28827:88:12;;;;;;;;;;;;:::i;:::-;;;28823:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29105:6;:13;29122:1;29105:18;29101:229;;29150:40;;-1:-1:-1;;;29150:40:12;;;;;;;;;;;29101:229;29290:6;29284:13;29275:6;29271:2;29267:15;29260:38;28823:517;-1:-1:-1;;;;;;28983:64:12;-1:-1:-1;;;28983:64:12;;-1:-1:-1;28649:697:12;;;;;;:::o;33078:1920::-;33541:4;33535:11;;33548:3;33531:21;;33624:17;;;;34307:11;;;34188:5;34437:2;34451;34441:13;;34433:22;34307:11;34420:36;34491:2;34481:13;;34082:682;34509:4;34082:682;;;34695:1;34690:3;34686:11;34679:18;;34745:2;34739:4;34735:13;34731:2;34727:22;34722:3;34714:36;34602:2;34592:13;;34082:682;;;-1:-1:-1;34792:13:12;;;-1:-1:-1;;34905:12:12;;;34963:19;;;34905:12;33078:1920;-1:-1:-1;33078:1920:12:o;14:131:16:-;-1:-1:-1;;;;;;88:32:16;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:16;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:16;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:16:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:16;;1343:180;-1:-1:-1;1343:180:16:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:16;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:16:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:186::-;2747:6;2800:2;2788:9;2779:7;2775:23;2771:32;2768:52;;;2816:1;2813;2806:12;2768:52;2839:29;2858:9;2839:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:16;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;5156:470::-;5335:3;5373:6;5367:13;5389:53;5435:6;5430:3;5423:4;5415:6;5411:17;5389:53;:::i;:::-;5505:13;;5464:16;;;;5527:57;5505:13;5464:16;5561:4;5549:17;;5527:57;:::i;:::-;5600:20;;5156:470;-1:-1:-1;;;;5156:470:16:o;5631:489::-;-1:-1:-1;;;;;5900:15:16;;;5882:34;;5952:15;;5947:2;5932:18;;5925:43;5999:2;5984:18;;5977:34;;;6047:3;6042:2;6027:18;;6020:31;;;5825:4;;6068:46;;6094:19;;6086:6;6068:46;:::i;:::-;6060:54;5631:489;-1:-1:-1;;;;;;5631:489:16:o;6125:249::-;6194:6;6247:2;6235:9;6226:7;6222:23;6218:32;6215:52;;;6263:1;6260;6253:12;6215:52;6295:9;6289:16;6314:30;6338:5;6314:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "671400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2640",
								"getApproved(uint256)": "6925",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26647",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4432",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4337",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isOwnerOrApproved(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3986,
									"end": 4140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 4060,
									"end": 4065,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 4052,
									"end": 4065,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "tag",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4075,
									"end": 4082,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4085,
									"end": 4092,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4075,
									"end": 4082,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 4075,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4332,
									"end": 4339,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 16,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 16
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 1354,
									"end": 1415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 1529,
									"end": 1592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1036,
									"end": 1598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1603,
									"end": 1983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "tag",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2216,
									"end": 2218,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2211,
									"end": 2214,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2208,
									"end": 2219,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2252,
									"end": 2253,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2282,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2266,
									"end": 2283,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2322,
									"end": 2326,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2318,
									"end": 2320,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2308,
									"end": 2327,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2390,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2376,
									"end": 2395,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2373,
									"end": 2374,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 2369,
									"end": 2396,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2363,
									"end": 2367,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2359,
									"end": 2397,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2428,
									"end": 2432,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2416,
									"end": 2426,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2413,
									"end": 2433,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2451,
									"end": 2455,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "tag",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2506,
									"end": 2508,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2501,
									"end": 2504,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2497,
									"end": 2509,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2494,
									"end": 2495,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 2490,
									"end": 2510,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2484,
									"end": 2488,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2480,
									"end": 2511,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2470,
									"end": 2511,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2470,
									"end": 2511,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "tag",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2581,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2572,
									"end": 2577,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2569,
									"end": 2582,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2605,
									"end": 2606,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2594,
									"end": 2607,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "tag",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "tag",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2114,
									"end": 2659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "tag",
									"source": 16,
									"value": "7"
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2955,
									"end": 2965,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2955,
									"end": 2965,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2977,
									"end": 3007,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2977,
									"end": 3007,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "51"
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "51"
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 3010,
									"end": 3028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "tag",
									"source": 16,
									"value": "51"
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "52"
								},
								{
									"begin": 3129,
									"end": 3135,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 3121,
									"end": 3125,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3115,
									"end": 3126,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 3089,
									"end": 3127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "tag",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3083,
									"end": 3087,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 3039,
									"end": 3136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "tag",
									"source": 16,
									"value": "52"
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3191,
									"end": 3195,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3191,
									"end": 3195,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3255,
									"end": 3257,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 3244,
									"end": 3258,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3244,
									"end": 3258,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 3272,
									"end": 3273,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3991,
									"end": 3997,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4037,
									"end": 4063,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "tag",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2792,
									"end": 2793,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2784,
									"end": 2808,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2780,
									"end": 2809,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 2770,
									"end": 2810,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2816,
									"end": 2817,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2767,
									"end": 2824,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 4090,
									"end": 4171,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4090,
									"end": 4171,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3237,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 3237,
									"end": 4181,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "tag",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2061,
									"end": 2062,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2098,
									"end": 2102,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2103,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2085,
									"end": 2103,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "tag",
									"source": 16,
									"value": "59"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3435,
									"end": 3442,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3432,
									"end": 3433,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3429,
									"end": 3443,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3518,
									"end": 3544,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3503,
									"end": 3545,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3503,
									"end": 3545,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 3584,
									"end": 3585,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "59"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "tag",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3425,
									"end": 3428,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3685,
									"end": 3691,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3676,
									"end": 3683,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3673,
									"end": 3692,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3740,
									"end": 3766,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3829,
									"end": 3830,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3841,
									"end": 3844,
									"name": "PUSH",
									"source": 16,
									"value": "F8"
								},
								{
									"begin": 3821,
									"end": 3845,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3817,
									"end": 3854,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 3813,
									"end": 3855,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3798,
									"end": 3856,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3783,
									"end": 3857,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3783,
									"end": 3857,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "tag",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3917,
									"end": 3918,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3884,
									"end": 3920,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3884,
									"end": 3920,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2835,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "tag",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220113b81d1a5a20c7fe0271c8de1004c0e4d3861dd04dc4ef941abcd61c7145f4b64736f6c634300080f0033",
									".code": [
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "6352211E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "C87B56DD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "6352211E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "81812FC"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1528,
											"end": 1731,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4982,
											"end": 5010,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2307,
											"end": 2309,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2173,
											"end": 2350,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 11323,
											"end": 11425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13781,
											"end": 13785,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13822,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6210,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11215,
											"end": 11228,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11247,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 11240,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 11240,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13116,
											"end": 13123,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 13148,
											"end": 13155,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13140,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 13140,
											"end": 13156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13232,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12683,
											"end": 12696,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 12707,
											"end": 12714,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 12699,
											"end": 12715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12683,
											"end": 12715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 12794,
											"end": 12799,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12923,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 12,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "LOG4",
											"source": 12
										},
										{
											"begin": 12673,
											"end": 12987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22184,
											"end": 22211,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 22233,
											"end": 22240,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22214,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 22214,
											"end": 22241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22297,
											"end": 22301,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 22272,
											"end": 22291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22350,
											"end": 22377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20652,
											"end": 20667,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 20862,
											"end": 20866,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20855,
											"end": 20891,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20943,
											"end": 20947,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 21742,
											"end": 21797,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 22629,
											"end": 22633,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22905,
											"end": 22920,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 23043,
											"end": 23044,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23022,
											"end": 23041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23015,
											"end": 23045,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23429,
											"end": 23447,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 10839,
											"end": 10861,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 10835,
											"end": 10875,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23783,
											"end": 23800,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24071,
											"end": 24117,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24071,
											"end": 24117,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 24071,
											"end": 24122,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24071,
											"end": 24122,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24174,
											"end": 24175,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24142,
											"end": 24161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24295,
											"end": 24312,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 24295,
											"end": 24330,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24295,
											"end": 24330,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 24416,
											"end": 24427,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24416,
											"end": 24444,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24576,
											"end": 24593,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24124,
											"end": 24683,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24727,
											"end": 24734,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24723,
											"end": 24725,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 24717,
											"end": 24721,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 12,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "LOG4",
											"source": 12
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 14062,
											"end": 14066,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14068,
											"end": 14070,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14072,
											"end": 14079,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 14045,
											"end": 14084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11021,
											"end": 11028,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11063,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 11063,
											"end": 11090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6390,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1022,
											"end": 1035,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6533,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6479,
											"end": 6533,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11379,
											"end": 11392,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11411,
											"end": 11418,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 11404,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B06307DB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 12,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 14331,
											"end": 14335,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14337,
											"end": 14339,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14341,
											"end": 14348,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14318,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 14318,
											"end": 14349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 14363,
											"end": 14382,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 14432,
											"end": 14436,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14438,
											"end": 14440,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14442,
											"end": 14449,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14451,
											"end": 14456,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14401,
											"end": 14431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 14401,
											"end": 14457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11564,
											"end": 11577,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 11602,
											"end": 11609,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11594,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 11594,
											"end": 11610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11680,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11731,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11735,
											"end": 11736,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11736,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11763,
											"end": 11770,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 11782,
											"end": 11789,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11772,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 11772,
											"end": 11790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 11746,
											"end": 11791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14848,
											"end": 14852,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 14925,
											"end": 14932,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14925,
											"end": 14948,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15002,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14985,
											"end": 15028,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15033,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15033,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14791,
											"end": 15059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8057,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8141,
											"end": 8145,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8185,
											"end": 8199,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8289,
											"end": 8317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8289,
											"end": 8317,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8807,
											"end": 8813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8817,
											"end": 8818,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8818,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8859,
											"end": 8876,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "PUSH",
											"source": 12,
											"value": "150B7A02"
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28894,
											"end": 28898,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 28894,
											"end": 28898,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28900,
											"end": 28907,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 28900,
											"end": 28907,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28909,
											"end": 28914,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 28909,
											"end": 28914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 28827,
											"end": 28915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 28827,
											"end": 28915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29105,
											"end": 29111,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 29105,
											"end": 29118,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 29122,
											"end": 29123,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29105,
											"end": 29123,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29290,
											"end": 29296,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 29284,
											"end": 29297,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 29275,
											"end": 29281,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29271,
											"end": 29273,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29267,
											"end": 29282,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29260,
											"end": 29298,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28649,
											"end": 29346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33541,
											"end": 33545,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 33535,
											"end": 33546,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 33535,
											"end": 33546,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 33548,
											"end": 33551,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 33531,
											"end": 33552,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 33531,
											"end": 33552,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 34188,
											"end": 34193,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 34437,
											"end": 34439,
											"name": "PUSH",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 34451,
											"end": 34453,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 34433,
											"end": 34455,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 34420,
											"end": 34456,
											"name": "MSTORE8",
											"source": 12
										},
										{
											"begin": 34491,
											"end": 34493,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 34509,
											"end": 34513,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 34695,
											"end": 34696,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 34690,
											"end": 34693,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 34686,
											"end": 34697,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 34745,
											"end": 34747,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 34739,
											"end": 34743,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 34735,
											"end": 34748,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 34731,
											"end": 34733,
											"name": "PUSH",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 34727,
											"end": 34749,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34722,
											"end": 34725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 34714,
											"end": 34750,
											"name": "MSTORE8",
											"source": 12
										},
										{
											"begin": 34602,
											"end": 34604,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 34592,
											"end": 34605,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 34592,
											"end": 34605,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33078,
											"end": 34998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 592,
											"end": 850,
											"name": "tag",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 682,
											"end": 695,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 674,
											"end": 787,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 764,
											"end": 775,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 745,
											"end": 756,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 738,
											"end": 777,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 713,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 799,
											"end": 812,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 796,
											"end": 844,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 796,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "154"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 815,
											"end": 842,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 592,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "tag",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 950,
											"end": 969,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1018,
											"end": 1032,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 978,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "tag",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1089,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1099,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "tag",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 1287,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1426,
											"end": 1458,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1461,
											"end": 1473,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "tag",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "tag",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "tag",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1736,
											"end": 1909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "tag",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2014,
											"end": 2046,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "tag",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 2082,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "tag",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2072,
											"end": 2111,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 2168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "tag",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2503,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "tag",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 2540,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "tag",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 2588,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "tag",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2671,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2645,
											"end": 2677,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2355,
											"end": 2683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2688,
											"end": 2874,
											"name": "tag",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 2688,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2747,
											"end": 2753,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2802,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2797,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2779,
											"end": 2786,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2775,
											"end": 2798,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2771,
											"end": 2803,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2816,
											"end": 2817,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2814,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "tag",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 2858,
											"end": 2867,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 2839,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2958,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2984,
											"end": 2991,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2980,
											"end": 3003,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2976,
											"end": 3008,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3011,
											"end": 3023,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 3044,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "tag",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3125,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3121,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3095,
											"end": 3127,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3170,
											"end": 3175,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3163,
											"end": 3176,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3146,
											"end": 3178,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "250"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "tag",
											"source": 16,
											"value": "250"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3215,
											"end": 3220,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2879,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "tag",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3292,
											"end": 3302,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 3283,
											"end": 3303,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3304,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3313,
											"end": 3328,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "tag",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3535,
											"end": 3538,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 3523,
											"end": 3532,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "tag",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 3575,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "tag",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "255"
										},
										{
											"begin": 3657,
											"end": 3659,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3655,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 3623,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "tag",
											"source": 16,
											"value": "255"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3708,
											"end": 3710,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3752,
											"end": 3761,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3748,
											"end": 3766,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3767,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3816,
											"end": 3830,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "256"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "tag",
											"source": 16,
											"value": "256"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3919,
											"end": 3923,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3911,
											"end": 3924,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3907,
											"end": 3934,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "tag",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 3986,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3971,
											"end": 3987,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3999,
											"end": 4009,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 4012,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "tag",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4087,
											"end": 4089,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4161,
											"end": 4163,
											"name": "PUSH",
											"source": 16,
											"value": "3F"
										},
										{
											"begin": 4133,
											"end": 4164,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4129,
											"end": 4169,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 4182,
											"end": 4228,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 4231,
											"end": 4249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "tag",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4271,
											"end": 4281,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4267,
											"end": 4269,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4282,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4306,
											"end": 4308,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4298,
											"end": 4304,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4291,
											"end": 4309,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4346,
											"end": 4353,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4332,
											"end": 4334,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4324,
											"end": 4344,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4321,
											"end": 4354,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "262"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4367,
											"end": 4368,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4365,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4357,
											"end": 4369,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "tag",
											"source": 16,
											"value": "262"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4421,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4405,
											"end": 4407,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4380,
											"end": 4426,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4446,
											"end": 4461,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4442,
											"end": 4466,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4435,
											"end": 4470,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3363,
											"end": 4501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4635,
											"end": 4637,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4632,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4614,
											"end": 4621,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4610,
											"end": 4633,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4606,
											"end": 4638,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "tag",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "265"
										},
										{
											"begin": 4693,
											"end": 4702,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 4674,
											"end": 4703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "tag",
											"source": 16,
											"value": "265"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 4756,
											"end": 4758,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 4722,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "tag",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "tag",
											"source": 16,
											"value": "85"
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "268"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4968,
											"end": 4972,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4956,
											"end": 4973,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "tag",
											"source": 16,
											"value": "268"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5010,
											"end": 5024,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4987,
											"end": 5025,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5067,
											"end": 5077,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 5062,
											"end": 5065,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 5058,
											"end": 5078,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5079,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5130,
											"end": 5134,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5135,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "tag",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4771,
											"end": 5151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "tag",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5335,
											"end": 5338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5367,
											"end": 5380,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "271"
										},
										{
											"begin": 5435,
											"end": 5441,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5430,
											"end": 5433,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5423,
											"end": 5427,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5415,
											"end": 5421,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 5389,
											"end": 5442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "tag",
											"source": 16,
											"value": "271"
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5505,
											"end": 5518,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5505,
											"end": 5518,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 5505,
											"end": 5518,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5549,
											"end": 5566,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 5549,
											"end": 5566,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 5527,
											"end": 5584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "tag",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5156,
											"end": 5626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "tag",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5882,
											"end": 5916,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5882,
											"end": 5916,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5952,
											"end": 5967,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5952,
											"end": 5967,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5947,
											"end": 5949,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5925,
											"end": 5968,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5999,
											"end": 6001,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 6042,
											"end": 6044,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 6027,
											"end": 6045,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6027,
											"end": 6045,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6020,
											"end": 6051,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6020,
											"end": 6051,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6020,
											"end": 6051,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6086,
											"end": 6092,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 6068,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "tag",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6060,
											"end": 6114,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5631,
											"end": 6120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6125,
											"end": 6374,
											"name": "tag",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 6125,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6194,
											"end": 6200,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6249,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6244,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6226,
											"end": 6233,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6222,
											"end": 6245,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6218,
											"end": 6250,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6263,
											"end": 6264,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6253,
											"end": 6265,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "tag",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6289,
											"end": 6305,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ERC721A/INagaKid.sol",
								"ERC721A/MintNagaKids.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/ERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at `_startTokenId()` (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1644,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1646,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1648,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1650,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1654,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1658,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1662,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1668,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token receiver interface.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token receiver interface.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/ERC721ABurnable.sol": {
				"ERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721A Token that can be irreversibly burned (destroyed).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A Token that can be irreversibly burned (destroyed).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"}},\"title\":\"ERC721A Burnable Token\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/ERC721ABurnable.sol\":\"ERC721ABurnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/ERC721ABurnable.sol\":{\"keccak256\":\"0x19ba9af16e4159db5e89cecf3288eefa8bd8dff0dbd0ca2560d9da05adb2728e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00c6045054fca386d5646c017c932759eb821b29363cd7c5ad3e3a1896e68d5f\",\"dweb:/ipfs/QmNuvnZ5spjAkPFfTKy6mzWSUFtgdkhJfGU6ZU9HgVov3u\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1644,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1646,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1648,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1650,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1654,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1658,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1662,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1668,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"IERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721ABurnable compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721ABurnable compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/IERC721ABurnable.sol\":\"IERC721ABurnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							648
						],
						"ERC165": [
							968
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							980
						],
						"Strings": [
							851
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 393,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 649,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 852,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 969,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 648,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319,
								968,
								980,
								392,
								648
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 319,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$392",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$319_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 967,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 319,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										359
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 319,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 135,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 319,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "3791:419:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 133,
												"nodeType": "IfStatement",
												"src": "3801:403:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "3830:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 115,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 97,
																										"src": "4017:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 114,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4009:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 113,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "4009:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 116,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4009:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4027:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 851,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$851_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 850,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 118,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4056:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 124,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4129:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 123,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4121:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 122,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4121:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 125,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4121:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 126,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4136:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 120,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 851,
																								"src": "4101:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$851_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 121,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 850,
																							"src": "4101:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4101:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 131,
															"nodeType": "ExpressionStatement",
															"src": "3844:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 319,
									"src": "3718:492:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										367
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4474:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 144,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 146,
														"indexExpression": {
															"id": 145,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4491:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4491:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 143,
												"id": 148,
												"nodeType": "Return",
												"src": "4484:29:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4216:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4400:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4447:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4413:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:14:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:9:0"
									},
									"scope": 319,
									"src": "4391:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										375
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4873:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4894:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 166,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4900:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4883:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4883:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "4883:25:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4526:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 160,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4866:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 159,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4853:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4853:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4844:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4844:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4779:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4835:8:0"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4797:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4789:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4811:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4803:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:31:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4873:0:0"
									},
									"scope": 319,
									"src": "4770:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5253:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5275:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "5281:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5263:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5263:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5263:26:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4921:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "5233:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5233:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5224:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5224:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5158:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5215:8:0"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5191:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5183:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5253:0:0"
									},
									"scope": 319,
									"src": "5149:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "5864:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 200,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "5882:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "5893:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5893:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5882:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5907:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5874:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "5874:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5980:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5968:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5968:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5968:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5302:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5796:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5855:8:0"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5809:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5808:31:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5864:0:0"
									},
									"scope": 319,
									"src": "5787:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6708:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "6729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 223,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 221,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "6718:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6718:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "6718:25:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "6007:628:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6668:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6660:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6682:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6659:31:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6708:0:0"
									},
									"scope": 319,
									"src": "6640:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "6948:174:0",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6966:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "6958:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 235,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "6999:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6986:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6986:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6958:46:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 241,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7014:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 243,
															"indexExpression": {
																"id": 242,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "7021:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7014:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7014:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "7039:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7014:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "7014:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7080:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 250,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7086:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 251,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7105:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "7063:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7063:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "EmitStatement",
												"src": "7058:57:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6756:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6884:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6906:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6898:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6920:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6912:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6897:33:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6948:0:0"
									},
									"scope": 319,
									"src": "6875:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "7312:165:0",
										"statements": [
											{
												"condition": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7326:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "7335:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 265,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "7341:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 263,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7327:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "7322:149:0",
												"trueBody": {
													"id": 284,
													"nodeType": "Block",
													"src": "7351:120:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 268,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7365:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 270,
																			"indexExpression": {
																				"id": 269,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7372:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7365:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7365:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 273,
																	"indexExpression": {
																		"id": 272,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7386:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7365:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7397:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7365:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "7365:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "7432:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 279,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7438:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 280,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "7447:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7447:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 277,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "7420:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7420:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "EmitStatement",
															"src": "7415:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7128:111:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7253:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7272:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7264:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7286:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7278:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7263:31:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7312:0:0"
									},
									"scope": 319,
									"src": "7244:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "7671:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7693:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 297,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7699:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7685:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7685:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 316,
												"nodeType": "IfStatement",
												"src": "7681:149:0",
												"trueBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "7709:121:0",
													"statements": [
														{
															"expression": {
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 299,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7723:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 301,
																			"indexExpression": {
																				"id": 300,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 290,
																				"src": "7730:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7723:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7723:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 304,
																	"indexExpression": {
																		"id": 303,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7744:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7723:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7755:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7723:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "7723:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "7791:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 310,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7797:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 311,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "7806:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7806:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 308,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "7779:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7779:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 314,
															"nodeType": "EmitStatement",
															"src": "7774:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "7483:114:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7611:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7631:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7637:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:31:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7671:0:0"
									},
									"scope": 319,
									"src": "7602:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "1806:6032:0",
							"usedErrors": []
						}
					],
					"src": "108:7731:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 331,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 340,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 349,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 392,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 392,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 392,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 392,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 392,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							432
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1661:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1708:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1752:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1796:39:2",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1816:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:2"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:2"
									},
									"scope": 432,
									"src": "1782:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2236:421:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2325:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 416,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2336:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:2"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2455:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 422,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2465:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:2"
											},
											{
												"id": 425,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:2"
											},
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2638:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:2"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 431,
									"name": "nonReentrant",
									"nameLocation": "2221:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:2"
									},
									"src": "2212:445:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 433,
							"src": "873:1786:2",
							"usedErrors": []
						}
					],
					"src": "97:2563:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							510
						]
					},
					"id": 511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 510,
							"linearizedBaseContracts": [
								510
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 444,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 453,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 510,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 510,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 510,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 510,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 510,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2699:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:3"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2758:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:3"
									},
									"scope": 510,
									"src": "2646:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 511,
							"src": "202:2564:3",
							"usedErrors": []
						}
					],
					"src": "106:2661:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							980
						],
						"IERC721": [
							626
						]
					},
					"id": 627,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 513,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 627,
							"sourceUnit": 981,
							"src": "133:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 515,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 980,
										"src": "271:7:4"
									},
									"id": 516,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 514,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 626,
							"linearizedBaseContracts": [
								626,
								980
							],
							"name": "IERC721",
							"nameLocation": "260:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 525,
									"name": "Transfer",
									"nameLocation": "384:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "393:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "415:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "435:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:4"
									},
									"src": "378:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 534,
									"name": "Approval",
									"nameLocation": "571:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "580:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "603:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "629:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:4"
									},
									"src": "565:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 543,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "803:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "826:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "852:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:4"
									},
									"src": "782:85:4"
								},
								{
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "973:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:4"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "1011:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:4"
									},
									"scope": 626,
									"src": "954:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1187:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:4"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1227:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:4"
									},
									"scope": 626,
									"src": "1170:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1844:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1866:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1911:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:4"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:4"
									},
									"scope": 626,
									"src": "1809:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2682:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2704:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2724:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:4"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:4"
									},
									"scope": 626,
									"src": "2647:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "3301:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "3323:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "3343:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:4"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:4"
									},
									"scope": 626,
									"src": "3270:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3854:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3866:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:4"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:4"
									},
									"scope": 626,
									"src": "3837:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4239:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4257:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:4"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:4"
									},
									"scope": 626,
									"src": "4212:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4453:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4493:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:4"
									},
									"scope": 626,
									"src": "4432:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "4686:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "4701:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:4"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "4742:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:4"
									},
									"scope": 626,
									"src": "4660:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 627,
							"src": "250:4500:4",
							"usedErrors": []
						}
					],
					"src": "108:4643:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							648
						]
					},
					"id": 649,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 628,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 629,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 648,
							"linearizedBaseContracts": [
								648
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 634,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 633,
												"id": 636,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 648,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 643,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 642,
												"id": 645,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 648,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 649,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							851
						]
					},
					"id": 852,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 650,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 651,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 851,
							"linearizedBaseContracts": [
								851
							],
							"name": "Strings",
							"nameLocation": "154:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 654,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 851,
									"src": "168:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 652,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 653,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "399:632:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 662,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "601:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 668,
												"nodeType": "IfStatement",
												"src": "597:51:6",
												"trueBody": {
													"id": 667,
													"nodeType": "Block",
													"src": "613:35:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 661,
															"id": 666,
															"nodeType": "Return",
															"src": "627:10:6"
														}
													]
												}
											},
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 732,
														"src": "657:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 669,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 672,
												"initialValue": {
													"id": 671,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 657,
													"src": "672:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:6"
											},
											{
												"assignments": [
													674
												],
												"declarations": [
													{
														"constant": false,
														"id": 674,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 732,
														"src": "687:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 673,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 675,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:6"
											},
											{
												"body": {
													"id": 686,
													"nodeType": "Block",
													"src": "729:57:6",
													"statements": [
														{
															"expression": {
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:6",
																"subExpression": {
																	"id": 679,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "743:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 681,
															"nodeType": "ExpressionStatement",
															"src": "743:8:6"
														},
														{
															"expression": {
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 682,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "765:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 685,
															"nodeType": "ExpressionStatement",
															"src": "765:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "718:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 687,
												"nodeType": "WhileStatement",
												"src": "711:75:6"
											},
											{
												"assignments": [
													689
												],
												"declarations": [
													{
														"constant": false,
														"id": 689,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 732,
														"src": "795:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 688,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 694,
												"initialValue": {
													"arguments": [
														{
															"id": 692,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "827:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 690,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:6"
											},
											{
												"body": {
													"id": 725,
													"nodeType": "Block",
													"src": "863:131:6",
													"statements": [
														{
															"expression": {
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 698,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "877:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 701,
															"nodeType": "ExpressionStatement",
															"src": "877:11:6"
														},
														{
															"expression": {
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 702,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "902:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 704,
																	"indexExpression": {
																		"id": 703,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "909:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 716,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 709,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 714,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 712,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 657,
																									"src": "945:5:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 713,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 711,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 710,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 715,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 707,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 705,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 720,
															"nodeType": "ExpressionStatement",
															"src": "902:56:6"
														},
														{
															"expression": {
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 721,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "972:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 724,
															"nodeType": "ExpressionStatement",
															"src": "972:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 695,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "851:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "WhileStatement",
												"src": "844:150:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "1017:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 727,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 661,
												"id": 731,
												"nodeType": "Return",
												"src": "1003:21:6"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "346:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:6"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "384:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 659,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:6"
									},
									"scope": 851,
									"src": "328:703:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "1210:255:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 741,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "1224:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "1220:54:6",
												"trueBody": {
													"id": 746,
													"nodeType": "Block",
													"src": "1236:38:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 740,
															"id": 745,
															"nodeType": "Return",
															"src": "1250:13:6"
														}
													]
												}
											},
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "1283:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 748,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 751,
												"initialValue": {
													"id": 750,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 736,
													"src": "1298:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:6"
											},
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "1313:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 752,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 755,
												"initialValue": {
													"hexValue": "30",
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:6"
											},
											{
												"body": {
													"id": 766,
													"nodeType": "Block",
													"src": "1359:57:6",
													"statements": [
														{
															"expression": {
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:6",
																"subExpression": {
																	"id": 759,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "1373:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 761,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:6"
														},
														{
															"expression": {
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 762,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "1395:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 765,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 756,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1348:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 767,
												"nodeType": "WhileStatement",
												"src": "1341:75:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "1444:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 770,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "1451:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 768,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															774,
															850
														],
														"referencedDeclaration": 850,
														"src": "1432:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 740,
												"id": 772,
												"nodeType": "Return",
												"src": "1425:33:6"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1157:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:6"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1195:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 738,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:6"
									},
									"scope": 851,
									"src": "1136:329:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "1678:351:6",
										"statements": [
											{
												"assignments": [
													785
												],
												"declarations": [
													{
														"constant": false,
														"id": 785,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "1688:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 784,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 789,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "1724:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 786,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:6"
											},
											{
												"expression": {
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 795,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "1745:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 797,
														"indexExpression": {
															"hexValue": "30",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:6"
											},
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 801,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "1770:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 803,
														"indexExpression": {
															"hexValue": "31",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:6"
											},
											{
												"body": {
													"id": 835,
													"nodeType": "Block",
													"src": "1840:87:6",
													"statements": [
														{
															"expression": {
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 821,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "1854:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 823,
																	"indexExpression": {
																		"id": 822,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "1861:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 824,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 654,
																		"src": "1866:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 828,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 825,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 777,
																			"src": "1879:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 830,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:6"
														},
														{
															"expression": {
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 831,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "1905:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 834,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 815,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "1828:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"initializationExpression": {
													"assignments": [
														808
													],
													"declarations": [
														{
															"constant": false,
															"id": 808,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 836,
															"src": "1800:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 807,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 814,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 810,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "1816:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:6"
												},
												"loopExpression": {
													"expression": {
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:6",
														"subExpression": {
															"id": 818,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "1837:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 820,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 838,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "1944:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 837,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 846,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2015:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 844,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 783,
												"id": 848,
												"nodeType": "Return",
												"src": "2001:21:6"
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1609:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1624:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:6"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1663:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 781,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:6"
									},
									"scope": 851,
									"src": "1588:441:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 852,
							"src": "146:1885:6",
							"usedErrors": []
						}
					],
					"src": "86:1946:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
					"exportedSymbols": {
						"MerkleProof": [
							944
						]
					},
					"id": 945,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 853,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MerkleProof",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 854,
								"nodeType": "StructuredDocumentation",
								"src": "143:656:7",
								"text": " @dev These functions deal with verification of Merkle Trees proofs.\n The proofs can be generated using the JavaScript library\n https://github.com/miguelmota/merkletreejs[merkletreejs].\n Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value."
							},
							"fullyImplemented": true,
							"id": 944,
							"linearizedBaseContracts": [
								944
							],
							"name": "MerkleProof",
							"nameLocation": "808:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "1281:57:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 868,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "1311:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															{
																"id": 869,
																"name": "leaf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "1318:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 867,
															"name": "processProof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "1298:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32[] memory,bytes32) pure returns (bytes32)"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1298:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 871,
														"name": "root",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "1327:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1298:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 866,
												"id": 873,
												"nodeType": "Return",
												"src": "1291:40:7"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "826:323:7",
										"text": " @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "1163:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1196:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1179:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 856,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1179:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 857,
													"nodeType": "ArrayTypeName",
													"src": "1179:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "1219:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1211:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 859,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "1241:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1233:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 861,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:82:7"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1275:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 864,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1275:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:6:7"
									},
									"scope": 944,
									"src": "1154:184:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "1781:570:7",
										"statements": [
											{
												"assignments": [
													887
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "computedHash",
														"nameLocation": "1799:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "1791:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 886,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1791:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 889,
												"initialValue": {
													"id": 888,
													"name": "leaf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 881,
													"src": "1814:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1791:27:7"
											},
											{
												"body": {
													"id": 927,
													"nodeType": "Block",
													"src": "1871:445:7",
													"statements": [
														{
															"assignments": [
																902
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 902,
																	"mutability": "mutable",
																	"name": "proofElement",
																	"nameLocation": "1893:12:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 927,
																	"src": "1885:20:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 901,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1885:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 906,
															"initialValue": {
																"baseExpression": {
																	"id": 903,
																	"name": "proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "1908:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																},
																"id": 905,
																"indexExpression": {
																	"id": 904,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "1914:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1908:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1885:31:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 907,
																	"name": "computedHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "1934:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 908,
																	"name": "proofElement",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "1950:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1934:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 925,
																"nodeType": "Block",
																"src": "2138:168:7",
																"statements": [
																	{
																		"expression": {
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 918,
																				"name": "computedHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 887,
																				"src": "2234:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 920,
																						"name": "proofElement",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 902,
																						"src": "2264:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 921,
																						"name": "computedHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 887,
																						"src": "2278:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 919,
																					"name": "_efficientHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 943,
																					"src": "2249:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																						"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																					}
																				},
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2249:42:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2234:57:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 924,
																		"nodeType": "ExpressionStatement",
																		"src": "2234:57:7"
																	}
																]
															},
															"id": 926,
															"nodeType": "IfStatement",
															"src": "1930:376:7",
															"trueBody": {
																"id": 917,
																"nodeType": "Block",
																"src": "1964:168:7",
																"statements": [
																	{
																		"expression": {
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 910,
																				"name": "computedHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 887,
																				"src": "2060:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 912,
																						"name": "computedHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 887,
																						"src": "2090:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 913,
																						"name": "proofElement",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 902,
																						"src": "2104:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 911,
																					"name": "_efficientHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 943,
																					"src": "2075:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																						"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																					}
																				},
																				"id": 914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2075:42:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2060:57:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 916,
																		"nodeType": "ExpressionStatement",
																		"src": "2060:57:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 894,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "1848:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 895,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "1852:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1852:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1848:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 928,
												"initializationExpression": {
													"assignments": [
														891
													],
													"declarations": [
														{
															"constant": false,
															"id": 891,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1841:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 928,
															"src": "1833:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 890,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1833:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 893,
													"initialValue": {
														"hexValue": "30",
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1845:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1833:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1866:3:7",
														"subExpression": {
															"id": 898,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "1866:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 900,
													"nodeType": "ExpressionStatement",
													"src": "1866:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1828:488:7"
											},
											{
												"expression": {
													"id": 929,
													"name": "computedHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 887,
													"src": "2332:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 885,
												"id": 930,
												"nodeType": "Return",
												"src": "2325:19:7"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "1344:340:7",
										"text": " @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "processProof",
									"nameLocation": "1698:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1728:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "1711:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 877,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1711:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 878,
													"nodeType": "ArrayTypeName",
													"src": "1711:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "1743:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "1735:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 880,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:38:7"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "1772:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 883,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:9:7"
									},
									"scope": 944,
									"src": "1689:662:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "2440:135:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2459:110:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2480:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2486:1:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2473:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2508:4:7",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "2514:1:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2501:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2501:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2501:15:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2529:30:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2548:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2554:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2538:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2529:5:7"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 934,
														"isOffset": false,
														"isSlot": false,
														"src": "2486:1:7",
														"valueSize": 1
													},
													{
														"declaration": 936,
														"isOffset": false,
														"isSlot": false,
														"src": "2514:1:7",
														"valueSize": 1
													},
													{
														"declaration": 939,
														"isOffset": false,
														"isSlot": false,
														"src": "2529:5:7",
														"valueSize": 1
													}
												],
												"id": 941,
												"nodeType": "InlineAssembly",
												"src": "2450:119:7"
											}
										]
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_efficientHash",
									"nameLocation": "2366:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2389:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "2381:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 933,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2400:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "2392:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 935,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2380:22:7"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "2425:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 938,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:7"
									},
									"scope": 944,
									"src": "2357:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 945,
							"src": "800:1777:7",
							"usedErrors": []
						}
					],
					"src": "118:2460:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							968
						],
						"IERC165": [
							980
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 946,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 947,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 981,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 949,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 980,
										"src": "754:7:8"
									},
									"id": 950,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 948,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								980
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										979
									],
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 959,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 961,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$980_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$980_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 960,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$980",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 958,
												"id": 965,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 955,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 952,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 968,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 969,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							980
						]
					},
					"id": 981,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 980,
							"linearizedBaseContracts": [
								980
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 973,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 976,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 980,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 981,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"ERC721A/INagaKid.sol": {
				"ast": {
					"absolutePath": "ERC721A/INagaKid.sol",
					"exportedSymbols": {
						"ERC721A": [
							3197
						],
						"ERC721ABurnable": [
							3429
						],
						"ERC721A__IERC721Receiver": [
							1576
						],
						"IERC721A": [
							3406
						],
						"IERC721ABurnable": [
							3442
						],
						"INagaKid": [
							1041
						]
					},
					"id": 1042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 982,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "erc721a/contracts/IERC721A.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1042,
							"sourceUnit": 3407,
							"src": "61:40:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/extensions/ERC721ABurnable.sol",
							"file": "erc721a/contracts/extensions/ERC721ABurnable.sol",
							"id": 984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1042,
							"sourceUnit": 3430,
							"src": "103:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 985,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3406,
										"src": "187:8:10"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "187:8:10"
								}
							],
							"canonicalName": "INagaKid",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1041,
							"linearizedBaseContracts": [
								1041,
								3406
							],
							"name": "INagaKid",
							"nameLocation": "175:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										3257
									],
									"functionSelector": "18160ddd",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "214:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:2:10"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "251:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "251:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:9:10"
									},
									"scope": 1041,
									"src": "205:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "266:174:10",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "455:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "483:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "475:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "498:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "490:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:30:10"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "528:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "527:9:10"
									},
									"scope": 1041,
									"src": "446:91:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4f6ccce7",
									"id": 1008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "552:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "573:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "565:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:15:10"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "603:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:9:10"
									},
									"scope": 1041,
									"src": "543:69:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5abeb01",
									"id": 1013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "627:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:2:10"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "662:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:9:10"
									},
									"scope": 1041,
									"src": "618:53:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa271e1a",
									"id": 1020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isMinter",
									"nameLocation": "686:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "703:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "695:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:16:10"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "733:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1017,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "733:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:6:10"
									},
									"scope": 1041,
									"src": "677:62:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "43508b05",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchMint",
									"nameLocation": "754:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "772:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "764:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "781:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "776:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "776:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:26:10"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "798:0:10"
									},
									"scope": 1041,
									"src": "745:54:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40d097c3",
									"id": 1032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "814:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "831:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "823:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:13:10"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "844:0:10"
									},
									"scope": 1041,
									"src": "805:40:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "438b6300",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "walletOfOwner",
									"nameLocation": "860:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "882:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "874:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:16:10"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "913:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1036,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "913:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1037,
													"nodeType": "ArrayTypeName",
													"src": "913:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:18:10"
									},
									"scope": 1041,
									"src": "851:80:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1042,
							"src": "165:775:10",
							"usedErrors": [
								3203,
								3206,
								3209,
								3212,
								3215,
								3218,
								3221,
								3224,
								3227,
								3230,
								3233,
								3236,
								3239,
								3242
							]
						}
					],
					"src": "33:909:10"
				},
				"id": 10
			},
			"ERC721A/MintNagaKids.sol": {
				"ast": {
					"absolutePath": "ERC721A/MintNagaKids.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							648
						],
						"ERC165": [
							968
						],
						"ERC721A": [
							3197
						],
						"ERC721ABurnable": [
							3429
						],
						"ERC721A__IERC721Receiver": [
							1576
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							980
						],
						"IERC20": [
							510
						],
						"IERC721": [
							626
						],
						"IERC721A": [
							3406
						],
						"IERC721ABurnable": [
							3442
						],
						"INagaKid": [
							1041
						],
						"MerkleProof": [
							944
						],
						"MintNagaKids": [
							1558
						],
						"ReentrancyGuard": [
							432
						],
						"Strings": [
							851
						]
					},
					"id": 1559,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1559,
							"sourceUnit": 511,
							"src": "61:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1559,
							"sourceUnit": 627,
							"src": "119:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
							"id": 1046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1559,
							"sourceUnit": 945,
							"src": "179:68:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1047,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1559,
							"sourceUnit": 433,
							"src": "249:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1048,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1559,
							"sourceUnit": 320,
							"src": "313:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC721A/INagaKid.sol",
							"file": "./INagaKid.sol",
							"id": 1049,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1559,
							"sourceUnit": 1042,
							"src": "373:24:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1050,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "426:13:11"
									},
									"id": 1051,
									"nodeType": "InheritanceSpecifier",
									"src": "426:13:11"
								},
								{
									"baseName": {
										"id": 1052,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 432,
										"src": "441:15:11"
									},
									"id": 1053,
									"nodeType": "InheritanceSpecifier",
									"src": "441:15:11"
								}
							],
							"canonicalName": "MintNagaKids",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1558,
							"linearizedBaseContracts": [
								1558,
								432,
								319,
								968,
								980,
								392,
								648
							],
							"name": "MintNagaKids",
							"nameLocation": "410:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "f500cdfc",
									"id": 1058,
									"mutability": "constant",
									"name": "WHITELIST_MINT_ROUND",
									"nameLocation": "490:20:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "466:80:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1054,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "466:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "57484954454c4953545f4d494e545f524f554e44",
												"id": 1056,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "523:22:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba",
													"typeString": "literal_string \"WHITELIST_MINT_ROUND\""
												},
												"value": "WHITELIST_MINT_ROUND"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba",
													"typeString": "literal_string \"WHITELIST_MINT_ROUND\""
												}
											],
											"id": 1055,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "513:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1057,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "513:33:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "24c37a85",
									"id": 1063,
									"mutability": "constant",
									"name": "NAGA_HOLDER_MINT_ROUND",
									"nameLocation": "647:22:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "623:84:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1059,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "623:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4e4147415f484f4c4445525f4d494e545f524f554e44",
												"id": 1061,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "682:24:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db3",
													"typeString": "literal_string \"NAGA_HOLDER_MINT_ROUND\""
												},
												"value": "NAGA_HOLDER_MINT_ROUND"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db3",
													"typeString": "literal_string \"NAGA_HOLDER_MINT_ROUND\""
												}
											],
											"id": 1060,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "672:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1062,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "672:35:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5b94bbc3",
									"id": 1068,
									"mutability": "constant",
									"name": "SPECIAL_MINT_ROUND",
									"nameLocation": "808:18:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "784:76:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1064,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "784:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5350454349414c5f4d494e545f524f554e44",
												"id": 1066,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "839:20:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_5c8c0ce107274ad0569bd760c3d2406c1ed72c697935f3f965bd096c5cdedee4",
													"typeString": "literal_string \"SPECIAL_MINT_ROUND\""
												},
												"value": "SPECIAL_MINT_ROUND"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_5c8c0ce107274ad0569bd760c3d2406c1ed72c697935f3f965bd096c5cdedee4",
													"typeString": "literal_string \"SPECIAL_MINT_ROUND\""
												}
											],
											"id": 1065,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "829:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1067,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "829:31:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0a25dea9",
									"id": 1071,
									"mutability": "constant",
									"name": "DEFAULT",
									"nameLocation": "961:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "937:100:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1069,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "937:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 1070,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "971:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x0000000000000000000000000000000000000000000000000000000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e02023a1",
									"id": 1076,
									"mutability": "constant",
									"name": "WITHDRAW_ROLE",
									"nameLocation": "1074:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "1050:66:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1072,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1050:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "57495448445241575f524f4c45",
												"id": 1074,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1100:15:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec",
													"typeString": "literal_string \"WITHDRAW_ROLE\""
												},
												"value": "WITHDRAW_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec",
													"typeString": "literal_string \"WITHDRAW_ROLE\""
												}
											],
											"id": 1073,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1090:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1075,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1090:26:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df4e5881",
									"id": 1079,
									"mutability": "mutable",
									"name": "nagaKidContract",
									"nameLocation": "1141:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "1125:31:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INagaKid_$1041",
										"typeString": "contract INagaKid"
									},
									"typeName": {
										"id": 1078,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1077,
											"name": "INagaKid",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1041,
											"src": "1125:8:11"
										},
										"referencedDeclaration": 1041,
										"src": "1125:8:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INagaKid_$1041",
											"typeString": "contract INagaKid"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ef5fe79f",
									"id": 1081,
									"mutability": "mutable",
									"name": "currentMintRound",
									"nameLocation": "1178:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "1163:31:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1080,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1163:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2eb4a7ab",
									"id": 1083,
									"mutability": "mutable",
									"name": "merkleRoot",
									"nameLocation": "1216:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "1201:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1082,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1201:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1089,
									"mutability": "mutable",
									"name": "_isUserMinted",
									"nameLocation": "1289:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "1235:67:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(bytes32 => bool))"
									},
									"typeName": {
										"id": 1088,
										"keyType": {
											"id": 1084,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1243:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1235:44:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(bytes32 => bool))"
										},
										"valueType": {
											"id": 1087,
											"keyType": {
												"id": 1085,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1262:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "1254:24:11",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
												"typeString": "mapping(bytes32 => bool)"
											},
											"valueType": {
												"id": 1086,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1273:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1095,
									"mutability": "mutable",
									"name": "_userMintedAmount",
									"nameLocation": "1366:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "1309:74:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(bytes32 => uint256))"
									},
									"typeName": {
										"id": 1094,
										"keyType": {
											"id": 1090,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1317:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1309:47:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(bytes32 => uint256))"
										},
										"valueType": {
											"id": 1093,
											"keyType": {
												"id": 1091,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1336:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "1328:27:11",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"valueType": {
												"id": 1092,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1347:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff",
									"id": 1103,
									"name": "Minted",
									"nameLocation": "1413:6:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1436:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1420:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1450:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1442:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1466:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1458:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:57:11"
									},
									"src": "1407:70:11"
								},
								{
									"anonymous": false,
									"eventSelector": "abdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d973",
									"id": 1109,
									"name": "NagaKidContractChanged",
									"nameLocation": "1489:22:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"indexed": false,
												"mutability": "mutable",
												"name": "nagaKidBefore",
												"nameLocation": "1520:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1512:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1512:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"indexed": false,
												"mutability": "mutable",
												"name": "nagaKidAfter",
												"nameLocation": "1543:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1535:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1511:45:11"
									},
									"src": "1483:74:11"
								},
								{
									"anonymous": false,
									"eventSelector": "123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe",
									"id": 1115,
									"name": "MerkleRootChanged",
									"nameLocation": "1569:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"indexed": false,
												"mutability": "mutable",
												"name": "merkleRootBefore",
												"nameLocation": "1595:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "1587:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"indexed": false,
												"mutability": "mutable",
												"name": "merkleRootAfter",
												"nameLocation": "1621:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "1613:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:51:11"
									},
									"src": "1563:75:11"
								},
								{
									"anonymous": false,
									"eventSelector": "521ec96875ca228cd2fc1dbd4c927a34328c9ce1a83bcb8c1f633f012c90d785",
									"id": 1121,
									"name": "RoundChanged",
									"nameLocation": "1650:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundBefore",
												"nameLocation": "1671:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "1663:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundAfter",
												"nameLocation": "1692:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "1684:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:41:11"
									},
									"src": "1644:60:11"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 1129,
									"name": "Withdraw",
									"nameLocation": "1716:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1733:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1725:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"indexed": false,
												"mutability": "mutable",
												"name": "balanceOFContract",
												"nameLocation": "1745:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1737:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1773:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1765:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1724:59:11"
									},
									"src": "1710:74:11"
								},
								{
									"anonymous": false,
									"eventSelector": "b818a975f91276df8ba59329becbc23c793df0d503c19ac296c3c372a1fa0461",
									"id": 1139,
									"name": "WithdrawCurrency",
									"nameLocation": "1796:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1821:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1813:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "1832:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1824:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"indexed": false,
												"mutability": "mutable",
												"name": "balanceOfContract",
												"nameLocation": "1849:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1841:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1875:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1867:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1867:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:73:11"
									},
									"src": "1790:96:11"
								},
								{
									"anonymous": false,
									"eventSelector": "0127a8d3f57942833f6930572bce52ad882683e36eeb5830d199d3fa4bfa9467",
									"id": 1149,
									"name": "WithdrawNFT",
									"nameLocation": "1898:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1918:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1910:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1910:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"indexed": false,
												"mutability": "mutable",
												"name": "NFT",
												"nameLocation": "1929:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1921:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1941:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1933:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1933:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1958:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1950:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1909:59:11"
									},
									"src": "1892:77:11"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "2037:197:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1158,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "2061:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1159,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2081:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2081:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1157,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "2050:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "2050:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1164,
															"name": "WITHDRAW_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "2114:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1165,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2129:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2129:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1163,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "2103:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2103:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "2103:37:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1170,
															"name": "_nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "2170:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$1041",
																"typeString": "contract INagaKid"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_INagaKid_$1041",
																"typeString": "contract INagaKid"
															}
														],
														"id": 1169,
														"name": "setNagaKidContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "2151:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_INagaKid_$1041_$returns$__$",
															"typeString": "function (contract INagaKid)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "2151:36:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1174,
															"name": "_merkleRoot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "2212:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1173,
														"name": "setMerkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "2198:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "2198:26:11"
											}
										]
									},
									"id": 1178,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "_nagaKidContract",
												"nameLocation": "1998:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1989:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INagaKid_$1041",
													"typeString": "contract INagaKid"
												},
												"typeName": {
													"id": 1151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1150,
														"name": "INagaKid",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1041,
														"src": "1989:8:11"
													},
													"referencedDeclaration": 1041,
													"src": "1989:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKid_$1041",
														"typeString": "contract INagaKid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "_merkleRoot",
												"nameLocation": "2024:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2016:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2016:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:48:11"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2037:0:11"
									},
									"scope": 1558,
									"src": "1977:257:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "2325:224:11",
										"statements": [
											{
												"assignments": [
													1188
												],
												"declarations": [
													{
														"constant": false,
														"id": 1188,
														"mutability": "mutable",
														"name": "nagaKidBefore",
														"nameLocation": "2344:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 1210,
														"src": "2336:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1187,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2336:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"arguments": [
														{
															"id": 1191,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "2368:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$1041",
																"typeString": "contract INagaKid"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_INagaKid_$1041",
																"typeString": "contract INagaKid"
															}
														],
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2360:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1189,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2360:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2360:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2336:48:11"
											},
											{
												"expression": {
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1194,
														"name": "nagaKidContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "2395:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INagaKid_$1041",
															"typeString": "contract INagaKid"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1195,
														"name": "_nagaKid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "2413:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INagaKid_$1041",
															"typeString": "contract INagaKid"
														}
													},
													"src": "2395:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKid_$1041",
														"typeString": "contract INagaKid"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "2395:26:11"
											},
											{
												"assignments": [
													1199
												],
												"declarations": [
													{
														"constant": false,
														"id": 1199,
														"mutability": "mutable",
														"name": "nagaKidAfter",
														"nameLocation": "2440:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1210,
														"src": "2432:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1198,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2432:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1204,
												"initialValue": {
													"arguments": [
														{
															"id": 1202,
															"name": "_nagaKid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "2463:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$1041",
																"typeString": "contract INagaKid"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_INagaKid_$1041",
																"typeString": "contract INagaKid"
															}
														],
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2455:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1200,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2455:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2455:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2432:40:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1206,
															"name": "nagaKidBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "2513:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1207,
															"name": "nagaKidAfter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "2528:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1205,
														"name": "NagaKidContractChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "2490:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2490:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "EmitStatement",
												"src": "2485:56:11"
											}
										]
									},
									"functionSelector": "9e6c8855",
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1184,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2305:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1185,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1183,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2296:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2296:28:11"
										}
									],
									"name": "setNagaKidContract",
									"nameLocation": "2251:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "_nagaKid",
												"nameLocation": "2279:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2270:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INagaKid_$1041",
													"typeString": "contract INagaKid"
												},
												"typeName": {
													"id": 1180,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1179,
														"name": "INagaKid",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1041,
														"src": "2270:8:11"
													},
													"referencedDeclaration": 1041,
													"src": "2270:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKid_$1041",
														"typeString": "contract INagaKid"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:19:11"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2325:0:11"
									},
									"scope": 1558,
									"src": "2242:307:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "2627:146:11",
										"statements": [
											{
												"assignments": [
													1220
												],
												"declarations": [
													{
														"constant": false,
														"id": 1220,
														"mutability": "mutable",
														"name": "_roundBefore",
														"nameLocation": "2646:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1232,
														"src": "2638:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1219,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2638:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"id": 1221,
													"name": "currentMintRound",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1081,
													"src": "2661:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2638:39:11"
											},
											{
												"expression": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1223,
														"name": "currentMintRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "2688:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1224,
														"name": "_round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "2707:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2688:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "2688:25:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1228,
															"name": "_roundBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "2744:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1229,
															"name": "_round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "2758:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1227,
														"name": "RoundChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2731:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2731:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "EmitStatement",
												"src": "2726:39:11"
											}
										]
									},
									"functionSelector": "ff05fe4a",
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1216,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2607:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1217,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1215,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2598:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2598:28:11"
										}
									],
									"name": "setRound",
									"nameLocation": "2566:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "_round",
												"nameLocation": "2583:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "2575:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1212,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2575:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:16:11"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2627:0:11"
									},
									"scope": 1558,
									"src": "2557:216:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "2861:159:11",
										"statements": [
											{
												"assignments": [
													1242
												],
												"declarations": [
													{
														"constant": false,
														"id": 1242,
														"mutability": "mutable",
														"name": "_merkleRootBefore",
														"nameLocation": "2880:17:11",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "2872:25:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1241,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2872:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"id": 1243,
													"name": "merkleRoot",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1083,
													"src": "2900:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2872:38:11"
											},
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1245,
														"name": "merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "2921:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1246,
														"name": "_merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "2934:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2921:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "2921:24:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1250,
															"name": "_merkleRootBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "2981:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1251,
															"name": "_merkleRoot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "3000:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1249,
														"name": "MerkleRootChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "2963:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2963:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "EmitStatement",
												"src": "2958:54:11"
											}
										]
									},
									"functionSelector": "7cb64759",
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1238,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2841:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1239,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1237,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2832:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2832:28:11"
										}
									],
									"name": "setMerkleRoot",
									"nameLocation": "2790:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "_merkleRoot",
												"nameLocation": "2812:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2804:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:21:11"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2861:0:11"
									},
									"scope": 1558,
									"src": "2781:239:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "3130:805:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1268,
																"name": "_round",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "3149:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1269,
																"name": "DEFAULT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "3159:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "3149:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74206973206e6f7420617070726f7665642e",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3167:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae",
																"typeString": "literal_string \"Mint is not approved.\""
															},
															"value": "Mint is not approved."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae",
																"typeString": "literal_string \"Mint is not approved.\""
															}
														],
														"id": 1267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3141:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3141:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "3141:50:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1275,
																"name": "currentMintRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "3210:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1276,
																"name": "_round",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "3230:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "3210:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420617265206e6f7420696e2074686973206d696e74696e6720726f756e642e",
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3238:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265",
																"typeString": "literal_string \"Contract are not in this minting round.\""
															},
															"value": "Contract are not in this minting round."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265",
																"typeString": "literal_string \"Contract are not in this minting round.\""
															}
														],
														"id": 1274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3202:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3202:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "3202:78:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1282,
																		"name": "getTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1547,
																		"src": "3299:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3299:16:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1284,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "3318:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3299:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1286,
																	"name": "getMaxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "3328:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3328:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3299:43:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f76657220737570706c79",
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3344:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																"typeString": "literal_string \"Over supply\""
															},
															"value": "Over supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																"typeString": "literal_string \"Over supply\""
															}
														],
														"id": 1281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3291:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3291:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "3291:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1294,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3390:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3390:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1296,
																		"name": "_round",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "3401:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1293,
																	"name": "isUserMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "3377:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (address,bytes32) view returns (bool)"
																	}
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3377:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3412:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "3377:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752061726520616c7265616479206d696e7465642e",
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3419:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															},
															"value": "You are already minted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															}
														],
														"id": 1292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3369:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3369:76:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "3369:76:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1308,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3497:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MintNagaKids_$1558",
																				"typeString": "contract MintNagaKids"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MintNagaKids_$1558",
																				"typeString": "contract MintNagaKids"
																			}
																		],
																		"id": 1307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3489:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1306,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3489:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3489:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1304,
																	"name": "nagaKidContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "3464:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INagaKid_$1041",
																		"typeString": "contract INagaKid"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isMinter",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1020,
																"src": "3464:24:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3464:39:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374204d696e74206973206e6f7420617070726f7665642e",
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3505:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79",
																"typeString": "literal_string \"Contract Mint is not approved.\""
															},
															"value": "Contract Mint is not approved."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79",
																"typeString": "literal_string \"Contract Mint is not approved.\""
															}
														],
														"id": 1303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3456:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3456:82:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "3456:82:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1317,
																	"name": "_proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "3576:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	}
																},
																{
																	"id": 1318,
																	"name": "merkleRoot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "3584:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1322,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3623:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3623:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1324,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1260,
																					"src": "3635:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1325,
																					"name": "_round",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1262,
																					"src": "3644:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"expression": {
																					"id": 1320,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "3606:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "3606:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3606:45:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1319,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "3596:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3596:56:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1315,
																	"name": "MerkleProof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "3557:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_MerkleProof_$944_$",
																		"typeString": "type(library MerkleProof)"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "verify",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 875,
																"src": "3557:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3557:96:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a65642057686974656c6973744d696e74205468697320557365722e",
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3655:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517",
																"typeString": "literal_string \"Unauthorized WhitelistMint This User.\""
															},
															"value": "Unauthorized WhitelistMint This User."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517",
																"typeString": "literal_string \"Unauthorized WhitelistMint This User.\""
															}
														],
														"id": 1314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3549:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3549:146:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "3549:146:11"
											},
											{
												"expression": {
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1332,
																"name": "_isUserMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "3708:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(bytes32 => bool))"
																}
															},
															"id": 1336,
															"indexExpression": {
																"expression": {
																	"id": 1333,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3722:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3722:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3708:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 1337,
														"indexExpression": {
															"id": 1335,
															"name": "_round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "3734:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3708:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3744:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3708:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "3708:40:11"
											},
											{
												"expression": {
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1341,
																"name": "_userMintedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "3759:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(bytes32 => uint256))"
																}
															},
															"id": 1345,
															"indexExpression": {
																"expression": {
																	"id": 1342,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3777:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3777:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3759:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1346,
														"indexExpression": {
															"id": 1344,
															"name": "_round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "3789:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3759:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1347,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3800:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3759:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "3759:48:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1353,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3846:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3846:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1355,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "3857:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1350,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "3820:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$1041",
																"typeString": "contract INagaKid"
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "batchMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1027,
														"src": "3820:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3820:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "3820:45:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1359,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3890:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3890:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1361,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "3902:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1362,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3911:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3911:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1358,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "3883:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3883:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "EmitStatement",
												"src": "3878:49:11"
											}
										]
									},
									"functionSelector": "9f930765",
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1265,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1264,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 431,
												"src": "3117:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3117:12:11"
										}
									],
									"name": "mint",
									"nameLocation": "3037:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "_proof",
												"nameLocation": "3061:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3042:25:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3042:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "3042:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3077:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3069:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "_round",
												"nameLocation": "3094:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3086:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3041:60:11"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3130:0:11"
									},
									"scope": 1558,
									"src": "3028:907:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "4005:290:11",
										"statements": [
											{
												"assignments": [
													1376
												],
												"declarations": [
													{
														"constant": false,
														"id": 1376,
														"mutability": "mutable",
														"name": "balanceOFContract",
														"nameLocation": "4021:17:11",
														"nodeType": "VariableDeclaration",
														"scope": 1410,
														"src": "4016:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1375,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4016:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1382,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1379,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4049:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MintNagaKids_$1558",
																	"typeString": "contract MintNagaKids"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MintNagaKids_$1558",
																	"typeString": "contract MintNagaKids"
																}
															],
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4041:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1377,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4041:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4041:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "4041:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4016:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1384,
																"name": "balanceOFContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "4081:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4101:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4081:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742042616c616e6365",
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4104:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															},
															"value": "Insufficient Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															}
														],
														"id": 1383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4073:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4073:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "4073:54:11"
											},
											{
												"assignments": [
													1391,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "status",
														"nameLocation": "4144:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1410,
														"src": "4139:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1390,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4139:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1398,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4191:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1392,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "4155:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4155:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1394,
																"name": "balanceOFContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "4171:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4155:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4155:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4138:56:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1400,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "4213:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4205:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4205:15:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1402,
												"nodeType": "ExpressionStatement",
												"src": "4205:15:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1404,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "4247:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1405,
															"name": "balanceOFContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "4252:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1406,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4271:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4271:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1403,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "4238:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4238:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "EmitStatement",
												"src": "4233:54:11"
											}
										]
									},
									"functionSelector": "51cff8d9",
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1372,
													"name": "WITHDRAW_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1076,
													"src": "3990:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1373,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1371,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "3981:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3981:23:11"
										}
									],
									"name": "withdraw",
									"nameLocation": "3952:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3969:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "3961:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3961:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3960:13:11"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4005:0:11"
									},
									"scope": 1558,
									"src": "3943:352:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "4391:303:11",
										"statements": [
											{
												"assignments": [
													1422
												],
												"declarations": [
													{
														"constant": false,
														"id": 1422,
														"mutability": "mutable",
														"name": "balanceOfContract",
														"nameLocation": "4407:17:11",
														"nodeType": "VariableDeclaration",
														"scope": 1456,
														"src": "4402:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1421,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4402:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4463:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MintNagaKids_$1558",
																		"typeString": "contract MintNagaKids"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MintNagaKids_$1558",
																		"typeString": "contract MintNagaKids"
																	}
																],
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4455:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4455:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4455:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1424,
																	"name": "_currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "4434:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1423,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "4427:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$510_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4427:17:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$510",
																"typeString": "contract IERC20"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 467,
														"src": "4427:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4427:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4402:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1434,
																"name": "balanceOfContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "4488:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4508:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4488:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742042616c616e6365",
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4511:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															},
															"value": "Insufficient Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															}
														],
														"id": 1433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4480:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4480:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "4480:54:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1444,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "4572:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1445,
															"name": "balanceOfContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "4577:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1441,
																	"name": "_currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "4552:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1440,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "4545:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$510_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4545:17:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$510",
																"typeString": "contract IERC20"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4545:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4545:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "4545:50:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1449,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "4638:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1450,
															"name": "_currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "4642:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1451,
															"name": "balanceOfContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "4652:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1452,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4670:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4670:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1448,
														"name": "WithdrawCurrency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "4621:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4621:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "EmitStatement",
												"src": "4616:70:11"
											}
										]
									},
									"functionSelector": "8407ecc4",
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1418,
													"name": "WITHDRAW_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1076,
													"src": "4376:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1419,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1417,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4367:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4367:23:11"
										}
									],
									"name": "withdrawCurrency",
									"nameLocation": "4312:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4337:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4329:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "_currency",
												"nameLocation": "4349:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4341:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4341:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:31:11"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4391:0:11"
									},
									"scope": 1558,
									"src": "4303:391:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "4797:262:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1474,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "4838:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1471,
																				"name": "_NFT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1461,
																				"src": "4824:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1470,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "4816:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$626_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4816:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$626",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 559,
																	"src": "4816:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4816:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1478,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4859:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MintNagaKids_$1558",
																			"typeString": "contract MintNagaKids"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MintNagaKids_$1558",
																			"typeString": "contract MintNagaKids"
																		}
																	],
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4851:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1476,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4851:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4851:13:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4816:48:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e7472616374",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32",
																"typeString": "literal_string \"This tokenId is not owned by contract\""
															},
															"value": "This tokenId is not owned by contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32",
																"typeString": "literal_string \"This tokenId is not owned by contract\""
															}
														],
														"id": 1469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4808:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4808:98:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "4808:98:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1490,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4958:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MintNagaKids_$1558",
																		"typeString": "contract MintNagaKids"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MintNagaKids_$1558",
																		"typeString": "contract MintNagaKids"
																	}
																],
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4950:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1488,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4950:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4950:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1492,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "4965:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "4970:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1485,
																	"name": "_NFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "4927:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1484,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "4919:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$626_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4919:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$626",
																"typeString": "contract IERC721"
															}
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 581,
														"src": "4919:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "4919:60:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1497,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "5017:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1498,
															"name": "_NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "5021:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1499,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "5026:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1500,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5035:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5035:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1496,
														"name": "WithdrawNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "5005:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5005:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1503,
												"nodeType": "EmitStatement",
												"src": "5000:51:11"
											}
										]
									},
									"functionSelector": "bff863ec",
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1466,
													"name": "WITHDRAW_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1076,
													"src": "4782:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1467,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1465,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4773:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4773:23:11"
										}
									],
									"name": "withdrawNFT",
									"nameLocation": "4711:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4731:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "4723:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4723:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "_NFT",
												"nameLocation": "4743:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "4735:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4756:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "4748:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4748:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4722:43:11"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4797:0:11"
									},
									"scope": 1558,
									"src": "4702:357:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "5145:54:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1514,
															"name": "_isUserMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "5163:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(bytes32 => bool))"
															}
														},
														"id": 1516,
														"indexExpression": {
															"id": 1515,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "5177:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5163:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 1518,
													"indexExpression": {
														"id": 1517,
														"name": "_round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "5184:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5163:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1513,
												"id": 1519,
												"nodeType": "Return",
												"src": "5156:35:11"
											}
										]
									},
									"functionSelector": "ffdc6129",
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUserMinted",
									"nameLocation": "5076:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5097:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "5089:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5089:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "_round",
												"nameLocation": "5111:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "5103:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1508,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5103:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5088:30:11"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "5139:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5139:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5138:6:11"
									},
									"scope": 1558,
									"src": "5067:132:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "5292:58:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1530,
															"name": "_userMintedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5310:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(bytes32 => uint256))"
															}
														},
														"id": 1532,
														"indexExpression": {
															"id": 1531,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "5328:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5310:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1534,
													"indexExpression": {
														"id": 1533,
														"name": "_round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "5335:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5310:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1529,
												"id": 1535,
												"nodeType": "Return",
												"src": "5303:39:11"
											}
										]
									},
									"functionSelector": "b5abafa1",
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userMintedAmount",
									"nameLocation": "5216:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5241:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "5233:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5233:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "_round",
												"nameLocation": "5255:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "5247:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1524,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5232:30:11"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "5283:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5283:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:9:11"
									},
									"scope": 1558,
									"src": "5207:143:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "5414:55:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1542,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "5432:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$1041",
																"typeString": "contract INagaKid"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "5432:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5432:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1541,
												"id": 1545,
												"nodeType": "Return",
												"src": "5425:36:11"
											}
										]
									},
									"functionSelector": "c4e41b22",
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalSupply",
									"nameLocation": "5367:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5381:2:11"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "5405:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5405:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5404:9:11"
									},
									"scope": 1558,
									"src": "5358:111:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "5531:53:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1552,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "5549:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$1041",
																"typeString": "contract INagaKid"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "maxSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1013,
														"src": "5549:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5549:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1551,
												"id": 1555,
												"nodeType": "Return",
												"src": "5542:34:11"
											}
										]
									},
									"functionSelector": "4c0f38c2",
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxSupply",
									"nameLocation": "5486:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5498:2:11"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "5522:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5522:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5521:9:11"
									},
									"scope": 1558,
									"src": "5477:107:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1559,
							"src": "401:5188:11",
							"usedErrors": []
						}
					],
					"src": "33:5558:11"
				},
				"id": 11
			},
			"erc721a/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							3197
						],
						"ERC721A__IERC721Receiver": [
							1576
						],
						"IERC721A": [
							3406
						]
					},
					"id": 3198,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1560,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:12"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 1561,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3198,
							"sourceUnit": 3407,
							"src": "109:24:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1562,
								"nodeType": "StructuredDocumentation",
								"src": "135:48:12",
								"text": " @dev ERC721 token receiver interface."
							},
							"fullyImplemented": false,
							"id": 1576,
							"linearizedBaseContracts": [
								1576
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "194:24:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 1575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "234:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "268:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "260:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "294:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "286:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "316:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "308:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "348:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "333:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "333:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:108:12"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "377:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1572,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "377:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:8:12"
									},
									"scope": 1576,
									"src": "225:160:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3198,
							"src": "184:203:12",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1578,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3406,
										"src": "905:8:12"
									},
									"id": 1579,
									"nodeType": "InheritanceSpecifier",
									"src": "905:8:12"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1577,
								"nodeType": "StructuredDocumentation",
								"src": "389:495:12",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard,\n including the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at `_startTokenId()`\n (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 3197,
							"linearizedBaseContracts": [
								3197,
								3406
							],
							"name": "ERC721A",
							"nameLocation": "894:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1587,
									"mutability": "constant",
									"name": "BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "993:26:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "968:67:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1580,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "968:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 1586,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1023:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1028:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1023:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 1584,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1022:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1585,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1034:1:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1022:13:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1590,
									"mutability": "constant",
									"name": "BITPOS_NUMBER_MINTED",
									"nameLocation": "1133:20:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "1108:50:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1588,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1108:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 1589,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1156:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1593,
									"mutability": "constant",
									"name": "BITPOS_NUMBER_BURNED",
									"nameLocation": "1256:20:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "1231:51:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1591,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1231:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 1592,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1279:3:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1596,
									"mutability": "constant",
									"name": "BITPOS_AUX",
									"nameLocation": "1371:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "1346:41:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1594,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1346:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 1595,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1384:3:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1604,
									"mutability": "constant",
									"name": "BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1500:22:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "1475:64:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1597,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1475:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 1603,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1526:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1531:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1526:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 1601,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1525:10:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1602,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1538:1:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1525:14:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1607,
									"mutability": "constant",
									"name": "BITPOS_START_TIMESTAMP",
									"nameLocation": "1636:22:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "1611:53:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1605,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 1606,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1661:3:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1612,
									"mutability": "constant",
									"name": "BITMASK_BURNED",
									"nameLocation": "1757:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "1732:50:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1608,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1732:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 1611,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1609,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1774:1:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 1610,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1779:3:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "1774:8:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1615,
									"mutability": "constant",
									"name": "BITPOS_NEXT_INITIALIZED",
									"nameLocation": "1888:23:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "1863:54:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1613,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1863:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 1614,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1914:3:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1620,
									"mutability": "constant",
									"name": "BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2019:24:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "1994:60:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1616,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1994:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 1619,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1617,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2046:1:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 1618,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2051:3:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2046:8:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1623,
									"mutability": "constant",
									"name": "BITPOS_EXTRA_DATA",
									"nameLocation": "2146:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "2121:48:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1621,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2121:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 1622,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2166:3:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1631,
									"mutability": "constant",
									"name": "BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2287:29:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "2262:71:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1624,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2262:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 1630,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2325:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2320:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 1628,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2319:10:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1629,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2332:1:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2319:14:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1639,
									"mutability": "constant",
									"name": "BITMASK_ADDRESS",
									"nameLocation": "2418:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "2393:57:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1632,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2393:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 1638,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2437:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2442:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2437:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 1636,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2436:10:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1637,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2449:1:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2436:14:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1642,
									"mutability": "constant",
									"name": "MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "2758:31:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "2733:63:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1640,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2733:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 1641,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2792:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1644,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "2870:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "2854:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1643,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2854:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1646,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "2942:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "2926:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1645,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2926:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1648,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2994:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "2979:20:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1647,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2979:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1650,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3041:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "3026:22:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1649,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3026:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1654,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "3468:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "3432:53:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1653,
										"keyType": {
											"id": 1651,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3440:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3432:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1652,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3451:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1658,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "3727:18:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "3691:54:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1657,
										"keyType": {
											"id": 1655,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3699:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3691:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1656,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3710:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1662,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "3838:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "3802:51:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1661,
										"keyType": {
											"id": 1659,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3810:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3802:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1660,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3821:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1668,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "3961:18:12",
									"nodeType": "VariableDeclaration",
									"scope": 3197,
									"src": "3908:71:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1667,
										"keyType": {
											"id": 1663,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3916:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3908:44:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 1666,
											"keyType": {
												"id": 1664,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3935:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3927:24:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 1665,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3946:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "4042:98:12",
										"statements": [
											{
												"expression": {
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1675,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "4052:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1676,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "4060:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4052:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "4052:13:12"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1679,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "4075:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1680,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "4085:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4075:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "4075:17:12"
											},
											{
												"expression": {
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1683,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "4102:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1684,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "4118:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4118:15:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4102:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "4102:31:12"
											}
										]
									},
									"id": 1689,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "4012:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "3998:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3998:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "4033:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "4019:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4019:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:44:12"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4042:0:12"
									},
									"scope": 3197,
									"src": "3986:154:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "4341:25:12",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4358:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1694,
												"id": 1696,
												"nodeType": "Return",
												"src": "4351:8:12"
											}
										]
									},
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "4146:125:12",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "4285:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4298:2:12"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4332:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4331:9:12"
									},
									"scope": 3197,
									"src": "4276:90:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "4496:37:12",
										"statements": [
											{
												"expression": {
													"id": 1704,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1644,
													"src": "4513:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1703,
												"id": 1705,
												"nodeType": "Return",
												"src": "4506:20:12"
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "4372:63:12",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "4449:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4461:2:12"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "4487:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4487:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4486:9:12"
									},
									"scope": 3197,
									"src": "4440:93:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										3257
									],
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "4798:247:12",
										"statements": [
											{
												"id": 1721,
												"nodeType": "UncheckedBlock",
												"src": "4951:88:12",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1714,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "4982:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1715,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "4998:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4982:28:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1717,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1698,
																	"src": "5013:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5013:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4982:46:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1713,
														"id": 1720,
														"nodeType": "Return",
														"src": "4975:53:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "4539:192:12",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see `_totalMinted`."
									},
									"functionSelector": "18160ddd",
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4745:11:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1710,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4771:8:12"
									},
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4756:2:12"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "4789:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:9:12"
									},
									"scope": 3197,
									"src": "4736:309:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "5194:223:12",
										"statements": [
											{
												"id": 1734,
												"nodeType": "UncheckedBlock",
												"src": "5338:73:12",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1729,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "5369:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1730,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1698,
																	"src": "5385:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5385:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5369:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1728,
														"id": 1733,
														"nodeType": "Return",
														"src": "5362:38:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "5051:82:12",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "5147:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5159:2:12"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "5185:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5185:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5184:9:12"
									},
									"scope": 3197,
									"src": "5138:279:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "5550:36:12",
										"statements": [
											{
												"expression": {
													"id": 1742,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1646,
													"src": "5567:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1741,
												"id": 1743,
												"nodeType": "Return",
												"src": "5560:19:12"
											}
										]
									},
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "5423:66:12",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "5503:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5515:2:12"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "5541:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5541:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5540:9:12"
									},
									"scope": 3197,
									"src": "5494:92:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										3265
									],
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "5744:516:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1754,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1748,
																"src": "6033:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6048:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "6033:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1757,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1748,
																"src": "6109:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6124:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "6109:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6033:101:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1761,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "6185:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6200:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "6185:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6033:177:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1753,
												"id": 1765,
												"nodeType": "Return",
												"src": "6014:196:12"
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "5592:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5662:17:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1750,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5720:8:12"
									},
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "5687:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "5680:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1747,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5680:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5679:20:12"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "5738:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5738:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5737:6:12"
									},
									"scope": 3197,
									"src": "5653:607:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3300
									],
									"body": {
										"id": 1792,
										"nodeType": "Block",
										"src": "6392:148:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1776,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "6406:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6423:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6415:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1777,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6415:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6415:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6406:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1785,
												"nodeType": "IfStatement",
												"src": "6402:60:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1782,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3212,
															"src": "6434:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6434:28:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1784,
													"nodeType": "RevertStatement",
													"src": "6427:35:12"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1786,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "6479:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1788,
														"indexExpression": {
															"id": 1787,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "6498:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6479:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1789,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "6507:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6479:54:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1775,
												"id": 1791,
												"nodeType": "Return",
												"src": "6472:61:12"
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "6266:48:12",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6328:9:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1772,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6365:8:12"
									},
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6346:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "6338:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:15:12"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "6383:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6383:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6382:9:12"
									},
									"scope": 3197,
									"src": "6319:221:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "6687:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1801,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "6705:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1803,
																	"indexExpression": {
																		"id": 1802,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "6724:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6705:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1804,
																	"name": "BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1590,
																	"src": "6734:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6705:49:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1806,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6704:51:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1807,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "6758:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6704:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1800,
												"id": 1809,
												"nodeType": "Return",
												"src": "6697:87:12"
											}
										]
									},
									"documentation": {
										"id": 1794,
										"nodeType": "StructuredDocumentation",
										"src": "6546:66:12",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "6626:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6648:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "6640:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6639:15:12"
									},
									"returnParameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "6678:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6678:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6677:9:12"
									},
									"scope": 3197,
									"src": "6617:174:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1828,
										"nodeType": "Block",
										"src": "6954:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1819,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "6972:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1821,
																	"indexExpression": {
																		"id": 1820,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1814,
																		"src": "6991:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6972:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1822,
																	"name": "BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "7001:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6972:49:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1824,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6971:51:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1825,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "7025:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6971:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1818,
												"id": 1827,
												"nodeType": "Return",
												"src": "6964:87:12"
											}
										]
									},
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "6797:82:12",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 1829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "6893:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6915:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "6907:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6907:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6906:15:12"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "6945:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6945:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6944:9:12"
									},
									"scope": 3197,
									"src": "6884:174:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "7234:71:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1839,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "7258:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1841,
																"indexExpression": {
																	"id": 1840,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1832,
																	"src": "7277:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7258:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1842,
																"name": "BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "7287:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7258:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7251:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 1837,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7251:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7251:47:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1836,
												"id": 1845,
												"nodeType": "Return",
												"src": "7244:54:12"
											}
										]
									},
									"documentation": {
										"id": 1830,
										"nodeType": "StructuredDocumentation",
										"src": "7064:102:12",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7180:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7196:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "7188:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7188:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7187:15:12"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "7226:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1834,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7226:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7225:8:12"
									},
									"scope": 3197,
									"src": "7171:134:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "7540:332:12",
										"statements": [
											{
												"assignments": [
													1856
												],
												"declarations": [
													{
														"constant": false,
														"id": 1856,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "7558:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "7550:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7550:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1860,
												"initialValue": {
													"baseExpression": {
														"id": 1857,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1658,
														"src": "7567:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1859,
													"indexExpression": {
														"id": 1858,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "7586:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7567:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7550:42:12"
											},
											{
												"assignments": [
													1862
												],
												"declarations": [
													{
														"constant": false,
														"id": 1862,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "7610:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "7602:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1861,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7602:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1863,
												"nodeType": "VariableDeclarationStatement",
												"src": "7602:17:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7702:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7716:16:12",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "7729:3:12"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "7716:9:12"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1852,
														"isOffset": false,
														"isSlot": false,
														"src": "7729:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1862,
														"isOffset": false,
														"isSlot": false,
														"src": "7716:9:12",
														"valueSize": 1
													}
												],
												"id": 1864,
												"nodeType": "InlineAssembly",
												"src": "7693:49:12"
											},
											{
												"expression": {
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1865,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "7751:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1866,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "7761:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1867,
																		"name": "BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "7770:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7761:31:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1869,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7760:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1870,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1862,
																		"src": "7797:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1871,
																		"name": "BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "7810:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7797:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1873,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7796:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7760:61:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7751:70:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1876,
												"nodeType": "ExpressionStatement",
												"src": "7751:70:12"
											},
											{
												"expression": {
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1877,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "7831:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1879,
														"indexExpression": {
															"id": 1878,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "7850:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7831:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1880,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "7859:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7831:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1882,
												"nodeType": "ExpressionStatement",
												"src": "7831:34:12"
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "7311:171:12",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "7496:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7512:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "7504:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7504:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "7526:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "7519:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1851,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7519:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7503:27:12"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7540:0:12"
									},
									"scope": 3197,
									"src": "7487:385:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "8025:1029:12",
										"statements": [
											{
												"assignments": [
													1893
												],
												"declarations": [
													{
														"constant": false,
														"id": 1893,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "8043:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 1937,
														"src": "8035:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1892,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8035:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1895,
												"initialValue": {
													"id": 1894,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1887,
													"src": "8050:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8035:22:12"
											},
											{
												"id": 1933,
												"nodeType": "UncheckedBlock",
												"src": "8068:932:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1896,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1698,
																	"src": "8096:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8096:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1898,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1893,
																"src": "8115:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8096:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1932,
														"nodeType": "IfStatement",
														"src": "8092:898:12",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1900,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "8141:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1901,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "8148:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8141:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1931,
															"nodeType": "IfStatement",
															"src": "8137:853:12",
															"trueBody": {
																"id": 1930,
																"nodeType": "Block",
																"src": "8163:827:12",
																"statements": [
																	{
																		"assignments": [
																			1904
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1904,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "8193:6:12",
																				"nodeType": "VariableDeclaration",
																				"scope": 1930,
																				"src": "8185:14:12",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1903,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8185:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1908,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1905,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1654,
																				"src": "8202:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1907,
																			"indexExpression": {
																				"id": 1906,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1893,
																				"src": "8220:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8202:23:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8185:40:12"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1909,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1904,
																					"src": "8289:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 1910,
																					"name": "BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1612,
																					"src": "8298:14:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8289:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1912,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8316:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "8289:28:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1929,
																		"nodeType": "IfStatement",
																		"src": "8285:687:12",
																		"trueBody": {
																			"id": 1928,
																			"nodeType": "Block",
																			"src": "8319:653:12",
																			"statements": [
																				{
																					"body": {
																						"id": 1924,
																						"nodeType": "Block",
																						"src": "8820:91:12",
																						"statements": [
																							{
																								"expression": {
																									"id": 1922,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1917,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1904,
																										"src": "8850:6:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 1918,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1654,
																											"src": "8859:17:12",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 1921,
																										"indexExpression": {
																											"id": 1920,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "8877:6:12",
																											"subExpression": {
																												"id": 1919,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1893,
																												"src": "8879:4:12",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "8859:25:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8850:34:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1923,
																								"nodeType": "ExpressionStatement",
																								"src": "8850:34:12"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1916,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1914,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1904,
																							"src": "8807:6:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1915,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8817:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "8807:11:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1925,
																					"nodeType": "WhileStatement",
																					"src": "8800:111:12"
																				},
																				{
																					"expression": {
																						"id": 1926,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1904,
																						"src": "8943:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 1891,
																					"id": 1927,
																					"nodeType": "Return",
																					"src": "8936:13:12"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1934,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3221,
														"src": "9016:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9016:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1936,
												"nodeType": "RevertStatement",
												"src": "9009:38:12"
											}
										]
									},
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "7878:66:12",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "7958:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7985:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "7977:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7977:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7976:17:12"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "8016:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8015:9:12"
									},
									"scope": 3197,
									"src": "7949:1105:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "9242:259:12",
										"statements": [
											{
												"expression": {
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1947,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "9252:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$3251_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3244,
														"src": "9252:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1954,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "9285:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9277:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1952,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "9277:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9269:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1950,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9269:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9269:24:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9252:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "9252:41:12"
											},
											{
												"expression": {
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1959,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "9303:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$3251_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3246,
														"src": "9303:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1964,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "9337:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1965,
																	"name": "BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1607,
																	"src": "9347:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9337:32:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9330:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1962,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "9330:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9330:40:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "9303:67:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1969,
												"nodeType": "ExpressionStatement",
												"src": "9303:67:12"
											},
											{
												"expression": {
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1970,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "9380:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$3251_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1972,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3248,
														"src": "9380:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1973,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1941,
																"src": "9399:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1974,
																"name": "BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "9408:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9399:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9426:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9399:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9380:47:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1979,
												"nodeType": "ExpressionStatement",
												"src": "9380:47:12"
											},
											{
												"expression": {
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1980,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "9437:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$3251_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1982,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3250,
														"src": "9437:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1985,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "9466:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1986,
																	"name": "BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1623,
																	"src": "9476:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9466:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9459:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 1983,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "9459:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9459:35:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "9437:57:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1990,
												"nodeType": "ExpressionStatement",
												"src": "9437:57:12"
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "9060:78:12",
										"text": " Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "9152:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "9179:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "9171:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9171:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9170:16:12"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "9231:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "9209:31:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$3251_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1944,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1943,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3251,
														"src": "9209:14:12"
													},
													"referencedDeclaration": 3251,
													"src": "9209:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$3251_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9208:33:12"
									},
									"scope": 3197,
									"src": "9143:358:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "9670:68:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2002,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "9706:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2004,
															"indexExpression": {
																"id": 2003,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1995,
																"src": "9724:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9706:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2001,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "9687:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$3251_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9687:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$3251_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 2000,
												"id": 2006,
												"nodeType": "Return",
												"src": "9680:51:12"
											}
										]
									},
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "9507:75:12",
										"text": " Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "9596:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9617:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "9609:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9609:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9608:15:12"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "9647:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$3251_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1997,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3251,
														"src": "9647:14:12"
													},
													"referencedDeclaration": 3251,
													"src": "9647:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$3251_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9646:23:12"
									},
									"scope": 3197,
									"src": "9587:151:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "9902:128:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2014,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1654,
															"src": "9916:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2016,
														"indexExpression": {
															"id": 2015,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "9934:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9916:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9944:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9916:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2028,
												"nodeType": "IfStatement",
												"src": "9912:112:12",
												"trueBody": {
													"id": 2027,
													"nodeType": "Block",
													"src": "9947:77:12",
													"statements": [
														{
															"expression": {
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2019,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1654,
																		"src": "9961:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2021,
																	"indexExpression": {
																		"id": 2020,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "9979:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9961:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2023,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2011,
																			"src": "10007:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2022,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1938,
																		"src": "9988:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9988:25:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9961:52:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2026,
															"nodeType": "ExpressionStatement",
															"src": "9961:52:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "9744:97:12",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "9855:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9886:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "9878:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9877:15:12"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9902:0:12"
									},
									"scope": 3197,
									"src": "9846:184:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2045,
										"nodeType": "Block",
										"src": "10311:71:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2041,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2033,
																	"src": "10366:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2040,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "10347:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10347:27:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2039,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "10328:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$3251_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10328:47:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$3251_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 2038,
												"id": 2044,
												"nodeType": "Return",
												"src": "10321:54:12"
											}
										]
									},
									"documentation": {
										"id": 2031,
										"nodeType": "StructuredDocumentation",
										"src": "10036:185:12",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 2046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "10235:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10256:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "10248:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10248:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10247:17:12"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "10288:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$3251_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 2036,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2035,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3251,
														"src": "10288:14:12"
													},
													"referencedDeclaration": 3251,
													"src": "10288:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$3251_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10287:23:12"
									},
									"scope": 3197,
									"src": "10226:156:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "10556:344:12",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10575:319:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10685:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10698:5:12"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "10705:15:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10694:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10694:27:12"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "10685:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10812:72:12",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10825:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "10839:22:12"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "10863:9:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10863:11:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10835:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10835:40:12"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "10877:5:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10832:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10832:51:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10822:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:62:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10812:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1639,
														"isOffset": false,
														"isSlot": false,
														"src": "10705:15:12",
														"valueSize": 1
													},
													{
														"declaration": 1607,
														"isOffset": false,
														"isSlot": false,
														"src": "10839:22:12",
														"valueSize": 1
													},
													{
														"declaration": 2051,
														"isOffset": false,
														"isSlot": false,
														"src": "10877:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2049,
														"isOffset": false,
														"isSlot": false,
														"src": "10685:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2049,
														"isOffset": false,
														"isSlot": false,
														"src": "10698:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2049,
														"isOffset": false,
														"isSlot": false,
														"src": "10825:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2054,
														"isOffset": false,
														"isSlot": false,
														"src": "10812:6:12",
														"valueSize": 1
													}
												],
												"id": 2056,
												"nodeType": "InlineAssembly",
												"src": "10566:328:12"
											}
										]
									},
									"documentation": {
										"id": 2047,
										"nodeType": "StructuredDocumentation",
										"src": "10388:67:12",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "10469:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10496:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "10488:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10488:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "10511:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "10503:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10503:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10487:30:12"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "10548:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "10540:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10540:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10539:16:12"
									},
									"scope": 3197,
									"src": "10460:440:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										3308
									],
									"body": {
										"id": 2077,
										"nodeType": "Block",
										"src": "11030:69:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2072,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2061,
																			"src": "11082:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2071,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1938,
																		"src": "11063:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11063:27:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11055:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2069,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11055:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11055:36:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11047:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2067,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11047:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11047:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2066,
												"id": 2076,
												"nodeType": "Return",
												"src": "11040:52:12"
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "10906:46:12",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 2078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "10966:7:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2063,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11003:8:12"
									},
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10982:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "10974:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10974:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10973:17:12"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "11021:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11021:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11020:9:12"
									},
									"scope": 3197,
									"src": "10957:142:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3380
									],
									"body": {
										"id": 2087,
										"nodeType": "Block",
										"src": "11230:29:12",
										"statements": [
											{
												"expression": {
													"id": 2085,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1648,
													"src": "11247:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2084,
												"id": 2086,
												"nodeType": "Return",
												"src": "11240:12:12"
											}
										]
									},
									"documentation": {
										"id": 2079,
										"nodeType": "StructuredDocumentation",
										"src": "11105:51:12",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 2088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "11170:4:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2081,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11197:8:12"
									},
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11174:2:12"
									},
									"returnParameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "11215:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2082,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11215:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11214:15:12"
									},
									"scope": 3197,
									"src": "11161:98:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3386
									],
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "11394:31:12",
										"statements": [
											{
												"expression": {
													"id": 2095,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1650,
													"src": "11411:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2094,
												"id": 2096,
												"nodeType": "Return",
												"src": "11404:14:12"
											}
										]
									},
									"documentation": {
										"id": 2089,
										"nodeType": "StructuredDocumentation",
										"src": "11265:53:12",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "11332:6:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2091,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11361:8:12"
									},
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11338:2:12"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "11379:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2092,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11379:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11378:15:12"
									},
									"scope": 3197,
									"src": "11323:102:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3394
									],
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "11579:225:12",
										"statements": [
											{
												"condition": {
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11593:17:12",
													"subExpression": {
														"arguments": [
															{
																"id": 2108,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "11602:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2107,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2361,
															"src": "11594:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11594:16:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2114,
												"nodeType": "IfStatement",
												"src": "11589:59:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2111,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3236,
															"src": "11619:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11619:29:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2113,
													"nodeType": "RevertStatement",
													"src": "11612:36:12"
												}
											},
											{
												"assignments": [
													2116
												],
												"declarations": [
													{
														"constant": false,
														"id": 2116,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "11673:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2140,
														"src": "11659:21:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2115,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "11659:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2119,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2117,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "11683:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11683:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11659:34:12"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2122,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2116,
																		"src": "11716:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11710:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2120,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11710:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11710:14:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11710:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11735:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11710:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11795:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11710:87:12",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2131,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2116,
																		"src": "11763:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2133,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2101,
																				"src": "11782:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2132,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3196,
																			"src": "11772:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11772:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 2129,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "11746:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "11746:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11746:45:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11739:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2127,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "11739:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11739:53:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2106,
												"id": 2139,
												"nodeType": "Return",
												"src": "11703:94:12"
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "11431:55:12",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "11500:8:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2103,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11546:8:12"
									},
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11517:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "11509:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11509:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11508:17:12"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "11564:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11564:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11563:15:12"
									},
									"scope": 3197,
									"src": "11491:313:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "12115:26:12",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12132:2:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2146,
												"id": 2148,
												"nodeType": "Return",
												"src": "12125:9:12"
											}
										]
									},
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "11810:234:12",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "12058:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12066:2:12"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "12100:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12100:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12099:15:12"
									},
									"scope": 3197,
									"src": "12049:92:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "12324:230:12",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12408:140:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12483:55:12",
															"value": {
																"arguments": [
																	{
																		"name": "BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "12497:23:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "12525:8:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12535:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12522:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12522:15:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "12493:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12493:45:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12483:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1615,
														"isOffset": false,
														"isSlot": false,
														"src": "12497:23:12",
														"valueSize": 1
													},
													{
														"declaration": 2153,
														"isOffset": false,
														"isSlot": false,
														"src": "12525:8:12",
														"valueSize": 1
													},
													{
														"declaration": 2156,
														"isOffset": false,
														"isSlot": false,
														"src": "12483:6:12",
														"valueSize": 1
													}
												],
												"id": 2158,
												"nodeType": "InlineAssembly",
												"src": "12399:149:12"
											}
										]
									},
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "12147:86:12",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "12247:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "12276:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "12268:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12268:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12267:18:12"
									},
									"returnParameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12316:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "12308:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12308:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12307:16:12"
									},
									"scope": 3197,
									"src": "12238:316:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										3348
									],
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "12673:314:12",
										"statements": [
											{
												"assignments": [
													2170
												],
												"declarations": [
													{
														"constant": false,
														"id": 2170,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "12691:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2203,
														"src": "12683:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2169,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12683:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2174,
												"initialValue": {
													"arguments": [
														{
															"id": 2172,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "12707:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2171,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "12699:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12699:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12683:32:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2175,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3186,
															"src": "12730:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12730:19:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2177,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2170,
														"src": "12753:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12730:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2190,
												"nodeType": "IfStatement",
												"src": "12726:172:12",
												"trueBody": {
													"condition": {
														"id": 2184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "12776:45:12",
														"subExpression": {
															"arguments": [
																{
																	"id": 2180,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "12794:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2181,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3186,
																		"src": "12801:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12801:19:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2179,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "12777:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12777:44:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2189,
													"nodeType": "IfStatement",
													"src": "12772:126:12",
													"trueBody": {
														"id": 2188,
														"nodeType": "Block",
														"src": "12823:75:12",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2185,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3203,
																		"src": "12848:33:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12848:35:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2187,
																"nodeType": "RevertStatement",
																"src": "12841:42:12"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2191,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "12908:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2193,
														"indexExpression": {
															"id": 2192,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "12924:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12908:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2194,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "12935:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12908:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "12908:29:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2198,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "12961:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2199,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "12968:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2200,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "12972:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2197,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3283,
														"src": "12952:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12952:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2202,
												"nodeType": "EmitStatement",
												"src": "12947:33:12"
											}
										]
									},
									"documentation": {
										"id": 2161,
										"nodeType": "StructuredDocumentation",
										"src": "12560:46:12",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "12620:7:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2167,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12664:8:12"
									},
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12636:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "12628:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12628:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12648:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "12640:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12640:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12627:29:12"
									},
									"returnParameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12673:0:12"
									},
									"scope": 3197,
									"src": "12611:376:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3364
									],
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "13125:123:12",
										"statements": [
											{
												"condition": {
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13139:17:12",
													"subExpression": {
														"arguments": [
															{
																"id": 2214,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "13148:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2213,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2361,
															"src": "13140:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 2215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13140:16:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2220,
												"nodeType": "IfStatement",
												"src": "13135:64:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2217,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3206,
															"src": "13165:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13165:34:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2219,
													"nodeType": "RevertStatement",
													"src": "13158:41:12"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2221,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "13217:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2223,
													"indexExpression": {
														"id": 2222,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2207,
														"src": "13233:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13217:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2212,
												"id": 2224,
												"nodeType": "Return",
												"src": "13210:31:12"
											}
										]
									},
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "12993:50:12",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "13057:11:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13098:8:12"
									},
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13077:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "13069:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13069:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13068:17:12"
									},
									"returnParameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "13116:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13116:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13115:9:12"
									},
									"scope": 3197,
									"src": "13048:200:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3356
									],
									"body": {
										"id": 2259,
										"nodeType": "Block",
										"src": "13399:219:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2235,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2229,
														"src": "13413:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2236,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3186,
															"src": "13425:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13425:19:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13413:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2242,
												"nodeType": "IfStatement",
												"src": "13409:61:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2239,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3209,
															"src": "13453:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13453:17:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2241,
													"nodeType": "RevertStatement",
													"src": "13446:24:12"
												}
											},
											{
												"expression": {
													"id": 2250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2243,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1668,
																"src": "13481:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2247,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2244,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3186,
																	"src": "13500:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13500:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13481:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2248,
														"indexExpression": {
															"id": 2246,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "13521:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13481:49:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2249,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "13533:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13481:60:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2251,
												"nodeType": "ExpressionStatement",
												"src": "13481:60:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2253,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3186,
																"src": "13571:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13571:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2255,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "13592:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2256,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "13602:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2252,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3292,
														"src": "13556:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13556:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2258,
												"nodeType": "EmitStatement",
												"src": "13551:60:12"
											}
										]
									},
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "13254:56:12",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 2260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "13324:17:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2233,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13390:8:12"
									},
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13350:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "13342:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13342:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13365:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "13360:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13360:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13341:33:12"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13399:0:12"
									},
									"scope": 3197,
									"src": "13315:303:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3374
									],
									"body": {
										"id": 2277,
										"nodeType": "Block",
										"src": "13787:59:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2271,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "13804:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2273,
														"indexExpression": {
															"id": 2272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "13823:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13804:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2275,
													"indexExpression": {
														"id": 2274,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2265,
														"src": "13830:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13804:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2270,
												"id": 2276,
												"nodeType": "Return",
												"src": "13797:42:12"
											}
										]
									},
									"documentation": {
										"id": 2261,
										"nodeType": "StructuredDocumentation",
										"src": "13624:55:12",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "13693:16:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13763:8:12"
									},
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13718:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "13710:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13710:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13733:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "13725:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13725:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13709:33:12"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "13781:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13781:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13780:6:12"
									},
									"scope": 3197,
									"src": "13684:162:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3330
									],
									"body": {
										"id": 2296,
										"nodeType": "Block",
										"src": "14035:56:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2290,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "14062:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2291,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "14068:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2292,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2285,
															"src": "14072:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14081:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2289,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2297,
															2335
														],
														"referencedDeclaration": 2335,
														"src": "14045:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14045:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2295,
												"nodeType": "ExpressionStatement",
												"src": "14045:39:12"
											}
										]
									},
									"documentation": {
										"id": 2279,
										"nodeType": "StructuredDocumentation",
										"src": "13852:55:12",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 2297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "13921:16:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2287,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14026:8:12"
									},
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13955:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "13947:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13947:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13977:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "13969:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13969:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13997:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "13989:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13989:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13937:73:12"
									},
									"returnParameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14035:0:12"
									},
									"scope": 3197,
									"src": "13912:179:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3320
									],
									"body": {
										"id": 2334,
										"nodeType": "Block",
										"src": "14308:237:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2311,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2300,
															"src": "14331:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2312,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "14337:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2313,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "14341:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2310,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2841,
														"src": "14318:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14318:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2315,
												"nodeType": "ExpressionStatement",
												"src": "14318:31:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2316,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2302,
																"src": "14363:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "14363:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14363:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14381:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14363:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2333,
												"nodeType": "IfStatement",
												"src": "14359:180:12",
												"trueBody": {
													"condition": {
														"id": 2327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "14400:57:12",
														"subExpression": {
															"arguments": [
																{
																	"id": 2322,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "14432:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2323,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "14438:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2324,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "14442:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2325,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2306,
																	"src": "14451:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2321,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3060,
																"src": "14401:30:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14401:56:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2332,
													"nodeType": "IfStatement",
													"src": "14396:143:12",
													"trueBody": {
														"id": 2331,
														"nodeType": "Block",
														"src": "14459:80:12",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2328,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3230,
																		"src": "14484:38:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14484:40:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2330,
																"nodeType": "RevertStatement",
																"src": "14477:47:12"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 2298,
										"nodeType": "StructuredDocumentation",
										"src": "14097:55:12",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 2335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14166:16:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2308,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14299:8:12"
									},
									"parameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14200:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "14192:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14222:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "14214:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14214:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14242:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "14234:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "14272:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "14259:18:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14259:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14182:101:12"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14308:0:12"
									},
									"scope": 3197,
									"src": "14157:388:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2360,
										"nodeType": "Block",
										"src": "14854:205:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2343,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1698,
																	"src": "14883:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14883:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2345,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "14902:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14883:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2347,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "14925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2348,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "14935:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14925:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "14883:65:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2351,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "14985:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2353,
																"indexExpression": {
																	"id": 2352,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "15003:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14985:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 2354,
																"name": "BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "15014:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14985:43:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15032:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14985:48:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14883:150:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2342,
												"id": 2359,
												"nodeType": "Return",
												"src": "14864:169:12"
											}
										]
									},
									"documentation": {
										"id": 2336,
										"nodeType": "StructuredDocumentation",
										"src": "14551:235:12",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 2361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "14800:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14816:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "14808:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14807:17:12"
									},
									"returnParameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "14848:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14848:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14847:6:12"
									},
									"scope": 3197,
									"src": "14791:268:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2375,
										"nodeType": "Block",
										"src": "15196:44:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2370,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2364,
															"src": "15216:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2371,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2366,
															"src": "15220:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15230:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2369,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2376,
															2438
														],
														"referencedDeclaration": 2438,
														"src": "15206:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15206:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2374,
												"nodeType": "ExpressionStatement",
												"src": "15206:27:12"
											}
										]
									},
									"documentation": {
										"id": 2362,
										"nodeType": "StructuredDocumentation",
										"src": "15065:68:12",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 2376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "15147:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15165:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "15157:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15157:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15177:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "15169:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15169:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15156:30:12"
									},
									"returnParameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15196:0:12"
									},
									"scope": 3197,
									"src": "15138:102:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2437,
										"nodeType": "Block",
										"src": "15749:553:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2387,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2379,
															"src": "15765:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2388,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "15769:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2386,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2552,
														"src": "15759:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15759:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2390,
												"nodeType": "ExpressionStatement",
												"src": "15759:19:12"
											},
											{
												"id": 2436,
												"nodeType": "UncheckedBlock",
												"src": "15789:507:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 2391,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2379,
																		"src": "15817:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "15817:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15817:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15835:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15817:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2435,
														"nodeType": "IfStatement",
														"src": "15813:473:12",
														"trueBody": {
															"id": 2434,
															"nodeType": "Block",
															"src": "15838:448:12",
															"statements": [
																{
																	"assignments": [
																		2397
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2397,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "15864:3:12",
																			"nodeType": "VariableDeclaration",
																			"scope": 2434,
																			"src": "15856:11:12",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2396,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15856:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2399,
																	"initialValue": {
																		"id": 2398,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "15870:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15856:27:12"
																},
																{
																	"assignments": [
																		2401
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2401,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "15909:5:12",
																			"nodeType": "VariableDeclaration",
																			"scope": 2434,
																			"src": "15901:13:12",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2400,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15901:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2405,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2402,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2397,
																			"src": "15917:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2403,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2381,
																			"src": "15923:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15917:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15901:30:12"
																},
																{
																	"body": {
																		"id": 2422,
																		"nodeType": "Block",
																		"src": "15952:205:12",
																		"statements": [
																			{
																				"condition": {
																					"id": 2416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "15978:63:12",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 2409,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16018:1:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 2408,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "16010:7:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 2407,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "16010:7:12",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2410,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16010:10:12",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2411,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2379,
																								"src": "16022:2:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2413,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "16026:7:12",
																								"subExpression": {
																									"id": 2412,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2401,
																									"src": "16026:5:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2414,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2383,
																								"src": "16035:5:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 2406,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3060,
																							"src": "15979:30:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 2415,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15979:62:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2421,
																				"nodeType": "IfStatement",
																				"src": "15974:165:12",
																				"trueBody": {
																					"id": 2420,
																					"nodeType": "Block",
																					"src": "16043:96:12",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 2417,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3230,
																									"src": "16076:38:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 2418,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16076:40:12",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2419,
																							"nodeType": "RevertStatement",
																							"src": "16069:47:12"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2423,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2401,
																			"src": "16165:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2424,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2397,
																			"src": "16173:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16165:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2426,
																	"nodeType": "DoWhileStatement",
																	"src": "15949:229:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2427,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1644,
																			"src": "16241:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2428,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2397,
																			"src": "16258:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16241:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2433,
																	"nodeType": "IfStatement",
																	"src": "16237:34:12",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2430,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16263:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16263:8:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2432,
																		"nodeType": "ExpressionStatement",
																		"src": "16263:8:12"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2377,
										"nodeType": "StructuredDocumentation",
										"src": "15246:390:12",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 2438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "15650:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15677:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "15669:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15669:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15697:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "15689:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15689:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15728:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "15715:18:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15715:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15659:80:12"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15749:0:12"
									},
									"scope": 3197,
									"src": "15641:661:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2551,
										"nodeType": "Block",
										"src": "16617:1438:12",
										"statements": [
											{
												"assignments": [
													2447
												],
												"declarations": [
													{
														"constant": false,
														"id": 2447,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "16635:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 2551,
														"src": "16627:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2446,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16627:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2449,
												"initialValue": {
													"id": 2448,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1644,
													"src": "16650:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16627:36:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2450,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2441,
														"src": "16677:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16691:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16683:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2451,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16683:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16683:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16677:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2459,
												"nodeType": "IfStatement",
												"src": "16673:48:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2456,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3215,
															"src": "16702:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16702:19:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2458,
													"nodeType": "RevertStatement",
													"src": "16695:26:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2460,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "16735:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16747:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16735:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2466,
												"nodeType": "IfStatement",
												"src": "16731:44:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2463,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3218,
															"src": "16757:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16757:18:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2465,
													"nodeType": "RevertStatement",
													"src": "16750:25:12"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16816:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16808:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2468,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16808:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16808:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2472,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2441,
															"src": "16820:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2473,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2447,
															"src": "16824:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2474,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2443,
															"src": "16838:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2467,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3163,
														"src": "16786:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16786:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2476,
												"nodeType": "ExpressionStatement",
												"src": "16786:61:12"
											},
											{
												"id": 2540,
												"nodeType": "UncheckedBlock",
												"src": "17030:949:12",
												"statements": [
													{
														"expression": {
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2477,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "17250:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2479,
																"indexExpression": {
																	"id": 2478,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2441,
																	"src": "17269:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "17250:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2480,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2443,
																	"src": "17276:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2483,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2481,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17289:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 2482,
																							"name": "BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1590,
																							"src": "17294:20:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "17289:25:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2484,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "17288:27:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2485,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17318:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "17288:31:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2487,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17287:33:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17276:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17250:70:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2490,
														"nodeType": "ExpressionStatement",
														"src": "17250:70:12"
													},
													{
														"expression": {
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2491,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "17556:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2493,
																"indexExpression": {
																	"id": 2492,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2447,
																	"src": "17574:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "17556:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2495,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "17626:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2497,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "17667:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2496,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2160,
																				"src": "17646:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17646:30:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2502,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17702:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2501,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17694:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2500,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17694:7:12",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2503,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17694:10:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2504,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2441,
																					"src": "17706:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 2505,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "17710:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2499,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3137,
																				"src": "17679:14:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17679:33:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17646:66:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2494,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "17590:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17590:136:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17556:170:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2510,
														"nodeType": "ExpressionStatement",
														"src": "17556:170:12"
													},
													{
														"assignments": [
															2512
														],
														"declarations": [
															{
																"constant": false,
																"id": 2512,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "17749:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2540,
																"src": "17741:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2511,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17741:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2514,
														"initialValue": {
															"id": 2513,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2447,
															"src": "17759:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17741:30:12"
													},
													{
														"assignments": [
															2516
														],
														"declarations": [
															{
																"constant": false,
																"id": 2516,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "17793:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 2540,
																"src": "17785:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2515,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17785:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2520,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2517,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2447,
																"src": "17799:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2518,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "17814:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17799:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17785:37:12"
													},
													{
														"body": {
															"id": 2531,
															"nodeType": "Block",
															"src": "17839:73:12",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 2524,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17879:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 2523,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "17871:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 2522,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "17871:7:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17871:10:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2526,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2441,
																				"src": "17883:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "17887:9:12",
																				"subExpression": {
																					"id": 2527,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2512,
																					"src": "17887:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2521,
																			"name": "Transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3274,
																			"src": "17862:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17862:35:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2530,
																	"nodeType": "EmitStatement",
																	"src": "17857:40:12"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2532,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2512,
																"src": "17920:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2533,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2516,
																"src": "17930:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17920:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2535,
														"nodeType": "DoWhileStatement",
														"src": "17836:99:12"
													},
													{
														"expression": {
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2536,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "17949:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2537,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2516,
																"src": "17965:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17949:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2539,
														"nodeType": "ExpressionStatement",
														"src": "17949:19:12"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18017:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18009:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2542,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18009:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18009:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2546,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2441,
															"src": "18021:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2547,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2447,
															"src": "18025:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2548,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2443,
															"src": "18039:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2541,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3176,
														"src": "17988:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17988:60:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2550,
												"nodeType": "ExpressionStatement",
												"src": "17988:60:12"
											}
										]
									},
									"documentation": {
										"id": 2439,
										"nodeType": "StructuredDocumentation",
										"src": "16308:250:12",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 2552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "16572:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16586:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "16578:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16578:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "16598:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "16590:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16590:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16577:30:12"
									},
									"returnParameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16617:0:12"
									},
									"scope": 3197,
									"src": "16563:1492:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2663,
										"nodeType": "Block",
										"src": "18956:1372:12",
										"statements": [
											{
												"assignments": [
													2561
												],
												"declarations": [
													{
														"constant": false,
														"id": 2561,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "18974:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 2663,
														"src": "18966:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18966:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2563,
												"initialValue": {
													"id": 2562,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1644,
													"src": "18989:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18966:36:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2564,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2555,
														"src": "19016:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19030:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19022:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2565,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19022:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19022:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19016:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2573,
												"nodeType": "IfStatement",
												"src": "19012:48:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2570,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3215,
															"src": "19041:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19041:19:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2572,
													"nodeType": "RevertStatement",
													"src": "19034:26:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2574,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2557,
														"src": "19074:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19086:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19074:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2580,
												"nodeType": "IfStatement",
												"src": "19070:44:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2577,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3218,
															"src": "19096:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19096:18:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2579,
													"nodeType": "RevertStatement",
													"src": "19089:25:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2581,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2557,
														"src": "19128:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2582,
														"name": "MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "19139:31:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19128:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2587,
												"nodeType": "IfStatement",
												"src": "19124:88:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2584,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3239,
															"src": "19179:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19179:33:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2586,
													"nodeType": "RevertStatement",
													"src": "19172:40:12"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19253:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19245:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2589,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19245:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2593,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2555,
															"src": "19257:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2594,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "19261:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2595,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2557,
															"src": "19275:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2588,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3163,
														"src": "19223:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19223:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2597,
												"nodeType": "ExpressionStatement",
												"src": "19223:61:12"
											},
											{
												"id": 2652,
												"nodeType": "UncheckedBlock",
												"src": "19393:859:12",
												"statements": [
													{
														"expression": {
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2598,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "19613:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2600,
																"indexExpression": {
																	"id": 2599,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "19632:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19613:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2601,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "19639:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2604,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2602,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "19652:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 2603,
																							"name": "BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1590,
																							"src": "19657:20:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "19652:25:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2605,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19651:27:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19681:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "19651:31:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2608,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19650:33:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19639:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19613:70:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2611,
														"nodeType": "ExpressionStatement",
														"src": "19613:70:12"
													},
													{
														"expression": {
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2612,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "19919:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2614,
																"indexExpression": {
																	"id": 2613,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2561,
																	"src": "19937:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19919:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2616,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2555,
																		"src": "19989:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2618,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2557,
																					"src": "20030:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2617,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2160,
																				"src": "20009:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20009:30:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2623,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "20065:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2622,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20057:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2621,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "20057:7:12",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2624,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20057:10:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2625,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2555,
																					"src": "20069:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 2626,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20073:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2620,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3137,
																				"src": "20042:14:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20042:33:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20009:66:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2615,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "19953:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19953:136:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19919:170:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2631,
														"nodeType": "ExpressionStatement",
														"src": "19919:170:12"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 2633,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2561,
																	"src": "20129:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2634,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2561,
																			"src": "20143:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 2635,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "20158:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20143:23:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20169:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "20143:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20180:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20172:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2639,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20172:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20172:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2643,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "20184:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2632,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3405,
																"src": "20109:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20109:78:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2645,
														"nodeType": "EmitStatement",
														"src": "20104:83:12"
													},
													{
														"expression": {
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2646,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "20202:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2647,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2561,
																	"src": "20218:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2648,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "20233:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20218:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20202:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2651,
														"nodeType": "ExpressionStatement",
														"src": "20202:39:12"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20290:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20282:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2654,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20282:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20282:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2658,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2555,
															"src": "20294:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2659,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "20298:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2660,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2557,
															"src": "20312:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2653,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3176,
														"src": "20261:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20261:60:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2662,
												"nodeType": "ExpressionStatement",
												"src": "20261:60:12"
											}
										]
									},
									"documentation": {
										"id": 2553,
										"nodeType": "StructuredDocumentation",
										"src": "18061:829:12",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 2664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "18904:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18925:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2664,
												"src": "18917:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18917:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "18937:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2664,
												"src": "18929:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18929:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18916:30:12"
									},
									"returnParameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18956:0:12"
									},
									"scope": 3197,
									"src": "18895:1433:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2681,
										"nodeType": "Block",
										"src": "20586:487:12",
										"statements": [
											{
												"assignments": [
													2677
												],
												"declarations": [
													{
														"constant": false,
														"id": 2677,
														"mutability": "mutable",
														"name": "tokenApprovalsPtr",
														"nameLocation": "20632:17:12",
														"nodeType": "VariableDeclaration",
														"scope": 2681,
														"src": "20596:53:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														},
														"typeName": {
															"id": 2676,
															"keyType": {
																"id": 2674,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "20604:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Mapping",
															"src": "20596:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															},
															"valueType": {
																"id": 2675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20615:7:12",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2679,
												"initialValue": {
													"id": 2678,
													"name": "_tokenApprovals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1662,
													"src": "20652:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
														"typeString": "mapping(uint256 => address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20596:71:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20774:293:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20828:4:12",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "tokenId",
																		"nodeType": "YulIdentifier",
																		"src": "20834:7:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20821:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20821:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20821:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20862:4:12",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "tokenApprovalsPtr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "20868:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20855:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20855:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20855:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20904:44:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20937:4:12",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20943:4:12",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "20927:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20927:21:12"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "20904:19:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21012:45:12",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "21037:19:12"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "21031:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21031:26:12"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "21012:15:12"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2672,
														"isOffset": false,
														"isSlot": false,
														"src": "21012:15:12",
														"valueSize": 1
													},
													{
														"declaration": 2670,
														"isOffset": false,
														"isSlot": false,
														"src": "20904:19:12",
														"valueSize": 1
													},
													{
														"declaration": 2670,
														"isOffset": false,
														"isSlot": false,
														"src": "21037:19:12",
														"valueSize": 1
													},
													{
														"declaration": 2677,
														"isOffset": false,
														"isSlot": true,
														"src": "20868:22:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2667,
														"isOffset": false,
														"isSlot": false,
														"src": "20834:7:12",
														"valueSize": 1
													}
												],
												"id": 2680,
												"nodeType": "InlineAssembly",
												"src": "20765:302:12"
											}
										]
									},
									"documentation": {
										"id": 2665,
										"nodeType": "StructuredDocumentation",
										"src": "20334:97:12",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 2682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedAddress",
									"nameLocation": "20445:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20473:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "20465:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20465:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20464:17:12"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "20536:19:12",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "20528:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20528:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "20565:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "20557:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20557:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20527:54:12"
									},
									"scope": 3197,
									"src": "20436:637:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2695,
										"nodeType": "Block",
										"src": "21332:481:12",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21351:456:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21460:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "21472:4:12"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "21478:15:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21468:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21468:26:12"
															},
															"variableNames": [
																{
																	"name": "from",
																	"nodeType": "YulIdentifier",
																	"src": "21460:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21607:44:12",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "21624:9:12"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "21635:15:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21620:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21620:31:12"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "21607:9:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21732:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "21748:9:12"
																			},
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "21759:4:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21745:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21745:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "21769:9:12"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "21780:15:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21766:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21766:30:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "21742:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21742:55:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "21732:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1639,
														"isOffset": false,
														"isSlot": false,
														"src": "21478:15:12",
														"valueSize": 1
													},
													{
														"declaration": 1639,
														"isOffset": false,
														"isSlot": false,
														"src": "21635:15:12",
														"valueSize": 1
													},
													{
														"declaration": 2685,
														"isOffset": false,
														"isSlot": false,
														"src": "21780:15:12",
														"valueSize": 1
													},
													{
														"declaration": 2687,
														"isOffset": false,
														"isSlot": false,
														"src": "21460:4:12",
														"valueSize": 1
													},
													{
														"declaration": 2687,
														"isOffset": false,
														"isSlot": false,
														"src": "21472:4:12",
														"valueSize": 1
													},
													{
														"declaration": 2687,
														"isOffset": false,
														"isSlot": false,
														"src": "21759:4:12",
														"valueSize": 1
													},
													{
														"declaration": 2689,
														"isOffset": false,
														"isSlot": false,
														"src": "21607:9:12",
														"valueSize": 1
													},
													{
														"declaration": 2689,
														"isOffset": false,
														"isSlot": false,
														"src": "21624:9:12",
														"valueSize": 1
													},
													{
														"declaration": 2689,
														"isOffset": false,
														"isSlot": false,
														"src": "21748:9:12",
														"valueSize": 1
													},
													{
														"declaration": 2689,
														"isOffset": false,
														"isSlot": false,
														"src": "21769:9:12",
														"valueSize": 1
													},
													{
														"declaration": 2692,
														"isOffset": false,
														"isSlot": false,
														"src": "21732:6:12",
														"valueSize": 1
													}
												],
												"id": 2694,
												"nodeType": "InlineAssembly",
												"src": "21342:465:12"
											}
										]
									},
									"documentation": {
										"id": 2683,
										"nodeType": "StructuredDocumentation",
										"src": "21079:97:12",
										"text": " @dev Returns whether the `approvedAddress` is equals to `from` or `msgSender`."
									},
									"id": 2696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isOwnerOrApproved",
									"nameLocation": "21190:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "21226:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "21218:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21218:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21259:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "21251:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21251:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "21281:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "21273:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21273:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21208:88:12"
									},
									"returnParameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "21324:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "21319:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21319:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21318:13:12"
									},
									"scope": 3197,
									"src": "21181:632:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										3340
									],
									"body": {
										"id": 2840,
										"nodeType": "Block",
										"src": "22174:2620:12",
										"statements": [
											{
												"assignments": [
													2708
												],
												"declarations": [
													{
														"constant": false,
														"id": 2708,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "22192:19:12",
														"nodeType": "VariableDeclaration",
														"scope": 2840,
														"src": "22184:27:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22184:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2712,
												"initialValue": {
													"arguments": [
														{
															"id": 2710,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2703,
															"src": "22233:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2709,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "22214:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22214:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22184:57:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2717,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2708,
																		"src": "22272:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22264:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2715,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22264:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22264:28:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22256:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22256:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22256:37:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2720,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2699,
														"src": "22297:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22256:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2725,
												"nodeType": "IfStatement",
												"src": "22252:86:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2722,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3227,
															"src": "22310:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22310:28:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2724,
													"nodeType": "RevertStatement",
													"src": "22303:35:12"
												}
											},
											{
												"assignments": [
													2727,
													2729
												],
												"declarations": [
													{
														"constant": false,
														"id": 2727,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "22358:19:12",
														"nodeType": "VariableDeclaration",
														"scope": 2840,
														"src": "22350:27:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22350:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2729,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "22387:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 2840,
														"src": "22379:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2728,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "22379:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2733,
												"initialValue": {
													"arguments": [
														{
															"id": 2731,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2703,
															"src": "22426:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2730,
														"name": "_getApprovedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2682,
														"src": "22406:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 2732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22406:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22349:85:12"
											},
											{
												"condition": {
													"id": 2740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "22530:63:12",
													"subExpression": {
														"arguments": [
															{
																"id": 2735,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2729,
																"src": "22550:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2736,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2699,
																"src": "22567:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2737,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3186,
																	"src": "22573:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22573:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2734,
															"name": "_isOwnerOrApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2696,
															"src": "22531:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 2739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22531:62:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2751,
												"nodeType": "IfStatement",
												"src": "22526:173:12",
												"trueBody": {
													"condition": {
														"id": 2746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "22611:44:12",
														"subExpression": {
															"arguments": [
																{
																	"id": 2742,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "22629:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2743,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3186,
																		"src": "22635:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22635:19:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2741,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "22612:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22612:43:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2750,
													"nodeType": "IfStatement",
													"src": "22607:92:12",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2747,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3224,
																"src": "22664:33:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22664:35:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2749,
														"nodeType": "RevertStatement",
														"src": "22657:42:12"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2752,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2701,
														"src": "22714:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22728:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22720:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2753,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22720:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22720:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22714:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2761,
												"nodeType": "IfStatement",
												"src": "22710:52:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2758,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3233,
															"src": "22739:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22739:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2760,
													"nodeType": "RevertStatement",
													"src": "22732:30:12"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2763,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "22795:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2764,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2701,
															"src": "22801:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2765,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2703,
															"src": "22805:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22814:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2762,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3163,
														"src": "22773:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22773:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2768,
												"nodeType": "ExpressionStatement",
												"src": "22773:43:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22888:181:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22921:138:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "23022:19:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23043:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "23015:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23015:30:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23015:30:12"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "22905:15:12"
															},
															"nodeType": "YulIf",
															"src": "22902:157:12"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2729,
														"isOffset": false,
														"isSlot": false,
														"src": "22905:15:12",
														"valueSize": 1
													},
													{
														"declaration": 2727,
														"isOffset": false,
														"isSlot": false,
														"src": "23022:19:12",
														"valueSize": 1
													}
												],
												"id": 2769,
												"nodeType": "InlineAssembly",
												"src": "22879:190:12"
											},
											{
												"id": 2826,
												"nodeType": "UncheckedBlock",
												"src": "23334:1359:12",
												"statements": [
													{
														"expression": {
															"id": 2773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "23427:26:12",
															"subExpression": {
																"baseExpression": {
																	"id": 2770,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "23429:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2772,
																"indexExpression": {
																	"id": 2771,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "23448:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23429:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2774,
														"nodeType": "ExpressionStatement",
														"src": "23427:26:12"
													},
													{
														"expression": {
															"id": 2778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "23495:24:12",
															"subExpression": {
																"baseExpression": {
																	"id": 2775,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "23497:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2777,
																"indexExpression": {
																	"id": 2776,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2701,
																	"src": "23516:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23497:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2779,
														"nodeType": "ExpressionStatement",
														"src": "23495:24:12"
													},
													{
														"expression": {
															"id": 2793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2780,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "23783:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2782,
																"indexExpression": {
																	"id": 2781,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2703,
																	"src": "23801:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23783:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2784,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2701,
																		"src": "23848:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2785,
																			"name": "BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1620,
																			"src": "23868:24:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2787,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2699,
																					"src": "23910:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2788,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2701,
																					"src": "23916:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2789,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2708,
																					"src": "23920:19:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2786,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3137,
																				"src": "23895:14:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23895:45:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23868:72:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2783,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "23812:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23812:142:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23783:171:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2794,
														"nodeType": "ExpressionStatement",
														"src": "23783:171:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2795,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2708,
																	"src": "24071:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2796,
																	"name": "BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "24093:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24071:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24121:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24071:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2825,
														"nodeType": "IfStatement",
														"src": "24067:616:12",
														"trueBody": {
															"id": 2824,
															"nodeType": "Block",
															"src": "24124:559:12",
															"statements": [
																{
																	"assignments": [
																		2801
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2801,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "24150:11:12",
																			"nodeType": "VariableDeclaration",
																			"scope": 2824,
																			"src": "24142:19:12",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2800,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24142:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2805,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2802,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2703,
																			"src": "24164:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24174:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24164:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24142:33:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2806,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1654,
																				"src": "24295:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 2808,
																			"indexExpression": {
																				"id": 2807,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2801,
																				"src": "24313:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24295:30:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24329:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24295:35:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2823,
																	"nodeType": "IfStatement",
																	"src": "24291:378:12",
																	"trueBody": {
																		"id": 2822,
																		"nodeType": "Block",
																		"src": "24332:337:12",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2813,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2811,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2801,
																						"src": "24416:11:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2812,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1644,
																						"src": "24431:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24416:28:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2821,
																				"nodeType": "IfStatement",
																				"src": "24412:239:12",
																				"trueBody": {
																					"id": 2820,
																					"nodeType": "Block",
																					"src": "24446:205:12",
																					"statements": [
																						{
																							"expression": {
																								"id": 2818,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 2814,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1654,
																										"src": "24576:17:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 2816,
																									"indexExpression": {
																										"id": 2815,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2801,
																										"src": "24594:11:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "24576:30:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 2817,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2708,
																									"src": "24609:19:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "24576:52:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2819,
																							"nodeType": "ExpressionStatement",
																							"src": "24576:52:12"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2828,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "24717:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2829,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2701,
															"src": "24723:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2830,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2703,
															"src": "24727:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2827,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3274,
														"src": "24708:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24708:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2832,
												"nodeType": "EmitStatement",
												"src": "24703:32:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2834,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "24766:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2835,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2701,
															"src": "24772:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2703,
															"src": "24776:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24785:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2833,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3176,
														"src": "24745:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24745:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2839,
												"nodeType": "ExpressionStatement",
												"src": "24745:42:12"
											}
										]
									},
									"documentation": {
										"id": 2697,
										"nodeType": "StructuredDocumentation",
										"src": "21819:231:12",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "22064:12:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2705,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22165:8:12"
									},
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22094:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "22086:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22086:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22116:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "22108:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22108:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22136:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "22128:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22128:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22076:73:12"
									},
									"returnParameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22174:0:12"
									},
									"scope": 3197,
									"src": "22055:2739:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2852,
										"nodeType": "Block",
										"src": "24916:38:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2848,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2844,
															"src": "24932:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24941:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2847,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2853,
															3005
														],
														"referencedDeclaration": 3005,
														"src": "24926:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 2850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24926:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2851,
												"nodeType": "ExpressionStatement",
												"src": "24926:21:12"
											}
										]
									},
									"documentation": {
										"id": 2842,
										"nodeType": "StructuredDocumentation",
										"src": "24800:62:12",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 2853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "24876:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24890:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "24882:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24882:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24881:17:12"
									},
									"returnParameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24916:0:12"
									},
									"scope": 3197,
									"src": "24867:87:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3004,
										"nodeType": "Block",
										"src": "25240:2928:12",
										"statements": [
											{
												"assignments": [
													2862
												],
												"declarations": [
													{
														"constant": false,
														"id": 2862,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "25258:19:12",
														"nodeType": "VariableDeclaration",
														"scope": 3004,
														"src": "25250:27:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2861,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25250:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2866,
												"initialValue": {
													"arguments": [
														{
															"id": 2864,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2856,
															"src": "25299:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2863,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "25280:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25280:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25250:57:12"
											},
											{
												"assignments": [
													2868
												],
												"declarations": [
													{
														"constant": false,
														"id": 2868,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "25326:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 3004,
														"src": "25318:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2867,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25318:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2876,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2873,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2862,
																	"src": "25349:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25341:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2871,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "25341:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25341:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "25333:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2869,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25333:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 2875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25333:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25318:52:12"
											},
											{
												"assignments": [
													2878,
													2880
												],
												"declarations": [
													{
														"constant": false,
														"id": 2878,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "25390:19:12",
														"nodeType": "VariableDeclaration",
														"scope": 3004,
														"src": "25382:27:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2877,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25382:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2880,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "25419:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 3004,
														"src": "25411:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2879,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25411:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2884,
												"initialValue": {
													"arguments": [
														{
															"id": 2882,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2856,
															"src": "25458:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2881,
														"name": "_getApprovedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2682,
														"src": "25438:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 2883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25438:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25381:85:12"
											},
											{
												"condition": {
													"id": 2885,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2858,
													"src": "25481:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2905,
												"nodeType": "IfStatement",
												"src": "25477:306:12",
												"trueBody": {
													"id": 2904,
													"nodeType": "Block",
													"src": "25496:287:12",
													"statements": [
														{
															"condition": {
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "25599:63:12",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 2887,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "25619:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2888,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2868,
																			"src": "25636:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2889,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3186,
																				"src": "25642:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25642:19:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2886,
																		"name": "_isOwnerOrApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2696,
																		"src": "25600:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 2891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25600:62:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2903,
															"nodeType": "IfStatement",
															"src": "25595:177:12",
															"trueBody": {
																"condition": {
																	"id": 2898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "25684:44:12",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2894,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2868,
																				"src": "25702:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2895,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3186,
																					"src": "25708:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "25708:19:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2893,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2278,
																			"src": "25685:16:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25685:43:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 2902,
																"nodeType": "IfStatement",
																"src": "25680:92:12",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2899,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3224,
																			"src": "25737:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25737:35:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2901,
																	"nodeType": "RevertStatement",
																	"src": "25730:42:12"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2907,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "25815:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25829:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25821:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2908,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25821:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25821:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2912,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2856,
															"src": "25833:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25842:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2906,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3163,
														"src": "25793:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25793:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2915,
												"nodeType": "ExpressionStatement",
												"src": "25793:51:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "25916:181:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25949:138:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "26050:19:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26071:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "26043:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26043:30:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26043:30:12"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "25933:15:12"
															},
															"nodeType": "YulIf",
															"src": "25930:157:12"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2880,
														"isOffset": false,
														"isSlot": false,
														"src": "25933:15:12",
														"valueSize": 1
													},
													{
														"declaration": 2878,
														"isOffset": false,
														"isSlot": false,
														"src": "26050:19:12",
														"valueSize": 1
													}
												],
												"id": 2916,
												"nodeType": "InlineAssembly",
												"src": "25907:190:12"
											},
											{
												"id": 2980,
												"nodeType": "UncheckedBlock",
												"src": "26364:1540:12",
												"statements": [
													{
														"expression": {
															"id": 2926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2917,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "26675:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2919,
																"indexExpression": {
																	"id": 2918,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2868,
																	"src": "26694:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "26675:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 2920,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26704:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 2921,
																				"name": "BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1593,
																				"src": "26709:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26704:25:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2923,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26703:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26733:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26703:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26675:59:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2927,
														"nodeType": "ExpressionStatement",
														"src": "26675:59:12"
													},
													{
														"expression": {
															"id": 2947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2928,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "26965:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2930,
																"indexExpression": {
																	"id": 2929,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2856,
																	"src": "26983:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "26965:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2932,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2868,
																		"src": "27030:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2935,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2933,
																						"name": "BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1612,
																						"src": "27053:14:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 2934,
																						"name": "BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1620,
																						"src": "27070:24:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27053:41:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2936,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "27052:43:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2938,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2868,
																					"src": "27113:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2941,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27127:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2940,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "27119:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2939,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "27119:7:12",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2942,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27119:10:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2943,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2862,
																					"src": "27131:19:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2937,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3137,
																				"src": "27098:14:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27098:53:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27052:99:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2931,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "26994:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26994:171:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26965:200:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2948,
														"nodeType": "ExpressionStatement",
														"src": "26965:200:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2949,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2862,
																	"src": "27282:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2950,
																	"name": "BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "27304:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27282:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27332:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27282:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2979,
														"nodeType": "IfStatement",
														"src": "27278:616:12",
														"trueBody": {
															"id": 2978,
															"nodeType": "Block",
															"src": "27335:559:12",
															"statements": [
																{
																	"assignments": [
																		2955
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2955,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "27361:11:12",
																			"nodeType": "VariableDeclaration",
																			"scope": 2978,
																			"src": "27353:19:12",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2954,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "27353:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2959,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2956,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2856,
																			"src": "27375:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27385:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "27375:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "27353:33:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2960,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1654,
																				"src": "27506:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 2962,
																			"indexExpression": {
																				"id": 2961,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2955,
																				"src": "27524:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27506:30:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27540:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27506:35:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2977,
																	"nodeType": "IfStatement",
																	"src": "27502:378:12",
																	"trueBody": {
																		"id": 2976,
																		"nodeType": "Block",
																		"src": "27543:337:12",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2967,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2965,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2955,
																						"src": "27627:11:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2966,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1644,
																						"src": "27642:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27627:28:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2975,
																				"nodeType": "IfStatement",
																				"src": "27623:239:12",
																				"trueBody": {
																					"id": 2974,
																					"nodeType": "Block",
																					"src": "27657:205:12",
																					"statements": [
																						{
																							"expression": {
																								"id": 2972,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 2968,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1654,
																										"src": "27787:17:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 2970,
																									"indexExpression": {
																										"id": 2969,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2955,
																										"src": "27805:11:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "27787:30:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 2971,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2862,
																									"src": "27820:19:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "27787:52:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2973,
																							"nodeType": "ExpressionStatement",
																							"src": "27787:52:12"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2982,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "27928:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27942:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27934:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2983,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27934:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27934:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2987,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2856,
															"src": "27946:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2981,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3274,
														"src": "27919:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27919:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2989,
												"nodeType": "EmitStatement",
												"src": "27914:40:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2991,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "27985:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27999:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27991:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2992,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27991:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27991:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2996,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2856,
															"src": "28003:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28012:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2990,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3176,
														"src": "27964:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27964:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2999,
												"nodeType": "ExpressionStatement",
												"src": "27964:50:12"
											},
											{
												"id": 3003,
												"nodeType": "UncheckedBlock",
												"src": "28113:49:12",
												"statements": [
													{
														"expression": {
															"id": 3001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "28137:14:12",
															"subExpression": {
																"id": 3000,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "28137:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3002,
														"nodeType": "ExpressionStatement",
														"src": "28137:14:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2854,
										"nodeType": "StructuredDocumentation",
										"src": "24960:206:12",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 3005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "25180:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25194:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3005,
												"src": "25186:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25186:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "25208:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 3005,
												"src": "25203:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25203:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25185:37:12"
									},
									"returnParameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25240:0:12"
									},
									"scope": 3197,
									"src": "25171:2997:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3059,
										"nodeType": "Block",
										"src": "28813:533:12",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 3040,
															"nodeType": "Block",
															"src": "28962:96:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 3038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3032,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3030,
																			"src": "28983:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 3034,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3010,
																							"src": "29018:2:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 3033,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1576,
																						"src": "28993:24:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$1576_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 3035,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28993:28:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$1576",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 3036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1575,
																				"src": "28993:45:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 3037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "28993:54:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "28983:64:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 3018,
																	"id": 3039,
																	"nodeType": "Return",
																	"src": "28976:71:12"
																}
															]
														},
														"errorName": "",
														"id": 3041,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 3031,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 3030,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "28945:6:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 3041,
																	"src": "28938:13:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 3029,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "28938:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "28924:37:12"
														},
														"src": "28916:142:12"
													},
													{
														"block": {
															"id": 3056,
															"nodeType": "Block",
															"src": "29087:253:12",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3045,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3043,
																				"src": "29105:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 3046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "29105:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29122:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "29105:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 3054,
																		"nodeType": "Block",
																		"src": "29211:119:12",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "29238:78:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "29271:2:12",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "29275:6:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "29267:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "29267:15:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "29290:6:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "29284:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "29284:13:12"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "29260:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "29260:38:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "29260:38:12"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 3043,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "29275:6:12",
																						"valueSize": 1
																					},
																					{
																						"declaration": 3043,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "29290:6:12",
																						"valueSize": 1
																					}
																				],
																				"id": 3053,
																				"nodeType": "InlineAssembly",
																				"src": "29229:87:12"
																			}
																		]
																	},
																	"id": 3055,
																	"nodeType": "IfStatement",
																	"src": "29101:229:12",
																	"trueBody": {
																		"id": 3052,
																		"nodeType": "Block",
																		"src": "29125:80:12",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 3049,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3230,
																						"src": "29150:38:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 3050,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29150:40:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 3051,
																				"nodeType": "RevertStatement",
																				"src": "29143:47:12"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 3057,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 3044,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 3043,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "29079:6:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 3057,
																	"src": "29066:19:12",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 3042,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29066:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "29065:21:12"
														},
														"src": "29059:281:12"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3023,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3186,
																"src": "28873:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28873:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3025,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3008,
															"src": "28894:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3026,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3012,
															"src": "28900:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3027,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3014,
															"src": "28909:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3020,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3010,
																	"src": "28852:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3019,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1576,
																"src": "28827:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$1576_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 3021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28827:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$1576",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 3022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1575,
														"src": "28827:45:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 3028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28827:88:12",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 3058,
												"nodeType": "TryStatement",
												"src": "28823:517:12"
											}
										]
									},
									"documentation": {
										"id": 3006,
										"nodeType": "StructuredDocumentation",
										"src": "28174:470:12",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 3060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "28658:30:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28706:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "28698:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28698:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28728:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "28720:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28720:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3012,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28748:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "28740:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28740:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "28778:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "28765:18:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3013,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28765:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28688:101:12"
									},
									"returnParameters": {
										"id": 3018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "28807:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28807:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28806:6:12"
									},
									"scope": 3197,
									"src": "28649:697:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3103,
										"nodeType": "Block",
										"src": "29508:445:12",
										"statements": [
											{
												"assignments": [
													3069
												],
												"declarations": [
													{
														"constant": false,
														"id": 3069,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "29526:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3103,
														"src": "29518:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3068,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29518:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3073,
												"initialValue": {
													"baseExpression": {
														"id": 3070,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1654,
														"src": "29535:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 3072,
													"indexExpression": {
														"id": 3071,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3063,
														"src": "29553:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29535:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29518:41:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3074,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3069,
														"src": "29573:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29583:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29573:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3080,
												"nodeType": "IfStatement",
												"src": "29569:61:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3077,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3242,
															"src": "29593:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29593:37:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3079,
													"nodeType": "RevertStatement",
													"src": "29586:44:12"
												}
											},
											{
												"assignments": [
													3082
												],
												"declarations": [
													{
														"constant": false,
														"id": 3082,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "29648:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 3103,
														"src": "29640:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3081,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29640:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3083,
												"nodeType": "VariableDeclarationStatement",
												"src": "29640:23:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "29752:52:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29766:28:12",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "29785:9:12"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "29766:15:12"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3065,
														"isOffset": false,
														"isSlot": false,
														"src": "29785:9:12",
														"valueSize": 1
													},
													{
														"declaration": 3082,
														"isOffset": false,
														"isSlot": false,
														"src": "29766:15:12",
														"valueSize": 1
													}
												],
												"id": 3084,
												"nodeType": "InlineAssembly",
												"src": "29743:61:12"
											},
											{
												"expression": {
													"id": 3095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3085,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3069,
														"src": "29813:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3086,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3069,
																		"src": "29823:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 3087,
																		"name": "BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "29832:29:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29823:38:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3089,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "29822:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3090,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3082,
																		"src": "29866:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 3091,
																		"name": "BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1623,
																		"src": "29885:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29866:36:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3093,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "29865:38:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29822:81:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29813:90:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3096,
												"nodeType": "ExpressionStatement",
												"src": "29813:90:12"
											},
											{
												"expression": {
													"id": 3101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3097,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1654,
															"src": "29913:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3099,
														"indexExpression": {
															"id": 3098,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3063,
															"src": "29931:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29913:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3100,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3069,
														"src": "29940:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29913:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3102,
												"nodeType": "ExpressionStatement",
												"src": "29913:33:12"
											}
										]
									},
									"documentation": {
										"id": 3061,
										"nodeType": "StructuredDocumentation",
										"src": "29352:84:12",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 3104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "29450:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3063,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "29474:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "29466:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29466:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "29488:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "29481:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 3064,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "29481:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29465:33:12"
									},
									"returnParameters": {
										"id": 3067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29508:0:12"
									},
									"scope": 3197,
									"src": "29441:512:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3136,
										"nodeType": "Block",
										"src": "30239:162:12",
										"statements": [
											{
												"assignments": [
													3117
												],
												"declarations": [
													{
														"constant": false,
														"id": 3117,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "30256:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 3136,
														"src": "30249:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 3116,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "30249:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3124,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3120,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3111,
																"src": "30275:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 3121,
																"name": "BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1623,
																"src": "30298:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30275:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "30268:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 3118,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "30268:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 3123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30268:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30249:67:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3128,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3107,
																		"src": "30352:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3129,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3109,
																		"src": "30358:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3130,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3117,
																		"src": "30362:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 3127,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3150,
																	"src": "30341:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30341:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 3126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30333:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3125,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30333:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 3132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30333:40:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 3133,
														"name": "BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "30377:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30333:61:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3115,
												"id": 3135,
												"nodeType": "Return",
												"src": "30326:68:12"
											}
										]
									},
									"documentation": {
										"id": 3105,
										"nodeType": "StructuredDocumentation",
										"src": "29959:135:12",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 3137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "30108:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30140:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "30132:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30132:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30162:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "30154:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30154:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "30182:19:12",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "30174:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30174:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30122:85:12"
									},
									"returnParameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "30230:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30230:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30229:9:12"
									},
									"scope": 3197,
									"src": "30099:302:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3149,
										"nodeType": "Block",
										"src": "31102:2:12",
										"statements": []
									},
									"documentation": {
										"id": 3138,
										"nodeType": "StructuredDocumentation",
										"src": "30407:549:12",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 3150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "30970:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3140,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30998:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "30990:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30990:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31020:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "31012:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31012:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3144,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "31039:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "31032:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 3143,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "31032:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30980:82:12"
									},
									"returnParameters": {
										"id": 3148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "31094:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 3146,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "31094:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31093:8:12"
									},
									"scope": 3197,
									"src": "30961:143:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3162,
										"nodeType": "Block",
										"src": "31894:2:12",
										"statements": []
									},
									"documentation": {
										"id": 3151,
										"nodeType": "StructuredDocumentation",
										"src": "31110:627:12",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred.\n This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 3163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "31751:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31790:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "31782:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31782:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3155,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31812:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "31804:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31804:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "31832:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "31824:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31824:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3159,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31862:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "31854:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31854:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31772:104:12"
									},
									"returnParameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31894:0:12"
									},
									"scope": 3197,
									"src": "31742:154:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3175,
										"nodeType": "Block",
										"src": "32688:2:12",
										"statements": []
									},
									"documentation": {
										"id": 3164,
										"nodeType": "StructuredDocumentation",
										"src": "31902:630:12",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred.\n This includes minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 3176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "32546:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3166,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32584:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "32576:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32576:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3168,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32606:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "32598:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32598:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "32626:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "32618:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32618:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3172,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32656:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "32648:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32648:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32566:104:12"
									},
									"returnParameters": {
										"id": 3174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32688:0:12"
									},
									"scope": 3197,
									"src": "32537:153:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3185,
										"nodeType": "Block",
										"src": "32943:34:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3182,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "32960:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "32960:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3181,
												"id": 3184,
												"nodeType": "Return",
												"src": "32953:17:12"
											}
										]
									},
									"documentation": {
										"id": 3177,
										"nodeType": "StructuredDocumentation",
										"src": "32696:173:12",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 3186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "32883:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32900:2:12"
									},
									"returnParameters": {
										"id": 3181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3186,
												"src": "32934:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32934:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:9:12"
									},
									"scope": 3197,
									"src": "32874:103:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3195,
										"nodeType": "Block",
										"src": "33154:1844:12",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "33173:1819:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33524:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33541:4:12",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "33535:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33535:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33548:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33531:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "33531:21:12"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "33524:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33631:4:12",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "33637:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33624:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "33624:17:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33624:17:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "33729:14:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "33740:3:12"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "33733:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34620:144:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "34679:18:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34690:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34695:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "34686:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34686:11:12"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "34679:3:12"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34722:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "34731:2:12",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "34739:4:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "34745:2:12",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "34735:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "34735:13:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "34727:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "34727:22:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "34714:7:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34714:36:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34714:36:12"
																	}
																]
															},
															"condition": {
																"name": "temp",
																"nodeType": "YulIdentifier",
																"src": "34509:4:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "34514:105:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "34584:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "34596:4:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34602:2:12",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "34592:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34592:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "34584:4:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "34086:422:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "34176:17:12",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "34188:5:12"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "34180:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "34300:18:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34311:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34316:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "34307:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34307:11:12"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "34300:3:12"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34428:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "34437:2:12",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "34445:4:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "34451:2:12",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "34441:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "34441:13:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "34433:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "34433:22:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "34420:7:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34420:36:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34420:36:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "34473:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "34485:4:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34491:2:12",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "34481:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34481:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "34473:4:12"
																			}
																		]
																	}
																]
															},
															"src": "34082:682:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34778:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "34796:3:12"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34801:3:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "34792:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "34792:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "34782:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34898:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34909:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34914:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "34905:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "34905:12:12"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "34898:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34970:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "34975:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34963:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "34963:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34963:19:12"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "33524:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "33637:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "33740:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "34300:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "34311:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "34428:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "34679:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "34690:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "34722:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "34801:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "34898:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "34909:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3192,
														"isOffset": false,
														"isSlot": false,
														"src": "34970:3:12",
														"valueSize": 1
													},
													{
														"declaration": 3189,
														"isOffset": false,
														"isSlot": false,
														"src": "34188:5:12",
														"valueSize": 1
													}
												],
												"id": 3194,
												"nodeType": "InlineAssembly",
												"src": "33164:1828:12"
											}
										]
									},
									"documentation": {
										"id": 3187,
										"nodeType": "StructuredDocumentation",
										"src": "32983:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 3196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "33087:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33105:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3196,
												"src": "33097:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33097:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33096:15:12"
									},
									"returnParameters": {
										"id": 3193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3192,
												"mutability": "mutable",
												"name": "ptr",
												"nameLocation": "33149:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3196,
												"src": "33135:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33135:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33134:19:12"
									},
									"scope": 3197,
									"src": "33078:1920:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3198,
							"src": "885:34115:12",
							"usedErrors": [
								3203,
								3206,
								3209,
								3212,
								3215,
								3218,
								3221,
								3224,
								3227,
								3230,
								3233,
								3236,
								3239,
								3242
							]
						}
					],
					"src": "84:34917:12"
				},
				"id": 12
			},
			"erc721a/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							3406
						]
					},
					"id": 3407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3199,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3200,
								"nodeType": "StructuredDocumentation",
								"src": "109:59:13",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 3406,
							"linearizedBaseContracts": [
								3406
							],
							"name": "IERC721A",
							"nameLocation": "179:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3201,
										"nodeType": "StructuredDocumentation",
										"src": "194:76:13",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 3203,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "281:33:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:2:13"
									},
									"src": "275:42:13"
								},
								{
									"documentation": {
										"id": 3204,
										"nodeType": "StructuredDocumentation",
										"src": "323:44:13",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 3206,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "378:32:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:13"
									},
									"src": "372:41:13"
								},
								{
									"documentation": {
										"id": 3207,
										"nodeType": "StructuredDocumentation",
										"src": "419:66:13",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 3209,
									"name": "ApproveToCaller",
									"nameLocation": "496:15:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:13"
									},
									"src": "490:24:13"
								},
								{
									"documentation": {
										"id": 3210,
										"nodeType": "StructuredDocumentation",
										"src": "520:65:13",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 3212,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "596:26:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:2:13"
									},
									"src": "590:35:13"
								},
								{
									"documentation": {
										"id": 3213,
										"nodeType": "StructuredDocumentation",
										"src": "631:51:13",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 3215,
									"name": "MintToZeroAddress",
									"nameLocation": "693:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:2:13"
									},
									"src": "687:26:13"
								},
								{
									"documentation": {
										"id": 3216,
										"nodeType": "StructuredDocumentation",
										"src": "719:72:13",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 3218,
									"name": "MintZeroQuantity",
									"nameLocation": "802:16:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:2:13"
									},
									"src": "796:25:13"
								},
								{
									"documentation": {
										"id": 3219,
										"nodeType": "StructuredDocumentation",
										"src": "827:44:13",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 3221,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "882:29:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:2:13"
									},
									"src": "876:38:13"
								},
								{
									"documentation": {
										"id": 3222,
										"nodeType": "StructuredDocumentation",
										"src": "920:76:13",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 3224,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1007:33:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:13"
									},
									"src": "1001:42:13"
								},
								{
									"documentation": {
										"id": 3225,
										"nodeType": "StructuredDocumentation",
										"src": "1049:53:13",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 3227,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1113:26:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:2:13"
									},
									"src": "1107:35:13"
								},
								{
									"documentation": {
										"id": 3228,
										"nodeType": "StructuredDocumentation",
										"src": "1148:109:13",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 3230,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1268:38:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:13"
									},
									"src": "1262:47:13"
								},
								{
									"documentation": {
										"id": 3231,
										"nodeType": "StructuredDocumentation",
										"src": "1315:55:13",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 3233,
									"name": "TransferToZeroAddress",
									"nameLocation": "1381:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:2:13"
									},
									"src": "1375:30:13"
								},
								{
									"documentation": {
										"id": 3234,
										"nodeType": "StructuredDocumentation",
										"src": "1411:44:13",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 3236,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1466:27:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:2:13"
									},
									"src": "1460:36:13"
								},
								{
									"documentation": {
										"id": 3237,
										"nodeType": "StructuredDocumentation",
										"src": "1502:79:13",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 3239,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1592:31:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1623:2:13"
									},
									"src": "1586:40:13"
								},
								{
									"documentation": {
										"id": 3240,
										"nodeType": "StructuredDocumentation",
										"src": "1632:83:13",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 3242,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1726:35:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1761:2:13"
									},
									"src": "1720:44:13"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 3251,
									"members": [
										{
											"constant": false,
											"id": 3244,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1847:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 3251,
											"src": "1839:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3243,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1839:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3246,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1960:14:13",
											"nodeType": "VariableDeclaration",
											"scope": 3251,
											"src": "1953:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 3245,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1953:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3248,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2035:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 3251,
											"src": "2030:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3247,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2030:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3250,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2150:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 3251,
											"src": "2143:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 3249,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2143:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1777:14:13",
									"nodeType": "StructDefinition",
									"scope": 3406,
									"src": "1770:396:13",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 3252,
										"nodeType": "StructuredDocumentation",
										"src": "2172:193:13",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 3257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2379:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:2:13"
									},
									"returnParameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "2416:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2416:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:9:13"
									},
									"scope": 3406,
									"src": "2370:55:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3258,
										"nodeType": "StructuredDocumentation",
										"src": "2534:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 3265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2888:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3260,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2913:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 3265,
												"src": "2906:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3259,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2906:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:20:13"
									},
									"returnParameters": {
										"id": 3264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3265,
												"src": "2949:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2949:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:6:13"
									},
									"scope": 3406,
									"src": "2879:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3266,
										"nodeType": "StructuredDocumentation",
										"src": "3064:88:13",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 3274,
									"name": "Transfer",
									"nameLocation": "3163:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3268,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3188:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3274,
												"src": "3172:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3270,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3210:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 3274,
												"src": "3194:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3272,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3230:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3274,
												"src": "3214:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:67:13"
									},
									"src": "3157:82:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3275,
										"nodeType": "StructuredDocumentation",
										"src": "3245:94:13",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 3283,
									"name": "Approval",
									"nameLocation": "3350:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3277,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3375:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3283,
												"src": "3359:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3279,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3398:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3283,
												"src": "3382:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3281,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3424:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3283,
												"src": "3408:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:74:13"
									},
									"src": "3344:89:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3284,
										"nodeType": "StructuredDocumentation",
										"src": "3439:117:13",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 3292,
									"name": "ApprovalForAll",
									"nameLocation": "3567:14:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3286,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3598:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "3582:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3288,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3621:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "3605:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3605:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3290,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3636:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "3631:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3631:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:64:13"
									},
									"src": "3561:85:13"
								},
								{
									"documentation": {
										"id": 3293,
										"nodeType": "StructuredDocumentation",
										"src": "3652:76:13",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 3300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3742:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3295,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3760:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "3752:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:15:13"
									},
									"returnParameters": {
										"id": 3299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3298,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3798:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "3790:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:17:13"
									},
									"scope": 3406,
									"src": "3733:74:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3301,
										"nodeType": "StructuredDocumentation",
										"src": "3813:131:13",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 3308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3958:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3303,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3974:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "3966:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3965:17:13"
									},
									"returnParameters": {
										"id": 3307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3306,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "4006:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:15:13"
									},
									"scope": 3406,
									"src": "3949:72:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3309,
										"nodeType": "StructuredDocumentation",
										"src": "4027:556:13",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 3320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4597:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3311,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4631:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "4623:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3313,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4653:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "4645:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3315,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4673:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "4665:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4705:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "4690:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4690:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4613:102:13"
									},
									"returnParameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4724:0:13"
									},
									"scope": 3406,
									"src": "4588:137:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3321,
										"nodeType": "StructuredDocumentation",
										"src": "4731:690:13",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 3330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5435:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3323,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5469:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3330,
												"src": "5461:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5461:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3325,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5491:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 3330,
												"src": "5483:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3327,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5511:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3330,
												"src": "5503:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5503:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5451:73:13"
									},
									"returnParameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5533:0:13"
									},
									"scope": 3406,
									"src": "5426:108:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3331,
										"nodeType": "StructuredDocumentation",
										"src": "5540:504:13",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 3340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6058:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6088:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3340,
												"src": "6080:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6080:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3335,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6110:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 3340,
												"src": "6102:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6102:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3337,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6130:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3340,
												"src": "6122:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6122:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6070:73:13"
									},
									"returnParameters": {
										"id": 3339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6152:0:13"
									},
									"scope": 3406,
									"src": "6049:104:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3341,
										"nodeType": "StructuredDocumentation",
										"src": "6159:452:13",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 3348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6625:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3343,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6641:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 3348,
												"src": "6633:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6633:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3345,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6653:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3348,
												"src": "6645:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6645:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6632:29:13"
									},
									"returnParameters": {
										"id": 3347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6670:0:13"
									},
									"scope": 3406,
									"src": "6616:55:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3349,
										"nodeType": "StructuredDocumentation",
										"src": "6677:309:13",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 3356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7000:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3351,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7026:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3356,
												"src": "7018:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7018:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3353,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7041:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 3356,
												"src": "7036:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7036:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7017:34:13"
									},
									"returnParameters": {
										"id": 3355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7060:0:13"
									},
									"scope": 3406,
									"src": "6991:70:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3357,
										"nodeType": "StructuredDocumentation",
										"src": "7067:139:13",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 3364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7220:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3359,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7240:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "7232:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7231:17:13"
									},
									"returnParameters": {
										"id": 3363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3362,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7280:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "7272:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:18:13"
									},
									"scope": 3406,
									"src": "7211:79:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3365,
										"nodeType": "StructuredDocumentation",
										"src": "7296:138:13",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 3374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7448:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3367,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7473:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "7465:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7465:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3369,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7488:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "7480:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7480:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7464:33:13"
									},
									"returnParameters": {
										"id": 3373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "7521:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7521:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7520:6:13"
									},
									"scope": 3406,
									"src": "7439:88:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3375,
										"nodeType": "StructuredDocumentation",
										"src": "7640:58:13",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 3380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7712:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7716:2:13"
									},
									"returnParameters": {
										"id": 3379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3380,
												"src": "7742:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3377,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7742:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7741:15:13"
									},
									"scope": 3406,
									"src": "7703:54:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3381,
										"nodeType": "StructuredDocumentation",
										"src": "7763:60:13",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 3386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7837:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7843:2:13"
									},
									"returnParameters": {
										"id": 3385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3386,
												"src": "7869:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3383,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7869:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7868:15:13"
									},
									"scope": 3406,
									"src": "7828:56:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3387,
										"nodeType": "StructuredDocumentation",
										"src": "7890:90:13",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 3394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "7994:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3389,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8011:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3394,
												"src": "8003:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8003:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8002:17:13"
									},
									"returnParameters": {
										"id": 3393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3394,
												"src": "8043:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3391,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8043:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8042:15:13"
									},
									"scope": 3406,
									"src": "7985:73:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3395,
										"nodeType": "StructuredDocumentation",
										"src": "8168:203:13",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n as defined in the ERC2309 standard. See `_mintERC2309` for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 3405,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8382:19:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3397,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8418:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 3405,
												"src": "8402:27:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3399,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8439:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 3405,
												"src": "8431:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8431:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3401,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8466:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3405,
												"src": "8450:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8450:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3403,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8488:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 3405,
												"src": "8472:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8472:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8401:90:13"
									},
									"src": "8376:116:13"
								}
							],
							"scope": 3407,
							"src": "169:8325:13",
							"usedErrors": [
								3203,
								3206,
								3209,
								3212,
								3215,
								3218,
								3221,
								3224,
								3227,
								3230,
								3233,
								3236,
								3239,
								3242
							]
						}
					],
					"src": "84:8411:13"
				},
				"id": 13
			},
			"erc721a/contracts/extensions/ERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/ERC721ABurnable.sol",
					"exportedSymbols": {
						"ERC721A": [
							3197
						],
						"ERC721ABurnable": [
							3429
						],
						"ERC721A__IERC721Receiver": [
							1576
						],
						"IERC721A": [
							3406
						],
						"IERC721ABurnable": [
							3442
						]
					},
					"id": 3430,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3408,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:14"
						},
						{
							"absolutePath": "erc721a/contracts/extensions/IERC721ABurnable.sol",
							"file": "./IERC721ABurnable.sol",
							"id": 3409,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3430,
							"sourceUnit": 3443,
							"src": "109:32:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/ERC721A.sol",
							"file": "../ERC721A.sol",
							"id": 3410,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3430,
							"sourceUnit": 3198,
							"src": "142:24:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3412,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3197,
										"src": "313:7:14"
									},
									"id": 3413,
									"nodeType": "InheritanceSpecifier",
									"src": "313:7:14"
								},
								{
									"baseName": {
										"id": 3414,
										"name": "IERC721ABurnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3442,
										"src": "322:16:14"
									},
									"id": 3415,
									"nodeType": "InheritanceSpecifier",
									"src": "322:16:14"
								}
							],
							"canonicalName": "ERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3411,
								"nodeType": "StructuredDocumentation",
								"src": "168:107:14",
								"text": " @title ERC721A Burnable Token\n @dev ERC721A Token that can be irreversibly burned (destroyed)."
							},
							"fullyImplemented": false,
							"id": 3429,
							"linearizedBaseContracts": [
								3429,
								3442,
								3197,
								3406
							],
							"name": "ERC721ABurnable",
							"nameLocation": "294:15:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										3441
									],
									"body": {
										"id": 3427,
										"nodeType": "Block",
										"src": "568:37:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3423,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3418,
															"src": "584:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "593:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3422,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2853,
															3005
														],
														"referencedDeclaration": 3005,
														"src": "578:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 3425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "578:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3426,
												"nodeType": "ExpressionStatement",
												"src": "578:20:14"
											}
										]
									},
									"documentation": {
										"id": 3416,
										"nodeType": "StructuredDocumentation",
										"src": "345:163:14",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 3428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "522:4:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3420,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "559:8:14"
									},
									"parameters": {
										"id": 3419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3418,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "535:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3428,
												"src": "527:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:17:14"
									},
									"returnParameters": {
										"id": 3421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:0:14"
									},
									"scope": 3429,
									"src": "513:92:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3430,
							"src": "276:331:14",
							"usedErrors": [
								3203,
								3206,
								3209,
								3212,
								3215,
								3218,
								3221,
								3224,
								3227,
								3230,
								3233,
								3236,
								3239,
								3242
							]
						}
					],
					"src": "84:524:14"
				},
				"id": 14
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/IERC721ABurnable.sol",
					"exportedSymbols": {
						"IERC721A": [
							3406
						],
						"IERC721ABurnable": [
							3442
						]
					},
					"id": 3443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3431,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:15"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 3432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3443,
							"sourceUnit": 3407,
							"src": "109:25:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3434,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3406,
										"src": "234:8:15"
									},
									"id": 3435,
									"nodeType": "InheritanceSpecifier",
									"src": "234:8:15"
								}
							],
							"canonicalName": "IERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3433,
								"nodeType": "StructuredDocumentation",
								"src": "136:67:15",
								"text": " @dev Interface of an ERC721ABurnable compliant contract."
							},
							"fullyImplemented": false,
							"id": 3442,
							"linearizedBaseContracts": [
								3442,
								3406
							],
							"name": "IERC721ABurnable",
							"nameLocation": "214:16:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3436,
										"nodeType": "StructuredDocumentation",
										"src": "249:163:15",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 3441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "426:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3438,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "439:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3441,
												"src": "431:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:17:15"
									},
									"returnParameters": {
										"id": 3440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:0:15"
									},
									"scope": 3442,
									"src": "417:40:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3443,
							"src": "204:255:15",
							"usedErrors": [
								3203,
								3206,
								3209,
								3212,
								3215,
								3218,
								3221,
								3224,
								3227,
								3230,
								3233,
								3236,
								3239,
								3242
							]
						}
					],
					"src": "84:376:15"
				},
				"id": 15
			}
		}
	}
}