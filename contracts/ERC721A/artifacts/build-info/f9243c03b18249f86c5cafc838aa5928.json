{
	"id": "f9243c03b18249f86c5cafc838aa5928",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC721A/MintNagaKids.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./INagaKid.sol\";\r\nimport \"./VerifySignature.sol\";\r\n\r\ncontract MintNagaKids is Ownable, ReentrancyGuard, VerifySignature {\r\n\r\n    bytes32 public constant WHITELIST_MINT_ROUND = keccak256(\"WHITELIST_MINT_ROUND\"); // 0x68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba\r\n    bytes32 public constant NAGA_HOLDER_MINT_ROUND = keccak256(\"NAGA_HOLDER_MINT_ROUND\"); // 0xb3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db3\r\n  \r\n    bytes32 public constant DEFAULT = 0x0000000000000000000000000000000000000000000000000000000000000000;\r\n    \r\n    bytes32 public constant WITHDRAW_ROLE = keccak256(\"WITHDRAW_ROLE\");\r\n\r\n    INagaKid public nagaKidContract;\r\n    bytes32 public currentMintRound;\r\n    bytes32 public merkleRoot;\r\n\r\n    bool public isPublicMintOpen = false;\r\n    bool public isPrivateMintOpen = false;\r\n\r\n    address public signer;\r\n\r\n    mapping(address => mapping(bytes32 => bool)) internal _isUserMinted;\r\n    mapping(address => mapping(bytes32 => uint256)) internal _userMintedAmount;\r\n    mapping(address => bool) internal _isPublicMinted;\r\n\r\n    // Events\r\n    event PrivateMinted(address indexed user, uint256 amount, uint256 timestamp);\r\n    event PublicMinted(address indexed user, uint256 amount, uint256 timestamp);\r\n    event NagaKidContractChanged(address nagaKidBefore, address nagaKidAfter);\r\n    event MerkleRootChanged(bytes32 merkleRootBefore, bytes32 merkleRootAfter);\r\n    event RoundChanged(bytes32 roundBefore, bytes32 roundAfter);\r\n    event SignerChanged(address signerBefore,address signerAfter);\r\n    event Withdraw(address to, uint256 balanceOFContract , uint256 timestamp);\r\n    event WithdrawCurrency(address to,address currency,uint256 balanceOfContract,uint256 timestamp);\r\n    event WithdrawNFT(address to,address NFT,uint256 tokenId, uint256 timestamp);\r\n\r\n    constructor(INagaKid _nagaKidContract,address _signer, bytes32 _merkleRoot) {\r\n        \r\n        setNagaKidContract(_nagaKidContract);\r\n        setMerkleRoot(_merkleRoot);\r\n        setSigner(_signer);\r\n\r\n    }\r\n\r\n    function setNagaKidContract(INagaKid _nagaKid) public onlyOwner {\r\n        address nagaKidBefore = address(nagaKidContract);\r\n        nagaKidContract = _nagaKid;\r\n        address nagaKidAfter = address(_nagaKid);\r\n\r\n        emit NagaKidContractChanged(nagaKidBefore, nagaKidAfter);\r\n    }\r\n\r\n    function setRound(bytes32 _round) public onlyOwner {\r\n        bytes32 _roundBefore = currentMintRound;\r\n        currentMintRound = _round;\r\n\r\n        emit RoundChanged(_roundBefore, _round);\r\n    }\r\n\r\n    function setSigner(address _signer) public onlyOwner {\r\n        address _signerBefore = signer;\r\n        signer = _signer;\r\n\r\n        emit SignerChanged(_signerBefore, _signer);\r\n    }\r\n\r\n    function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {\r\n        bytes32 _merkleRootBefore = merkleRoot;\r\n        merkleRoot = _merkleRoot;\r\n\r\n        emit MerkleRootChanged(_merkleRootBefore, _merkleRoot);\r\n    }\r\n\r\n    function allowlistMint(bytes32[] calldata _proof, uint256 _amount, bytes32 _round) public payable nonReentrant {\r\n        require(isPrivateMintOpen == true,\"Private mint is not open.\");\r\n        require(_round != DEFAULT,\"Mint is not approved.\");\r\n        require(currentMintRound == _round, \"Contract are not in this minting round.\");\r\n        require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\");\r\n        require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\");\r\n        require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\");\r\n        require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\");\r\n\r\n        _isUserMinted[msg.sender][_round] = true;\r\n        _userMintedAmount[msg.sender][_round] += _amount;\r\n\r\n        nagaKidContract.safeMint(msg.sender,_amount);\r\n\r\n        emit PrivateMinted(msg.sender, _amount, block.timestamp);\r\n    }\r\n\r\n    function publicMint(bytes calldata _sig) public payable nonReentrant {\r\n\r\n        require(isPublicMintOpen == true, \"Public mint is not open.\");\r\n        require(tx.origin == msg.sender, \"haha Contract can't call me\");\r\n        require(isPublicMinted(msg.sender) != true, \"You are already minted.\");\r\n        // require(getTotalSupply() + 1 < 1111,\"Over Supply Amount\");\r\n        require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\");\r\n        require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\");\r\n\r\n        // publicMint User can get only 1 //\r\n        uint256 _amount = 1; \r\n\r\n        _isPublicMinted[msg.sender] = true;\r\n        nagaKidContract.safeMint(msg.sender,_amount);\r\n        \r\n        emit PublicMinted(msg.sender,_amount,block.timestamp);\r\n\r\n    }\r\n\r\n    function isPublicMinted(address _addr) public view returns(bool){\r\n        return _isPublicMinted[_addr];\r\n    }\r\n\r\n    function withdraw(address _to) public onlyOwner {\r\n        uint balanceOFContract = address(this).balance;\r\n        require(balanceOFContract > 0, \"Insufficient Balance\");\r\n        (bool status,) = _to.call{value: balanceOFContract }(\"\");\r\n        require(status);\r\n\r\n        emit Withdraw(_to, balanceOFContract ,block.timestamp);\r\n    }\r\n\r\n    function withdrawCurrency(address _to,address _currency) public onlyOwner {\r\n        uint balanceOfContract = IERC20(_currency).balanceOf(address(this));\r\n        require(balanceOfContract > 0, \"Insufficient Balance\");\r\n        IERC20(_currency).transfer(_to, balanceOfContract);\r\n        \r\n        emit WithdrawCurrency(_to,_currency,balanceOfContract,block.timestamp);\r\n    }\r\n\r\n    function withdrawNFT(address _to,address _NFT,uint256 _tokenId) public onlyOwner {\r\n        require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\");\r\n\r\n        IERC721(_NFT).safeTransferFrom(address(this), _to, _tokenId);\r\n        \r\n        emit WithdrawNFT(_to,_NFT,_tokenId,block.timestamp);\r\n    }\r\n\r\n    function isUserMinted(address _user,bytes32 _round) public view returns(bool) {\r\n        return _isUserMinted[_user][_round];\r\n    }\r\n\r\n    function userMintedAmount(address _user,bytes32 _round) public view returns(uint256) {\r\n        return _userMintedAmount[_user][_round];\r\n    }\r\n\r\n    function getTotalSupply() public view returns (uint256) {\r\n        return nagaKidContract.totalSupply();\r\n    }\r\n\r\n    function getMaxSupply() public view returns (uint256) {\r\n        return nagaKidContract.maxSupply();\r\n    }\r\n\r\n}\r\n"
			},
			"ERC721A/VerifySignature.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\ncontract VerifySignature {\r\n    \r\n    function getMessageHash(\r\n        address _user\r\n    ) public view returns (bytes32) {\r\n        return keccak256(abi.encodePacked(_user, address(this)));\r\n    }\r\n\r\n    function getEthSignedMessageHash(bytes32 _messageHash)\r\n        public\r\n        pure\r\n        returns (bytes32)\r\n    {\r\n        /*\r\n        Signature is produced by signing a keccak256 hash with the following format:\r\n        \"\\x19Ethereum Signed Message\\n\" + len(msg) + msg\r\n        */\r\n        return\r\n            keccak256(\r\n                abi.encodePacked(\r\n                    \"\\x19Ethereum Signed Message:\\n32\",\r\n                    _messageHash\r\n                )\r\n            );\r\n    }\r\n\r\n    function verify(\r\n        address _signer,\r\n        address _user,\r\n        bytes memory signature\r\n    ) public view returns (bool) {\r\n        bytes32 messageHash = getMessageHash(_user);\r\n        bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\r\n\r\n        return recoverSigner(ethSignedMessageHash, signature) == _signer;\r\n    }\r\n\r\n    function recoverSigner(\r\n        bytes32 _ethSignedMessageHash,\r\n        bytes memory _signature\r\n    ) public pure returns (address) {\r\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\r\n\r\n        return ecrecover(_ethSignedMessageHash, v, r, s);\r\n    }\r\n\r\n    function splitSignature(bytes memory sig)\r\n        public\r\n        pure\r\n        returns (\r\n            bytes32 r,\r\n            bytes32 s,\r\n            uint8 v\r\n        )\r\n    {\r\n        require(sig.length == 65, \"invalid signature length\");\r\n\r\n        assembly {\r\n            /*\r\n            First 32 bytes stores the length of the signature\r\n\r\n            add(sig, 32) = pointer of sig + 32\r\n            effectively, skips first 32 bytes of signature\r\n\r\n            mload(p) loads next 32 bytes starting at the memory address p into memory\r\n            */\r\n\r\n            // first 32 bytes, after the length prefix\r\n            r := mload(add(sig, 32))\r\n            // second 32 bytes\r\n            s := mload(add(sig, 64))\r\n            // final byte (first byte of the next 32 bytes)\r\n            v := byte(0, mload(add(sig, 96)))\r\n        }\r\n\r\n        // implicitly return (r, s, v)\r\n    }\r\n}"
			},
			"ERC721A/INagaKid.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"erc721a/contracts/IERC721A.sol\";\r\nimport \"erc721a/contracts/extensions/IERC721ABurnable.sol\";\r\nimport \"erc721a/contracts/extensions/IERC721AQueryable.sol\";\r\n\r\n\r\ninterface INagaKid is IERC721A,IERC721AQueryable {\r\n\r\n    function maxSupply() external view returns (uint256);\r\n    function isMinter(address minter) external view returns(bool);\r\n    function safeMint(address to,uint amount) external;\r\n    \r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Trees proofs.\n *\n * The proofs can be generated using the JavaScript library\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n *\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            bytes32 proofElement = proof[i];\n            if (computedHash <= proofElement) {\n                // Hash(current computed hash + current element of the proof)\n                computedHash = _efficientHash(computedHash, proofElement);\n            } else {\n                // Hash(current element of the proof + current computed hash)\n                computedHash = _efficientHash(proofElement, computedHash);\n            }\n        }\n        return computedHash;\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of an ERC721AQueryable compliant contract.\n */\ninterface IERC721AQueryable is IERC721A {\n    /**\n     * Invalid query range (`start` >= `stop`).\n     */\n    error InvalidQueryRange();\n\n    /**\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n     *\n     * If the `tokenId` is out of bounds:\n     *   - `addr` = `address(0)`\n     *   - `startTimestamp` = `0`\n     *   - `burned` = `false`\n     *\n     * If the `tokenId` is burned:\n     *   - `addr` = `<Address of owner before token was burned>`\n     *   - `startTimestamp` = `<Timestamp when token was burned>`\n     *   - `burned = `true`\n     *\n     * Otherwise:\n     *   - `addr` = `<Address of owner>`\n     *   - `startTimestamp` = `<Timestamp of start of ownership>`\n     *   - `burned = `false`\n     */\n    function explicitOwnershipOf(uint256 tokenId) external view returns (TokenOwnership memory);\n\n    /**\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n     * See {ERC721AQueryable-explicitOwnershipOf}\n     */\n    function explicitOwnershipsOf(uint256[] memory tokenIds) external view returns (TokenOwnership[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`,\n     * in the range [`start`, `stop`)\n     * (i.e. `start <= tokenId < stop`).\n     *\n     * This function allows for tokens to be queried if the collection\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n     *\n     * Requirements:\n     *\n     * - `start` < `stop`\n     */\n    function tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`.\n     *\n     * This function scans the ownership mapping and is O(totalSupply) in complexity.\n     * It is meant to be called off-chain.\n     *\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n     * multiple smaller scans if the collection is large enough to cause\n     * an out-of-gas error (10K pfp collections should be fine).\n     */\n    function tokensOfOwner(address owner) external view returns (uint256[] memory);\n}\n"
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of an ERC721ABurnable compliant contract.\n */\ninterface IERC721ABurnable is IERC721A {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) external;\n}\n"
			},
			"erc721a/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of an ERC721A compliant contract.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * The caller cannot approve to their own address.\n     */\n    error ApproveToCaller();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set through `_extraData`.\n        uint24 extraData;\n    }\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     *\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // ==============================\n    //            IERC165\n    // ==============================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // ==============================\n    //            IERC721\n    // ==============================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // ==============================\n    //        IERC721Metadata\n    // ==============================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // ==============================\n    //            IERC2309\n    // ==============================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n     * as defined in the ERC2309 standard. See `_mintERC2309` for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 115,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"MerkleProof": {
					"abi": [],
					"devdoc": {
						"details": "These functions deal with verification of Merkle Trees proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":800:2577  library MerkleProof {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":800:2577  library MerkleProof {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CALLDATASIZE PUSH9 0xFA5FA11D3D3DD24084 PUSH4 0x979970C2 PUSH28 0xE388D0F7DF26A4A92E9B7B8C470464736F6C634300080F0033000000 ",
							"sourceMap": "800:1777:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;800:1777:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CALLDATASIZE PUSH9 0xFA5FA11D3D3DD24084 PUSH4 0x979970C2 PUSH28 0xE388D0F7DF26A4A92E9B7B8C470464736F6C634300080F0033000000 ",
							"sourceMap": "800:1777:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_efficientHash(bytes32,bytes32)": "infinite",
								"processProof(bytes32[] memory,bytes32)": "infinite",
								"verify(bytes32[] memory,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
									".code": [
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ERC721A/INagaKid.sol",
								"ERC721A/MintNagaKids.sol",
								"ERC721A/VerifySignature.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721AQueryable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Trees proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721A/INagaKid.sol": {
				"INagaKid": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`"
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"explicitOwnershipOf(uint256)": "c23dc68f",
							"explicitOwnershipsOf(uint256[])": "5bbb2177",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isMinter(address)": "aa271e1a",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeMint(address,uint256)": "a1448194",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokensOfOwner(address)": "8462151c",
							"tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721A/INagaKid.sol\":\"INagaKid\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC721A/INagaKid.sol\":{\"keccak256\":\"0x6d40b0cc478b970043e5567d209eda8b52325f1d271022e638f43e4aefb4e595\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c6f40836e74cc2739a624d11dd24565c4b63fcbe5a06481566e73c1512dfe63\",\"dweb:/ipfs/QmbJKRZNVHk55PV6fEjbE5kgNGLaTJzu8eAvwk2derkhnq\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]},\"erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x55e6863d273b676d65797fee7aac1b520848a0e31c0dd2e5a29887457043b7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8477b7c9788e36787f79ef9b1580c46bdadc13da4c8ef85ce82d42a754743\",\"dweb:/ipfs/QmQvqKtF8YyJKqpEiNh1KkeC1Q5JmvEkQmP2ZCPYSW72BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721A/MintNagaKids.sol": {
				"MintNagaKids": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract INagaKid",
									"name": "_nagaKidContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_merkleRoot",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRootBefore",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRootAfter",
									"type": "bytes32"
								}
							],
							"name": "MerkleRootChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "nagaKidBefore",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "nagaKidAfter",
									"type": "address"
								}
							],
							"name": "NagaKidContractChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PrivateMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PublicMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "roundBefore",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "roundAfter",
									"type": "bytes32"
								}
							],
							"name": "RoundChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "signerBefore",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "signerAfter",
									"type": "address"
								}
							],
							"name": "SignerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "balanceOFContract",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "balanceOfContract",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "WithdrawCurrency",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "NFT",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "WithdrawNFT",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NAGA_HOLDER_MINT_ROUND",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WHITELIST_MINT_ROUND",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WITHDRAW_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "_proof",
									"type": "bytes32[]"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_round",
									"type": "bytes32"
								}
							],
							"name": "allowlistMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMintRound",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_messageHash",
									"type": "bytes32"
								}
							],
							"name": "getEthSignedMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPrivateMintOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPublicMintOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isPublicMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_round",
									"type": "bytes32"
								}
							],
							"name": "isUserMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "merkleRoot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nagaKidContract",
							"outputs": [
								{
									"internalType": "contract INagaKid",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_sig",
									"type": "bytes"
								}
							],
							"name": "publicMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_ethSignedMessageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "recoverSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "setMerkleRoot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract INagaKid",
									"name": "_nagaKid",
									"type": "address"
								}
							],
							"name": "setNagaKidContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_round",
									"type": "bytes32"
								}
							],
							"name": "setRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								}
							],
							"name": "setSigner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "splitSignature",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_round",
									"type": "bytes32"
								}
							],
							"name": "userMintedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_currency",
									"type": "address"
								}
							],
							"name": "withdrawCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "withdrawNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC721A/MintNagaKids.sol\":428:6886  contract MintNagaKids is Ownable, ReentrancyGuard, VerifySignature {... */\n  mstore(0x40, 0x80)\n    /* \"ERC721A/MintNagaKids.sol\":1124:1160  bool public isPublicMintOpen = false */\n  0x05\n  dup1\n  sload\n  not(0xffff)\n    /* \"ERC721A/MintNagaKids.sol\":1167:1204  bool public isPrivateMintOpen = false */\n  and\n  swap1\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":2198:2407  constructor(INagaKid _nagaKidContract,address _signer, bytes32 _merkleRoot) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":2295:2331  setNagaKidContract(_nagaKidContract) */\n  tag_14\n    /* \"ERC721A/MintNagaKids.sol\":2314:2330  _nagaKidContract */\n  dup4\n    /* \"ERC721A/MintNagaKids.sol\":2295:2313  setNagaKidContract */\n  tag_15\n    /* \"ERC721A/MintNagaKids.sol\":2295:2331  setNagaKidContract(_nagaKidContract) */\n  jump\t// in\ntag_14:\n    /* \"ERC721A/MintNagaKids.sol\":2342:2368  setMerkleRoot(_merkleRoot) */\n  tag_16\n    /* \"ERC721A/MintNagaKids.sol\":2356:2367  _merkleRoot */\n  dup2\n    /* \"ERC721A/MintNagaKids.sol\":2342:2355  setMerkleRoot */\n  tag_17\n    /* \"ERC721A/MintNagaKids.sol\":2342:2368  setMerkleRoot(_merkleRoot) */\n  jump\t// in\ntag_16:\n    /* \"ERC721A/MintNagaKids.sol\":2379:2397  setSigner(_signer) */\n  tag_18\n    /* \"ERC721A/MintNagaKids.sol\":2389:2396  _signer */\n  dup3\n    /* \"ERC721A/MintNagaKids.sol\":2379:2388  setSigner */\n  tag_19\n    /* \"ERC721A/MintNagaKids.sol\":2379:2397  setSigner(_signer) */\n  jump\t// in\ntag_18:\n    /* \"ERC721A/MintNagaKids.sol\":2198:2407  constructor(INagaKid _nagaKidContract,address _signer, bytes32 _merkleRoot) {... */\n  pop\n  pop\n  pop\n    /* \"ERC721A/MintNagaKids.sol\":428:6886  contract MintNagaKids is Ownable, ReentrancyGuard, VerifySignature {... */\n  jump(tag_50)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"ERC721A/MintNagaKids.sol\":2415:2703  function setNagaKidContract(INagaKid _nagaKid) public onlyOwner {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_27\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":849:851   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":831:852   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":868:886   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":861:891   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":907:925   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":900:962   */\n  mstore\n    /* \"#utility.yul\":979:997   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_27:\n    /* \"ERC721A/MintNagaKids.sol\":2522:2537  nagaKidContract */\n  0x02\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC721A/MintNagaKids.sol\":2549:2575  nagaKidContract = _nagaKid */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":2644:2695  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n  0x40\n  dup1\n  mload\n    /* \"ERC721A/MintNagaKids.sol\":2522:2537  nagaKidContract */\n  swap2\n  swap1\n  swap3\n  and\n    /* \"#utility.yul\":1220:1254   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":1285:1287   */\n  0x20\n    /* \"#utility.yul\":1270:1288   */\n  dup3\n  add\n    /* \"#utility.yul\":1263:1306   */\n  swap4\n  swap1\n  swap4\n  mstore\n    /* \"ERC721A/MintNagaKids.sol\":2549:2575  nagaKidContract = _nagaKid */\n  dup4\n  swap2\n    /* \"ERC721A/MintNagaKids.sol\":2644:2695  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n  0xabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d973\n  swap2\n    /* \"#utility.yul\":1155:1173   */\n  add\n    /* \"ERC721A/MintNagaKids.sol\":2644:2695  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"ERC721A/MintNagaKids.sol\":2479:2703  {... */\n  pop\n  pop\n    /* \"ERC721A/MintNagaKids.sol\":2415:2703  function setNagaKidContract(INagaKid _nagaKid) public onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"ERC721A/MintNagaKids.sol\":3108:3328  function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_36\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":849:851   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":831:852   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":868:886   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":861:891   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":907:925   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":900:962   */\n  mstore\n    /* \"#utility.yul\":979:997   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_28\n    /* \"#utility.yul\":647:1003   */\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\ntag_36:\n    /* \"ERC721A/MintNagaKids.sol\":3208:3218  merkleRoot */\n  0x04\n  dup1\n  sload\n    /* \"ERC721A/MintNagaKids.sol\":3229:3253  merkleRoot = _merkleRoot */\n  swap1\n  dup3\n  swap1\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":3271:3320  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":1491:1516   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":1547:1549   */\n  0x20\n    /* \"#utility.yul\":1532:1550   */\n  dup2\n  add\n    /* \"#utility.yul\":1525:1559   */\n  dup5\n  swap1\n  mstore\n    /* \"ERC721A/MintNagaKids.sol\":3271:3320  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n  0x123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe\n  swap2\n    /* \"#utility.yul\":1464:1482   */\n  add\n    /* \"ERC721A/MintNagaKids.sol\":3271:3320  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"ERC721A/MintNagaKids.sol\":3169:3328  {... */\n  pop\n    /* \"ERC721A/MintNagaKids.sol\":3108:3328  function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"ERC721A/MintNagaKids.sol\":2916:3100  function setSigner(address _signer) public onlyOwner {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_44\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":849:851   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":831:852   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":868:886   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":861:891   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":907:925   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":900:962   */\n  mstore\n    /* \"#utility.yul\":979:997   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_28\n    /* \"#utility.yul\":647:1003   */\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\ntag_44:\n    /* \"ERC721A/MintNagaKids.sol\":3004:3010  signer */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC721A/MintNagaKids.sol\":3021:3037  signer = _signer */\n  dup4\n  dup2\n  and\n    /* \"ERC721A/MintNagaKids.sol\":3004:3010  signer */\n  0x010000\n    /* \"ERC721A/MintNagaKids.sol\":3021:3037  signer = _signer */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xb0, 0x01), 0x010000))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":3055:3092  SignerChanged(_signerBefore, _signer) */\n  0x40\n  dup1\n  mload\n    /* \"ERC721A/MintNagaKids.sol\":3004:3010  signer */\n  swap5\n  swap1\n  swap4\n  div\n  swap1\n  swap2\n  and\n    /* \"#utility.yul\":1220:1254   */\n  dup1\n  dup5\n  mstore\n    /* \"#utility.yul\":1285:1287   */\n  0x20\n    /* \"#utility.yul\":1270:1288   */\n  dup5\n  add\n    /* \"#utility.yul\":1263:1306   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"ERC721A/MintNagaKids.sol\":3004:3010  signer */\n  swap2\n    /* \"ERC721A/MintNagaKids.sol\":3055:3092  SignerChanged(_signerBefore, _signer) */\n  0xeeb293e1f8f3a9db91ade748726387ed1352ca78f5430c5f06fe3d1e1ad50579\n  swap2\n    /* \"#utility.yul\":1155:1173   */\n  add\n    /* \"ERC721A/MintNagaKids.sol\":3055:3092  SignerChanged(_signerBefore, _signer) */\n  tag_39\n    /* \"#utility.yul\":1008:1312   */\n  jump\n    /* \"#utility.yul\":14:155   */\ntag_49:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":99:130   */\n  dup2\n  and\n    /* \"#utility.yul\":89:131   */\n  dup2\n  eq\n    /* \"#utility.yul\":79:149   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":145:146   */\n  0x00\n    /* \"#utility.yul\":142:143   */\n  dup1\n    /* \"#utility.yul\":135:147   */\n  revert\n    /* \"#utility.yul\":79:149   */\ntag_52:\n    /* \"#utility.yul\":14:155   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":160:642   */\ntag_3:\n    /* \"#utility.yul\":264:270   */\n  0x00\n    /* \"#utility.yul\":272:278   */\n  dup1\n    /* \"#utility.yul\":280:286   */\n  0x00\n    /* \"#utility.yul\":333:335   */\n  0x60\n    /* \"#utility.yul\":321:330   */\n  dup5\n    /* \"#utility.yul\":312:319   */\n  dup7\n    /* \"#utility.yul\":308:331   */\n  sub\n    /* \"#utility.yul\":304:336   */\n  slt\n    /* \"#utility.yul\":301:353   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":349:350   */\n  0x00\n    /* \"#utility.yul\":346:347   */\n  dup1\n    /* \"#utility.yul\":339:351   */\n  revert\n    /* \"#utility.yul\":301:353   */\ntag_54:\n    /* \"#utility.yul\":381:390   */\n  dup4\n    /* \"#utility.yul\":375:391   */\n  mload\n    /* \"#utility.yul\":400:441   */\n  tag_55\n    /* \"#utility.yul\":435:440   */\n  dup2\n    /* \"#utility.yul\":400:441   */\n  tag_49\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":510:512   */\n  0x20\n    /* \"#utility.yul\":495:513   */\n  dup6\n  add\n    /* \"#utility.yul\":489:514   */\n  mload\n    /* \"#utility.yul\":460:465   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":523:566   */\n  tag_56\n    /* \"#utility.yul\":489:514   */\n  dup2\n    /* \"#utility.yul\":523:566   */\n  tag_49\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":585:592   */\n  dup1\n    /* \"#utility.yul\":575:592   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":632:634   */\n  0x40\n    /* \"#utility.yul\":621:630   */\n  dup5\n    /* \"#utility.yul\":617:635   */\n  add\n    /* \"#utility.yul\":611:636   */\n  mload\n    /* \"#utility.yul\":601:636   */\n  swap1\n  pop\n    /* \"#utility.yul\":160:642   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1317:1565   */\ntag_50:\n    /* \"ERC721A/MintNagaKids.sol\":428:6886  contract MintNagaKids is Ownable, ReentrancyGuard, VerifySignature {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\nsub_0: assembly {\n        /* \"ERC721A/MintNagaKids.sol\":428:6886  contract MintNagaKids is Ownable, ReentrancyGuard, VerifySignature {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa4435dfd\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xef5fe79f\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xf6b48e55\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xf6b48e55\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xfa540801\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xff05fe4a\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xffdc6129\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0xef5fe79f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf055c7a9\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf500cdfc\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xc4e41b22\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xc4e41b22\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xde6892c8\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdf4e5881\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe02023a1\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0xa4435dfd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa7bb5803\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb5abafa1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xbff863ec\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x6c19e783\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x8907f3fa\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x8907f3fa\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x97aba7f9\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9e6c8855\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x6c19e783\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7cb64759\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8407ecc4\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x2eb4a7ab\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x2eb4a7ab\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x42920a46\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4c0f38c2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x0a25dea9\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1f5ac1b2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x238ac933\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x24c37a85\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"ERC721A/MintNagaKids.sol\":826:926  bytes32 public constant DEFAULT = 0x0000000000000000000000000000000000000000000000000000000000000000 */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n        /* \"ERC721A/MintNagaKids.sol\":860:926  0x0000000000000000000000000000000000000000000000000000000000000000 */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":826:926  bytes32 public constant DEFAULT = 0x0000000000000000000000000000000000000000000000000000000000000000 */\n      dup2\n      jump\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":826:926  bytes32 public constant DEFAULT = 0x0000000000000000000000000000000000000000000000000000000000000000 */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_42\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":1213:1234  address public signer */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      sload(0x05)\n      tag_53\n      swap1\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_53:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":748:780   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":730:781   */\n      dup2\n      mstore\n        /* \"#utility.yul\":718:720   */\n      0x20\n        /* \"#utility.yul\":703:721   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":1213:1234  address public signer */\n      tag_44\n        /* \"#utility.yul\":584:787   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":661:745  bytes32 public constant NAGA_HOLDER_MINT_ROUND = keccak256(\"NAGA_HOLDER_MINT_ROUND\") */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_42\n        /* \"ERC721A/MintNagaKids.sol\":710:745  keccak256(\"NAGA_HOLDER_MINT_ROUND\") */\n      0xb3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db3\n        /* \"ERC721A/MintNagaKids.sol\":661:745  bytes32 public constant NAGA_HOLDER_MINT_ROUND = keccak256(\"NAGA_HOLDER_MINT_ROUND\") */\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":1090:1115  bytes32 public merkleRoot */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_42\n      sload(0x04)\n      dup2\n      jump\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n        /* \"#utility.yul\":2413:2427   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2406:2428   */\n      iszero\n        /* \"#utility.yul\":2388:2429   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2376:2378   */\n      0x20\n        /* \"#utility.yul\":2361:2379   */\n      add\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n      tag_44\n        /* \"#utility.yul\":2248:2435   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":6774:6881  function getMaxSupply() public view returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_42\n      tag_74\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":5282:5620  function withdraw(address _to) public onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"ERC721A/MintNagaKids.sol\":2916:3100  function setSigner(address _signer) public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_78\n      tag_83\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_78\n      tag_87\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":3108:3328  function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_78\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":5628:6005  function withdrawCurrency(address _to,address _currency) public onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_78\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":1167:1204  bool public isPrivateMintOpen = false */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      sload(0x05)\n      tag_66\n      swap1\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_53)\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_53\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":2415:2703  function setNagaKidContract(INagaKid _nagaKid) public onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_78\n      tag_114\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":1124:1160  bool public isPublicMintOpen = false */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      sload(0x05)\n      tag_66\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n    tag_122:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4384:4409   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":4440:4442   */\n      0x20\n        /* \"#utility.yul\":4425:4443   */\n      dup5\n      add\n        /* \"#utility.yul\":4418:4452   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4500:4504   */\n      0xff\n        /* \"#utility.yul\":4488:4505   */\n      and\n        /* \"#utility.yul\":4468:4486   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4461:4506   */\n      mstore\n        /* \"#utility.yul\":4372:4374   */\n      0x60\n        /* \"#utility.yul\":4357:4375   */\n      add\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      tag_44\n        /* \"#utility.yul\":4186:4512   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":6504:6647  function userMintedAmount(address _user,bytes32 _round) public view returns(uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_42\n      tag_130\n      calldatasize\n      0x04\n      tag_131\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":6607:6631  _userMintedAmount[_user] */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"ERC721A/MintNagaKids.sol\":6580:6587  uint256 */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":6607:6631  _userMintedAmount[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6607:6624  _userMintedAmount */\n      0x07\n        /* \"ERC721A/MintNagaKids.sol\":6607:6631  _userMintedAmount[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":6607:6639  _userMintedAmount[_user][_round] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":6504:6647  function userMintedAmount(address _user,bytes32 _round) public view returns(uint256) {... */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":6013:6356  function withdrawNFT(address _to,address _NFT,uint256 _tokenId) public onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_78\n      tag_136\n      calldatasize\n      0x04\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":6655:6766  function getTotalSupply() public view returns (uint256) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_42\n      tag_141\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":4339:5154  function publicMint(bytes calldata _sig) public payable nonReentrant {... */\n    tag_23:\n      tag_78\n      tag_144\n      calldatasize\n      0x04\n      tag_145\n      jump\t// in\n    tag_144:\n      tag_146\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":1014:1045  INagaKid public nagaKidContract */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      sload(0x02)\n      tag_53\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":939:1005  bytes32 public constant WITHDRAW_ROLE = keccak256(\"WITHDRAW_ROLE\") */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_42\n        /* \"ERC721A/MintNagaKids.sol\":979:1005  keccak256(\"WITHDRAW_ROLE\") */\n      0x5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec\n        /* \"ERC721A/MintNagaKids.sol\":939:1005  bytes32 public constant WITHDRAW_ROLE = keccak256(\"WITHDRAW_ROLE\") */\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":1052:1083  bytes32 public currentMintRound */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_42\n      sload(0x03)\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":5162:5274  function isPublicMinted(address _addr) public view returns(bool){... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_66\n      tag_162\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":5244:5266  _isPublicMinted[_addr] */\n      and\n        /* \"ERC721A/MintNagaKids.sol\":5221:5225  bool */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":5244:5266  _isPublicMinted[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5244:5259  _isPublicMinted */\n      0x08\n        /* \"ERC721A/MintNagaKids.sol\":5244:5266  _isPublicMinted[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":5162:5274  function isPublicMinted(address _addr) public view returns(bool){... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_78\n      tag_167\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":504:584  bytes32 public constant WHITELIST_MINT_ROUND = keccak256(\"WHITELIST_MINT_ROUND\") */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_42\n        /* \"ERC721A/MintNagaKids.sol\":551:584  keccak256(\"WHITELIST_MINT_ROUND\") */\n      0x68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba\n        /* \"ERC721A/MintNagaKids.sol\":504:584  bytes32 public constant WHITELIST_MINT_ROUND = keccak256(\"WHITELIST_MINT_ROUND\") */\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3336:4331  function allowlistMint(bytes32[] calldata _proof, uint256 _amount, bytes32 _round) public payable nonReentrant {... */\n    tag_30:\n      tag_78\n      tag_174\n      calldatasize\n      0x04\n      tag_175\n      jump\t// in\n    tag_174:\n      tag_176\n      jump\t// in\n        /* \"ERC721A/VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_42\n      tag_179\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_179:\n      tag_180\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":2711:2908  function setRound(bytes32 _round) public onlyOwner {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      tag_78\n      tag_184\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_184:\n      tag_185\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":6364:6496  function isUserMinted(address _user,bytes32 _round) public view returns(bool) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      tag_66\n      tag_188\n      calldatasize\n      0x04\n      tag_131\n      jump\t// in\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":6460:6480  _isUserMinted[_user] */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"ERC721A/MintNagaKids.sol\":6436:6440  bool */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":6460:6480  _isUserMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6460:6473  _isUserMinted */\n      0x06\n        /* \"ERC721A/MintNagaKids.sol\":6460:6480  _isUserMinted[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":6460:6488  _isUserMinted[_user][_round] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":6364:6496  function isUserMinted(address _user,bytes32 _round) public view returns(bool) {... */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_50:\n        /* \"ERC721A/VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":7107:7109   */\n      0x60\n        /* \"#utility.yul\":7103:7118   */\n      dup4\n      dup2\n      shl\n        /* \"#utility.yul\":7099:7123   */\n      dup3\n      and\n        /* \"ERC721A/VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      0x20\n      dup5\n      add\n        /* \"#utility.yul\":7087:7124   */\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":244:248  this */\n      address\n        /* \"#utility.yul\":7158:7173   */\n      swap1\n      shl\n        /* \"#utility.yul\":7154:7178   */\n      and\n        /* \"#utility.yul\":7140:7152   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":7133:7179   */\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":175:182  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":7195:7207   */\n      0x48\n      add\n        /* \"ERC721A/VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n    tag_192:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":202:251  keccak256(abi.encodePacked(_user, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"ERC721A/VerifySignature.sol\":195:251  return keccak256(abi.encodePacked(_user, address(this))) */\n      swap1\n      pop\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n    tag_69:\n        /* \"ERC721A/VerifySignature.sol\":896:900  bool */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":913:932  bytes32 messageHash */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":935:956  getMessageHash(_user) */\n      tag_195\n        /* \"ERC721A/VerifySignature.sol\":950:955  _user */\n      dup5\n        /* \"ERC721A/VerifySignature.sol\":935:949  getMessageHash */\n      tag_50\n        /* \"ERC721A/VerifySignature.sol\":935:956  getMessageHash(_user) */\n      jump\t// in\n    tag_195:\n        /* \"ERC721A/VerifySignature.sol\":913:956  bytes32 messageHash = getMessageHash(_user) */\n      swap1\n      pop\n        /* \"ERC721A/VerifySignature.sol\":967:995  bytes32 ethSignedMessageHash */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      tag_196\n        /* \"ERC721A/VerifySignature.sol\":1022:1033  messageHash */\n      dup3\n        /* \"ERC721A/VerifySignature.sol\":998:1021  getEthSignedMessageHash */\n      tag_180\n        /* \"ERC721A/VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      jump\t// in\n    tag_196:\n        /* \"ERC721A/VerifySignature.sol\":967:1034  bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash) */\n      swap1\n      pop\n        /* \"ERC721A/VerifySignature.sol\":1104:1111  _signer */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n        /* \"ERC721A/VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      tag_197\n        /* \"ERC721A/VerifySignature.sol\":1068:1088  ethSignedMessageHash */\n      dup3\n        /* \"ERC721A/VerifySignature.sol\":1090:1099  signature */\n      dup7\n        /* \"ERC721A/VerifySignature.sol\":1054:1067  recoverSigner */\n      tag_110\n        /* \"ERC721A/VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      jump\t// in\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n      eq\n      swap7\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":6774:6881  function getMaxSupply() public view returns (uint256) {... */\n    tag_74:\n        /* \"ERC721A/MintNagaKids.sol\":6846:6861  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":6846:6873  nagaKidContract.maxSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd5abeb01)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC721A/MintNagaKids.sol\":6819:6826  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":6846:6861  nagaKidContract */\n      and\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":6846:6871  nagaKidContract.maxSupply */\n      0xd5abeb01\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":6846:6873  nagaKidContract.maxSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ERC721A/MintNagaKids.sol\":6846:6861  nagaKidContract */\n      dup7\n        /* \"ERC721A/MintNagaKids.sol\":6846:6873  nagaKidContract.maxSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"ERC721A/MintNagaKids.sol\":6839:6873  return nagaKidContract.maxSupply() */\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":6774:6881  function getMaxSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":5282:5620  function withdraw(address _to) public onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"ERC721A/MintNagaKids.sol\":5366:5387  address(this).balance */\n      selfbalance\n        /* \"ERC721A/MintNagaKids.sol\":5406:5427  balanceOFContract > 0 */\n      dup1\n        /* \"ERC721A/MintNagaKids.sol\":5398:5452  require(balanceOFContract > 0, \"Insufficient Balance\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7970:7972   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":5398:5452  require(balanceOFContract > 0, \"Insufficient Balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7952:7973   */\n      mstore\n        /* \"#utility.yul\":8009:8011   */\n      0x14\n        /* \"#utility.yul\":7989:8007   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7982:8012   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742042616c616e6365)\n        /* \"#utility.yul\":8028:8046   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8021:8071   */\n      mstore\n        /* \"#utility.yul\":8088:8106   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5398:5452  require(balanceOFContract > 0, \"Insufficient Balance\") */\n      tag_208\n        /* \"#utility.yul\":7768:8112   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":5398:5452  require(balanceOFContract > 0, \"Insufficient Balance\") */\n    tag_211:\n        /* \"ERC721A/MintNagaKids.sol\":5464:5475  bool status */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":5480:5483  _to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":5480:5488  _to.call */\n      and\n        /* \"ERC721A/MintNagaKids.sol\":5496:5513  balanceOFContract */\n      dup3\n        /* \"ERC721A/MintNagaKids.sol\":5480:5519  _to.call{value: balanceOFContract }(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_218\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_217)\n    tag_218:\n      0x60\n      swap2\n      pop\n    tag_217:\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5463:5519  (bool status,) = _to.call{value: balanceOFContract }(\"\") */\n      pop\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5538:5544  status */\n      dup1\n        /* \"ERC721A/MintNagaKids.sol\":5530:5545  require(status) */\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n        /* \"ERC721A/MintNagaKids.sol\":5563:5612  Withdraw(_to, balanceOFContract ,block.timestamp) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8547:8579   */\n      dup6\n      and\n        /* \"#utility.yul\":8529:8580   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8611:8613   */\n      0x20\n        /* \"#utility.yul\":8596:8614   */\n      dup2\n      add\n        /* \"#utility.yul\":8589:8623   */\n      dup5\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5596:5611  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":8639:8657   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":8632:8666   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5563:5612  Withdraw(_to, balanceOFContract ,block.timestamp) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n      swap1\n        /* \"#utility.yul\":8517:8519   */\n      0x60\n        /* \"#utility.yul\":8502:8520   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5563:5612  Withdraw(_to, balanceOFContract ,block.timestamp) */\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC721A/MintNagaKids.sol\":5330:5620  {... */\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5282:5620  function withdraw(address _to) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":2916:3100  function setSigner(address _signer) public onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_225:\n        /* \"ERC721A/MintNagaKids.sol\":3004:3010  signer */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":3021:3037  signer = _signer */\n      dup4\n      dup2\n      and\n        /* \"ERC721A/MintNagaKids.sol\":3004:3010  signer */\n      0x010000\n        /* \"ERC721A/MintNagaKids.sol\":3021:3037  signer = _signer */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xb0, 0x01), 0x010000))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":3055:3092  SignerChanged(_signerBefore, _signer) */\n      0x40\n      dup1\n      mload\n        /* \"ERC721A/MintNagaKids.sol\":3004:3010  signer */\n      swap5\n      swap1\n      swap4\n      div\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":8889:8923   */\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":8954:8956   */\n      0x20\n        /* \"#utility.yul\":8939:8957   */\n      dup5\n      add\n        /* \"#utility.yul\":8932:8975   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3004:3010  signer */\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":3055:3092  SignerChanged(_signerBefore, _signer) */\n      0xeeb293e1f8f3a9db91ade748726387ed1352ca78f5430c5f06fe3d1e1ad50579\n      swap2\n        /* \"#utility.yul\":8824:8842   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3055:3092  SignerChanged(_signerBefore, _signer) */\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC721A/MintNagaKids.sol\":2969:3100  {... */\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":2916:3100  function setSigner(address _signer) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":3108:3328  function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_241:\n        /* \"ERC721A/MintNagaKids.sol\":3208:3218  merkleRoot */\n      0x04\n      dup1\n      sload\n        /* \"ERC721A/MintNagaKids.sol\":3229:3253  merkleRoot = _merkleRoot */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":3271:3320  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9160:9185   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":9216:9218   */\n      0x20\n        /* \"#utility.yul\":9201:9219   */\n      dup2\n      add\n        /* \"#utility.yul\":9194:9228   */\n      dup5\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3271:3320  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n      0x123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe\n      swap2\n        /* \"#utility.yul\":9133:9151   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3271:3320  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n      tag_228\n        /* \"#utility.yul\":8986:9234   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":5628:6005  function withdrawCurrency(address _to,address _currency) public onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_249:\n        /* \"ERC721A/MintNagaKids.sol\":5738:5780  IERC20(_currency).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5774:5778  this */\n      address\n        /* \"ERC721A/MintNagaKids.sol\":5738:5780  IERC20(_currency).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":730:781   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5713:5735  uint balanceOfContract */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":5738:5765  IERC20(_currency).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":703:721   */\n      0x24\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5738:5780  IERC20(_currency).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_254\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_254:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_255\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_255:\n        /* \"ERC721A/MintNagaKids.sol\":5713:5780  uint balanceOfContract = IERC20(_currency).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5819:5820  0 */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":5799:5816  balanceOfContract */\n      dup2\n        /* \"ERC721A/MintNagaKids.sol\":5799:5820  balanceOfContract > 0 */\n      gt\n        /* \"ERC721A/MintNagaKids.sol\":5791:5845  require(balanceOfContract > 0, \"Insufficient Balance\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7970:7972   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":5791:5845  require(balanceOfContract > 0, \"Insufficient Balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7952:7973   */\n      mstore\n        /* \"#utility.yul\":8009:8011   */\n      0x14\n        /* \"#utility.yul\":7989:8007   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7982:8012   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742042616c616e6365)\n        /* \"#utility.yul\":8028:8046   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8021:8071   */\n      mstore\n        /* \"#utility.yul\":8088:8106   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5791:5845  require(balanceOfContract > 0, \"Insufficient Balance\") */\n      tag_208\n        /* \"#utility.yul\":7768:8112   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":5791:5845  require(balanceOfContract > 0, \"Insufficient Balance\") */\n    tag_256:\n        /* \"ERC721A/MintNagaKids.sol\":5856:5906  IERC20(_currency).transfer(_to, balanceOfContract) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9431:9463   */\n      dup5\n      dup2\n      and\n        /* \"ERC721A/MintNagaKids.sol\":5856:5906  IERC20(_currency).transfer(_to, balanceOfContract) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9413:9464   */\n      mstore\n        /* \"#utility.yul\":9480:9498   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9473:9507   */\n      dup4\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5856:5882  IERC20(_currency).transfer */\n      dup4\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":9386:9404   */\n      0x44\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5856:5906  IERC20(_currency).transfer(_to, balanceOfContract) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5932:5997  WithdrawCurrency(_to,_currency,balanceOfContract,block.timestamp) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10087:10102   */\n      dup1\n      dup7\n      and\n        /* \"#utility.yul\":10069:10103   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10139:10154   */\n      dup5\n      and\n        /* \"#utility.yul\":10134:10136   */\n      0x20\n        /* \"#utility.yul\":10119:10137   */\n      dup3\n      add\n        /* \"#utility.yul\":10112:10155   */\n      mstore\n        /* \"#utility.yul\":10171:10189   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":10164:10198   */\n      dup3\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5981:5996  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":10229:10231   */\n      0x60\n        /* \"#utility.yul\":10214:10232   */\n      dup3\n      add\n        /* \"#utility.yul\":10207:10241   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5932:5997  WithdrawCurrency(_to,_currency,balanceOfContract,block.timestamp) */\n      0xb818a975f91276df8ba59329becbc23c793df0d503c19ac296c3c372a1fa0461\n      swap1\n        /* \"#utility.yul\":10018:10021   */\n      0x80\n        /* \"#utility.yul\":10003:10022   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5932:5997  WithdrawCurrency(_to,_currency,balanceOfContract,block.timestamp) */\n      tag_220\n        /* \"#utility.yul\":9800:10247   */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_110:\n        /* \"ERC721A/VerifySignature.sol\":1252:1259  address */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1273:1282  bytes32 r */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":1284:1293  bytes32 s */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1295:1302  uint8 v */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      tag_268\n        /* \"ERC721A/VerifySignature.sol\":1321:1331  _signature */\n      dup6\n        /* \"ERC721A/VerifySignature.sol\":1306:1320  splitSignature */\n      tag_125\n        /* \"ERC721A/VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      jump\t// in\n    tag_268:\n        /* \"ERC721A/VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x40\n      dup1\n      mload\n      0x00\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":10479:10504   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":10552:10556   */\n      0xff\n        /* \"#utility.yul\":10540:10557   */\n      dup4\n      and\n        /* \"#utility.yul\":10520:10538   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":10513:10558   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":10574:10592   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":10567:10601   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10617:10635   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":10610:10644   */\n      dup4\n      swap1\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":1272:1332  (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature) */\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n        /* \"ERC721A/VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":10451:10470   */\n      0xa0\n      add\n        /* \"ERC721A/VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_272\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_272:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap8\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":2415:2703  function setNagaKidContract(INagaKid _nagaKid) public onlyOwner {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_276:\n        /* \"ERC721A/MintNagaKids.sol\":2522:2537  nagaKidContract */\n      0x02\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":2549:2575  nagaKidContract = _nagaKid */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":2644:2695  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n      0x40\n      dup1\n      mload\n        /* \"ERC721A/MintNagaKids.sol\":2522:2537  nagaKidContract */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":8889:8923   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8954:8956   */\n      0x20\n        /* \"#utility.yul\":8939:8957   */\n      dup3\n      add\n        /* \"#utility.yul\":8932:8975   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":2549:2575  nagaKidContract = _nagaKid */\n      dup4\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":2644:2695  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n      0xabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d973\n      swap2\n        /* \"#utility.yul\":8824:8842   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":2644:2695  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n      tag_220\n        /* \"#utility.yul\":8677:8981   */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_125:\n        /* \"ERC721A/VerifySignature.sol\":1513:1522  bytes32 r */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1537:1546  bytes32 s */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":1561:1568  uint8 v */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1604:1607  sig */\n      dup4\n        /* \"ERC721A/VerifySignature.sol\":1604:1614  sig.length */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":1618:1620  65 */\n      0x41\n        /* \"ERC721A/VerifySignature.sol\":1604:1620  sig.length == 65 */\n      eq\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10857:10859   */\n      0x20\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10839:10860   */\n      mstore\n        /* \"#utility.yul\":10896:10898   */\n      0x18\n        /* \"#utility.yul\":10876:10894   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10869:10899   */\n      mstore\n        /* \"#utility.yul\":10935:10961   */\n      0x696e76616c6964207369676e6174757265206c656e6774680000000000000000\n        /* \"#utility.yul\":10915:10933   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10908:10962   */\n      mstore\n        /* \"#utility.yul\":10979:10997   */\n      0x64\n      add\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      tag_208\n        /* \"#utility.yul\":10655:11003   */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n    tag_281:\n      pop\n      pop\n      pop\n        /* \"ERC721A/VerifySignature.sol\":2058:2060  32 */\n      0x20\n        /* \"ERC721A/VerifySignature.sol\":2049:2061  add(sig, 32) */\n      dup2\n      add\n        /* \"ERC721A/VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":2128:2130  64 */\n      0x40\n        /* \"ERC721A/VerifySignature.sol\":2119:2131  add(sig, 64) */\n      dup3\n      add\n        /* \"ERC721A/VerifySignature.sol\":2113:2132  mload(add(sig, 64)) */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":2235:2237  96 */\n      0x60\n        /* \"ERC721A/VerifySignature.sol\":2226:2238  add(sig, 96) */\n      swap1\n      swap3\n      add\n        /* \"ERC721A/VerifySignature.sol\":2220:2239  mload(add(sig, 96)) */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      swap1\n      swap3\n        /* \"ERC721A/VerifySignature.sol\":2217:2218  0 */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":2212:2240  byte(0, mload(add(sig, 96))) */\n      swap2\n      swap1\n      swap2\n      byte\n      swap1\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":6013:6356  function withdrawNFT(address _to,address _NFT,uint256 _tokenId) public onlyOwner {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_288:\n        /* \"ERC721A/MintNagaKids.sol\":6113:6144  IERC721(_NFT).ownerOf(_tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6156:6160  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":6113:6134  IERC721(_NFT).ownerOf */\n      dup5\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"ERC721A/MintNagaKids.sol\":6113:6144  IERC721(_NFT).ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_293\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_293:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":6113:6161  IERC721(_NFT).ownerOf(_tokenId) == address(this) */\n      and\n      eq\n        /* \"ERC721A/MintNagaKids.sol\":6105:6203  require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11466:11468   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":6105:6203  require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11448:11469   */\n      mstore\n        /* \"#utility.yul\":11505:11507   */\n      0x25\n        /* \"#utility.yul\":11485:11503   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11478:11508   */\n      mstore\n        /* \"#utility.yul\":11544:11578   */\n      0x5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e\n        /* \"#utility.yul\":11524:11542   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11517:11579   */\n      mstore\n      shl(0xda, 0x1d1c9858dd)\n        /* \"#utility.yul\":11595:11613   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11588:11623   */\n      mstore\n        /* \"#utility.yul\":11640:11659   */\n      0x84\n      add\n        /* \"ERC721A/MintNagaKids.sol\":6105:6203  require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\") */\n      tag_208\n        /* \"#utility.yul\":11264:11665   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":6105:6203  require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\") */\n    tag_296:\n        /* \"ERC721A/MintNagaKids.sol\":6216:6276  IERC721(_NFT).safeTransferFrom(address(this), _to, _tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6255:6259  this */\n      address\n        /* \"ERC721A/MintNagaKids.sol\":6216:6276  IERC721(_NFT).safeTransferFrom(address(this), _to, _tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11910:11944   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11980:11995   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":11960:11978   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":11953:11996   */\n      mstore\n        /* \"#utility.yul\":12012:12030   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12005:12039   */\n      dup4\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6216:6246  IERC721(_NFT).safeTransferFrom */\n      dup4\n      and\n      swap1\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":11845:11863   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":6216:6276  IERC721(_NFT).safeTransferFrom(address(this), _to, _tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_301\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_301:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_303\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_303:\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":6302:6348  WithdrawNFT(_to,_NFT,_tokenId,block.timestamp) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10087:10102   */\n      dup1\n      dup9\n      and\n        /* \"#utility.yul\":10069:10103   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10139:10154   */\n      dup7\n      and\n        /* \"#utility.yul\":10134:10136   */\n      0x20\n        /* \"#utility.yul\":10119:10137   */\n      dup3\n      add\n        /* \"#utility.yul\":10112:10155   */\n      mstore\n        /* \"#utility.yul\":10171:10189   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":10164:10198   */\n      dup5\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6332:6347  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":10229:10231   */\n      0x60\n        /* \"#utility.yul\":10214:10232   */\n      dup3\n      add\n        /* \"#utility.yul\":10207:10241   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6302:6348  WithdrawNFT(_to,_NFT,_tokenId,block.timestamp) */\n      0x0127a8d3f57942833f6930572bce52ad882683e36eeb5830d199d3fa4bfa9467\n      swap3\n      pop\n        /* \"#utility.yul\":10018:10021   */\n      0x80\n        /* \"#utility.yul\":10003:10022   */\n      add\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":6302:6348  WithdrawNFT(_to,_NFT,_tokenId,block.timestamp) */\n      tag_220\n        /* \"#utility.yul\":9800:10247   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":6655:6766  function getTotalSupply() public view returns (uint256) {... */\n    tag_141:\n        /* \"ERC721A/MintNagaKids.sol\":6729:6744  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":6729:6758  nagaKidContract.totalSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x18160ddd)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC721A/MintNagaKids.sol\":6702:6709  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":6729:6744  nagaKidContract */\n      and\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":6729:6756  nagaKidContract.totalSupply */\n      0x18160ddd\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":6729:6758  nagaKidContract.totalSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ERC721A/MintNagaKids.sol\":6729:6744  nagaKidContract */\n      dup7\n        /* \"ERC721A/MintNagaKids.sol\":6729:6758  nagaKidContract.totalSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"ERC721A/MintNagaKids.sol\":4339:5154  function publicMint(bytes calldata _sig) public payable nonReentrant {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      mstore\n        /* \"#utility.yul\":12291:12293   */\n      0x1f\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12363   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12364   */\n      mstore\n        /* \"#utility.yul\":12381:12399   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_208\n        /* \"#utility.yul\":12050:12405   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_310:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      swap1\n      dup2\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":4429:4445  isPublicMintOpen */\n      and(0xff, sload(0x05))\n        /* \"ERC721A/MintNagaKids.sol\":4429:4453  isPublicMintOpen == true */\n      iszero\n      iszero\n      eq\n        /* \"ERC721A/MintNagaKids.sol\":4421:4482  require(isPublicMintOpen == true, \"Public mint is not open.\") */\n      tag_314\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12612:12614   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4421:4482  require(isPublicMintOpen == true, \"Public mint is not open.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12594:12615   */\n      mstore\n        /* \"#utility.yul\":12651:12653   */\n      0x18\n        /* \"#utility.yul\":12631:12649   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12624:12654   */\n      mstore\n        /* \"#utility.yul\":12690:12716   */\n      0x5075626c6963206d696e74206973206e6f74206f70656e2e0000000000000000\n        /* \"#utility.yul\":12670:12688   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12663:12717   */\n      mstore\n        /* \"#utility.yul\":12734:12752   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4421:4482  require(isPublicMintOpen == true, \"Public mint is not open.\") */\n      tag_208\n        /* \"#utility.yul\":12410:12758   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4421:4482  require(isPublicMintOpen == true, \"Public mint is not open.\") */\n    tag_314:\n        /* \"ERC721A/MintNagaKids.sol\":4501:4510  tx.origin */\n      origin\n        /* \"ERC721A/MintNagaKids.sol\":4514:4524  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":4501:4524  tx.origin == msg.sender */\n      eq\n        /* \"ERC721A/MintNagaKids.sol\":4493:4556  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12965:12967   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4493:4556  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12947:12968   */\n      mstore\n        /* \"#utility.yul\":13004:13006   */\n      0x1b\n        /* \"#utility.yul\":12984:13002   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12977:13007   */\n      mstore\n        /* \"#utility.yul\":13043:13072   */\n      0x6861686120436f6e74726163742063616e27742063616c6c206d650000000000\n        /* \"#utility.yul\":13023:13041   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13016:13073   */\n      mstore\n        /* \"#utility.yul\":13090:13108   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4493:4556  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n      tag_208\n        /* \"#utility.yul\":12763:13114   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4493:4556  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n    tag_317:\n        /* \"ERC721A/MintNagaKids.sol\":4590:4600  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":5221:5225  bool */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":5244:5266  _isPublicMinted[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5244:5259  _isPublicMinted */\n      0x08\n        /* \"ERC721A/MintNagaKids.sol\":5244:5266  _isPublicMinted[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ERC721A/MintNagaKids.sol\":4575:4609  isPublicMinted(msg.sender) != true */\n      iszero\n      iszero\n        /* \"ERC721A/MintNagaKids.sol\":4605:4609  true */\n      0x01\n        /* \"ERC721A/MintNagaKids.sol\":4575:4609  isPublicMinted(msg.sender) != true */\n      sub\n        /* \"ERC721A/MintNagaKids.sol\":4567:4637  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13321:13323   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4567:4637  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13303:13324   */\n      mstore\n        /* \"#utility.yul\":13360:13362   */\n      0x17\n        /* \"#utility.yul\":13340:13358   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13333:13363   */\n      mstore\n      shl(0x49, 0x2cb7ba9030b9329030b63932b0b23c9036b4b73a32b217)\n        /* \"#utility.yul\":13379:13397   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13372:13425   */\n      mstore\n        /* \"#utility.yul\":13442:13460   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4567:4637  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n      tag_208\n        /* \"#utility.yul\":13119:13466   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4567:4637  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n    tag_321:\n        /* \"ERC721A/MintNagaKids.sol\":4727:4742  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":4727:4766  nagaKidContract.isMinter(address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x55138f0d)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4760:4764  this */\n      address\n        /* \"ERC721A/MintNagaKids.sol\":4727:4766  nagaKidContract.isMinter(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":730:781   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":4727:4742  nagaKidContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":4727:4751  nagaKidContract.isMinter */\n      0xaa271e1a\n      swap1\n        /* \"#utility.yul\":703:721   */\n      0x24\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4727:4766  nagaKidContract.isMinter(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_326\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_326:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_327\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_327:\n        /* \"ERC721A/MintNagaKids.sol\":4719:4801  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13673:13675   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4719:4801  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13655:13676   */\n      mstore\n        /* \"#utility.yul\":13712:13714   */\n      0x1e\n        /* \"#utility.yul\":13692:13710   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13685:13715   */\n      mstore\n        /* \"#utility.yul\":13751:13783   */\n      0x436f6e7472616374204d696e74206973206e6f7420617070726f7665642e0000\n        /* \"#utility.yul\":13731:13749   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13724:13784   */\n      mstore\n        /* \"#utility.yul\":13801:13819   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4719:4801  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      tag_208\n        /* \"#utility.yul\":13471:13825   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4719:4801  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n    tag_328:\n        /* \"ERC721A/MintNagaKids.sol\":4820:4850  verify(signer,msg.sender,_sig) */\n      tag_331\n        /* \"ERC721A/MintNagaKids.sol\":4827:4833  signer */\n      0x05\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC721A/MintNagaKids.sol\":4834:4844  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":4845:4849  _sig */\n      dup5\n      dup5\n        /* \"ERC721A/MintNagaKids.sol\":4820:4850  verify(signer,msg.sender,_sig) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4820:4826  verify */\n      tag_69\n      swap3\n      pop\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4820:4850  verify(signer,msg.sender,_sig) */\n      jump\t// in\n    tag_331:\n        /* \"ERC721A/MintNagaKids.sol\":4812:4889  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14032:14034   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4812:4889  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14014:14035   */\n      mstore\n        /* \"#utility.yul\":14071:14073   */\n      0x22\n        /* \"#utility.yul\":14051:14069   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14044:14074   */\n      mstore\n        /* \"#utility.yul\":14110:14144   */\n      0x556e617574686f72697a6564205075626c69634d696e74205468697320557365\n        /* \"#utility.yul\":14090:14108   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14083:14145   */\n      mstore\n      shl(0xf1, 0x3917)\n        /* \"#utility.yul\":14161:14179   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14154:14186   */\n      mstore\n        /* \"#utility.yul\":14203:14222   */\n      0x84\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4812:4889  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n      tag_208\n        /* \"#utility.yul\":13830:14228   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4812:4889  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n    tag_332:\n        /* \"ERC721A/MintNagaKids.sol\":4997:5007  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":4948:4963  uint256 _amount */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":4981:5008  _isPublicMinted[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4981:4996  _isPublicMinted */\n      0x08\n        /* \"ERC721A/MintNagaKids.sol\":4981:5008  _isPublicMinted[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":4981:5015  _isPublicMinted[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ERC721A/MintNagaKids.sol\":4966:4967  1 */\n      0x01\n        /* \"ERC721A/MintNagaKids.sol\":4981:5015  _isPublicMinted[msg.sender] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":5026:5041  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":5026:5070  nagaKidContract.safeMint(msg.sender,_amount) */\n      swap2\n      mload\n      shl(0xe2, 0x28512065)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":9413:9464   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":9480:9498   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":9473:9507   */\n      dup2\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4966:4967  1 */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":5026:5041  nagaKidContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":5026:5050  nagaKidContract.safeMint */\n      0xa1448194\n      swap1\n        /* \"#utility.yul\":9386:9404   */\n      0x44\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5026:5070  nagaKidContract.safeMint(msg.sender,_amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_336\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_336:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_338:\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5096:5144  PublicMinted(msg.sender,_amount,block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9160:9185   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5128:5143  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":9216:9218   */\n      0x20\n        /* \"#utility.yul\":9201:9219   */\n      dup3\n      add\n        /* \"#utility.yul\":9194:9228   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5109:5119  msg.sender */\n      caller\n      swap4\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5096:5144  PublicMinted(msg.sender,_amount,block.timestamp) */\n      0xc1a73b31b32801ebbb4cae30b73eae4345be9f2915ea60306383c245ef8fac44\n      swap3\n      pop\n        /* \"#utility.yul\":9133:9151   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5096:5144  PublicMinted(msg.sender,_amount,block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4339:5154  function publicMint(bytes calldata _sig) public payable nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_345:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14688:14690   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14670:14691   */\n      mstore\n        /* \"#utility.yul\":14727:14729   */\n      0x26\n        /* \"#utility.yul\":14707:14725   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14700:14730   */\n      mstore\n        /* \"#utility.yul\":14766:14800   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":14746:14764   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14739:14801   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":14817:14835   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14810:14846   */\n      mstore\n        /* \"#utility.yul\":14863:14882   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_208\n        /* \"#utility.yul\":14486:14888   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_348:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_351\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":3336:4331  function allowlistMint(bytes32[] calldata _proof, uint256 _amount, bytes32 _round) public payable nonReentrant {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      mstore\n        /* \"#utility.yul\":12291:12293   */\n      0x1f\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12363   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12364   */\n      mstore\n        /* \"#utility.yul\":12381:12399   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_208\n        /* \"#utility.yul\":12050:12405   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_353:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      swap1\n      dup2\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":3466:3483  isPrivateMintOpen */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC721A/MintNagaKids.sol\":3466:3491  isPrivateMintOpen == true */\n      iszero\n      iszero\n      eq\n        /* \"ERC721A/MintNagaKids.sol\":3458:3520  require(isPrivateMintOpen == true,\"Private mint is not open.\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15095:15097   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3458:3520  require(isPrivateMintOpen == true,\"Private mint is not open.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15077:15098   */\n      mstore\n        /* \"#utility.yul\":15134:15136   */\n      0x19\n        /* \"#utility.yul\":15114:15132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15107:15137   */\n      mstore\n        /* \"#utility.yul\":15173:15200   */\n      0x50726976617465206d696e74206973206e6f74206f70656e2e00000000000000\n        /* \"#utility.yul\":15153:15171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15146:15201   */\n      mstore\n        /* \"#utility.yul\":15218:15236   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3458:3520  require(isPrivateMintOpen == true,\"Private mint is not open.\") */\n      tag_208\n        /* \"#utility.yul\":14893:15242   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3458:3520  require(isPrivateMintOpen == true,\"Private mint is not open.\") */\n    tag_356:\n        /* \"ERC721A/MintNagaKids.sol\":3539:3545  _round */\n      dup1\n        /* \"ERC721A/MintNagaKids.sol\":3531:3581  require(_round != DEFAULT,\"Mint is not approved.\") */\n      tag_359\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15449:15451   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3531:3581  require(_round != DEFAULT,\"Mint is not approved.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15431:15452   */\n      mstore\n        /* \"#utility.yul\":15488:15490   */\n      0x15\n        /* \"#utility.yul\":15468:15486   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15461:15491   */\n      mstore\n      shl(0x59, 0x26b4b73a1034b9903737ba1030b8383937bb32b217)\n        /* \"#utility.yul\":15507:15525   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15500:15551   */\n      mstore\n        /* \"#utility.yul\":15568:15586   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3531:3581  require(_round != DEFAULT,\"Mint is not approved.\") */\n      tag_208\n        /* \"#utility.yul\":15247:15592   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3531:3581  require(_round != DEFAULT,\"Mint is not approved.\") */\n    tag_359:\n        /* \"ERC721A/MintNagaKids.sol\":3620:3626  _round */\n      dup1\n        /* \"ERC721A/MintNagaKids.sol\":3600:3616  currentMintRound */\n      sload(0x03)\n        /* \"ERC721A/MintNagaKids.sol\":3600:3626  currentMintRound == _round */\n      eq\n        /* \"ERC721A/MintNagaKids.sol\":3592:3670  require(currentMintRound == _round, \"Contract are not in this minting round.\") */\n      tag_362\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15799:15801   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3592:3670  require(currentMintRound == _round, \"Contract are not in this minting round.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15781:15802   */\n      mstore\n        /* \"#utility.yul\":15838:15840   */\n      0x27\n        /* \"#utility.yul\":15818:15836   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15811:15841   */\n      mstore\n        /* \"#utility.yul\":15877:15911   */\n      0x436f6e747261637420617265206e6f7420696e2074686973206d696e74696e67\n        /* \"#utility.yul\":15857:15875   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15850:15912   */\n      mstore\n      shl(0xc9, 0x103937bab73217)\n        /* \"#utility.yul\":15928:15946   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15921:15958   */\n      mstore\n        /* \"#utility.yul\":15975:15994   */\n      0x84\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3592:3670  require(currentMintRound == _round, \"Contract are not in this minting round.\") */\n      tag_208\n        /* \"#utility.yul\":15597:16000   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3592:3670  require(currentMintRound == _round, \"Contract are not in this minting round.\") */\n    tag_362:\n        /* \"ERC721A/MintNagaKids.sol\":3718:3732  getMaxSupply() */\n      tag_365\n        /* \"ERC721A/MintNagaKids.sol\":3718:3730  getMaxSupply */\n      tag_74\n        /* \"ERC721A/MintNagaKids.sol\":3718:3732  getMaxSupply() */\n      jump\t// in\n    tag_365:\n        /* \"ERC721A/MintNagaKids.sol\":3708:3715  _amount */\n      dup3\n        /* \"ERC721A/MintNagaKids.sol\":3689:3705  getTotalSupply() */\n      tag_366\n        /* \"ERC721A/MintNagaKids.sol\":3689:3703  getTotalSupply */\n      tag_141\n        /* \"ERC721A/MintNagaKids.sol\":3689:3705  getTotalSupply() */\n      jump\t// in\n    tag_366:\n        /* \"ERC721A/MintNagaKids.sol\":3689:3715  getTotalSupply() + _amount */\n      tag_367\n      swap2\n      swap1\n      tag_368\n      jump\t// in\n    tag_367:\n        /* \"ERC721A/MintNagaKids.sol\":3689:3732  getTotalSupply() + _amount < getMaxSupply() */\n      lt\n        /* \"ERC721A/MintNagaKids.sol\":3681:3748  require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16472:16474   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3681:3748  require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16454:16475   */\n      mstore\n        /* \"#utility.yul\":16511:16513   */\n      0x0b\n        /* \"#utility.yul\":16491:16509   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16484:16514   */\n      mstore\n      shl(0xa8, 0x4f76657220737570706c79)\n        /* \"#utility.yul\":16530:16548   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16523:16564   */\n      mstore\n        /* \"#utility.yul\":16581:16599   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3681:3748  require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\") */\n      tag_208\n        /* \"#utility.yul\":16270:16605   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3681:3748  require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\") */\n    tag_369:\n        /* \"ERC721A/MintNagaKids.sol\":3780:3790  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":6436:6440  bool */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":6460:6480  _isUserMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6460:6473  _isUserMinted */\n      0x06\n        /* \"ERC721A/MintNagaKids.sol\":6460:6480  _isUserMinted[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":6460:6488  _isUserMinted[_user][_round] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ERC721A/MintNagaKids.sol\":3767:3807  isUserMinted(msg.sender,_round) == false */\n      iszero\n        /* \"ERC721A/MintNagaKids.sol\":3759:3835  require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\") */\n      tag_373\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13321:13323   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3759:3835  require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13303:13324   */\n      mstore\n        /* \"#utility.yul\":13360:13362   */\n      0x17\n        /* \"#utility.yul\":13340:13358   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13333:13363   */\n      mstore\n      shl(0x49, 0x2cb7ba9030b9329030b63932b0b23c9036b4b73a32b217)\n        /* \"#utility.yul\":13379:13397   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13372:13425   */\n      mstore\n        /* \"#utility.yul\":13442:13460   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3759:3835  require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\") */\n      tag_208\n        /* \"#utility.yul\":13119:13466   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3759:3835  require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\") */\n    tag_373:\n        /* \"ERC721A/MintNagaKids.sol\":3854:3869  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":3854:3893  nagaKidContract.isMinter(address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x55138f0d)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3887:3891  this */\n      address\n        /* \"ERC721A/MintNagaKids.sol\":3854:3893  nagaKidContract.isMinter(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":730:781   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":3854:3869  nagaKidContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":3854:3878  nagaKidContract.isMinter */\n      0xaa271e1a\n      swap1\n        /* \"#utility.yul\":703:721   */\n      0x24\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3854:3893  nagaKidContract.isMinter(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_377\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_377:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_378\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_378:\n        /* \"ERC721A/MintNagaKids.sol\":3846:3928  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13673:13675   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3846:3928  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13655:13676   */\n      mstore\n        /* \"#utility.yul\":13712:13714   */\n      0x1e\n        /* \"#utility.yul\":13692:13710   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13685:13715   */\n      mstore\n        /* \"#utility.yul\":13751:13783   */\n      0x436f6e7472616374204d696e74206973206e6f7420617070726f7665642e0000\n        /* \"#utility.yul\":13731:13749   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13724:13784   */\n      mstore\n        /* \"#utility.yul\":13801:13819   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3846:3928  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      tag_208\n        /* \"#utility.yul\":13471:13825   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3846:3928  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n    tag_379:\n        /* \"ERC721A/MintNagaKids.sol\":3947:4043  MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))) */\n      tag_381\n        /* \"ERC721A/MintNagaKids.sol\":3966:3972  _proof */\n      dup5\n      dup5\n        /* \"ERC721A/MintNagaKids.sol\":3947:4043  MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":3974:3984  merkleRoot */\n      sload(0x04)\n        /* \"ERC721A/MintNagaKids.sol\":3996:4041  abi.encodePacked(msg.sender, _amount, _round) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"ERC721A/MintNagaKids.sol\":4013:4023  msg.sender */\n      caller\n        /* \"#utility.yul\":16815:16817   */\n      0x60\n        /* \"#utility.yul\":16811:16826   */\n      shl\n        /* \"#utility.yul\":16807:16860   */\n      and\n        /* \"ERC721A/MintNagaKids.sol\":3996:4041  abi.encodePacked(msg.sender, _amount, _round) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":16795:16861   */\n      mstore\n        /* \"#utility.yul\":16877:16889   */\n      0x34\n      dup2\n      add\n        /* \"#utility.yul\":16870:16898   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":16914:16926   */\n      0x54\n      dup2\n      add\n        /* \"#utility.yul\":16907:16935   */\n      dup8\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3974:3984  merkleRoot */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":16951:16963   */\n      0x74\n      add\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":3996:4041  abi.encodePacked(msg.sender, _amount, _round) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3986:4042  keccak256(abi.encodePacked(msg.sender, _amount, _round)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":3947:3965  MerkleProof.verify */\n      tag_384\n        /* \"ERC721A/MintNagaKids.sol\":3947:4043  MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))) */\n      jump\t// in\n    tag_381:\n        /* \"ERC721A/MintNagaKids.sol\":3939:4085  require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17176:17178   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3939:4085  require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17158:17179   */\n      mstore\n        /* \"#utility.yul\":17215:17217   */\n      0x25\n        /* \"#utility.yul\":17195:17213   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17188:17218   */\n      mstore\n        /* \"#utility.yul\":17254:17288   */\n      0x556e617574686f72697a65642057686974656c6973744d696e74205468697320\n        /* \"#utility.yul\":17234:17252   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17227:17289   */\n      mstore\n      shl(0xd9, 0x2ab9b2b917)\n        /* \"#utility.yul\":17305:17323   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17298:17333   */\n      mstore\n        /* \"#utility.yul\":17350:17369   */\n      0x84\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3939:4085  require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\") */\n      tag_208\n        /* \"#utility.yul\":16974:17375   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3939:4085  require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\") */\n    tag_385:\n        /* \"ERC721A/MintNagaKids.sol\":4112:4122  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":4098:4123  _isUserMinted[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4098:4111  _isUserMinted */\n      0x06\n        /* \"ERC721A/MintNagaKids.sol\":4098:4123  _isUserMinted[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":4098:4131  _isUserMinted[msg.sender][_round] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":4098:4138  _isUserMinted[msg.sender][_round] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ERC721A/MintNagaKids.sol\":4134:4138  true */\n      0x01\n        /* \"ERC721A/MintNagaKids.sol\":4098:4138  _isUserMinted[msg.sender][_round] = true */\n      or\n      swap1\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":4149:4178  _userMintedAmount[msg.sender] */\n      swap3\n      dup3\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4149:4166  _userMintedAmount */\n      0x07\n        /* \"ERC721A/MintNagaKids.sol\":4149:4178  _userMintedAmount[msg.sender] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":4149:4186  _userMintedAmount[msg.sender][_round] */\n      dup5\n      dup4\n      mstore\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":4149:4197  _userMintedAmount[msg.sender][_round] += _amount */\n      dup1\n      sload\n        /* \"ERC721A/MintNagaKids.sol\":4190:4197  _amount */\n      dup5\n      swap3\n        /* \"ERC721A/MintNagaKids.sol\":4098:4123  _isUserMinted[msg.sender] */\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":4149:4197  _userMintedAmount[msg.sender][_round] += _amount */\n      tag_388\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":4190:4197  _amount */\n      dup5\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":4149:4197  _userMintedAmount[msg.sender][_round] += _amount */\n      tag_368\n      jump\t// in\n    tag_388:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4210:4225  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":4210:4254  nagaKidContract.safeMint(msg.sender,_amount) */\n      mload(0x40)\n      shl(0xe2, 0x28512065)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4235:4245  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":4210:4254  nagaKidContract.safeMint(msg.sender,_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9413:9464   */\n      mstore\n        /* \"#utility.yul\":9480:9498   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9473:9507   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":4210:4225  nagaKidContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":4210:4234  nagaKidContract.safeMint */\n      0xa1448194\n      swap1\n        /* \"#utility.yul\":9386:9404   */\n      0x44\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4210:4254  nagaKidContract.safeMint(msg.sender,_amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_390\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_390:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_392\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_392:\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4272:4323  PrivateMinted(msg.sender, _amount, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9160:9185   */\n      dup6\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4307:4322  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":9216:9218   */\n      0x20\n        /* \"#utility.yul\":9201:9219   */\n      dup3\n      add\n        /* \"#utility.yul\":9194:9228   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4286:4296  msg.sender */\n      caller\n      swap4\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4272:4323  PrivateMinted(msg.sender, _amount, block.timestamp) */\n      0xe9e607753e80542a9021d5149990f18919907f0136fad424eaac3d15056ccf6e\n      swap3\n      pop\n        /* \"#utility.yul\":9133:9151   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4272:4323  PrivateMinted(msg.sender, _amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":3336:4331  function allowlistMint(bytes32[] calldata _proof, uint256 _amount, bytes32 _round) public payable nonReentrant {... */\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_180:\n        /* \"ERC721A/VerifySignature.sol\":611:738  abi.encodePacked(... */\n      mload(0x40)\n        /* \"#utility.yul\":17622:17688   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"ERC721A/VerifySignature.sol\":611:738  abi.encodePacked(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":17610:17689   */\n      mstore\n        /* \"#utility.yul\":17705:17717   */\n      0x3c\n      dup2\n      add\n        /* \"#utility.yul\":17698:17726   */\n      dup3\n      swap1\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":370:377  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":17742:17754   */\n      0x5c\n      add\n        /* \"ERC721A/VerifySignature.sol\":611:738  abi.encodePacked(... */\n      tag_192\n        /* \"#utility.yul\":17380:17760   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":2711:2908  function setRound(bytes32 _round) public onlyOwner {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_400\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_400:\n        /* \"ERC721A/MintNagaKids.sol\":2796:2812  currentMintRound */\n      0x03\n      dup1\n      sload\n        /* \"ERC721A/MintNagaKids.sol\":2823:2848  currentMintRound = _round */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":2866:2900  RoundChanged(_roundBefore, _round) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9160:9185   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":9216:9218   */\n      0x20\n        /* \"#utility.yul\":9201:9219   */\n      dup2\n      add\n        /* \"#utility.yul\":9194:9228   */\n      dup5\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":2866:2900  RoundChanged(_roundBefore, _round) */\n      0x521ec96875ca228cd2fc1dbd4c927a34328c9ce1a83bcb8c1f633f012c90d785\n      swap2\n        /* \"#utility.yul\":9133:9151   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":2866:2900  RoundChanged(_roundBefore, _round) */\n      tag_228\n        /* \"#utility.yul\":8986:9234   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1154:1338  function verify(... */\n    tag_384:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1275:1279  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1327:1331  root */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1323  processProof(proof, leaf) */\n      tag_408\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1311:1316  proof */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1318:1322  leaf */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1310  processProof */\n      tag_409\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1323  processProof(proof, leaf) */\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1331  processProof(proof, leaf) == root */\n      eq\n      swap5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1154:1338  function verify(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1689:2351  function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {... */\n    tag_409:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1772:1779  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1814:1818  leaf */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1772:1779  bytes32 */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n    tag_411:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1852:1857  proof */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1852:1864  proof.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1848:1849  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1848:1864  i < proof.length */\n      lt\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n      iszero\n      tag_412\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1885:1905  bytes32 proofElement */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1908:1913  proof */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1914:1915  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1908:1916  proof[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_415\n      jumpi\n      tag_415\n      tag_416\n      jump\t// in\n    tag_415:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1885:1916  bytes32 proofElement = proof[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1950:1962  proofElement */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1934:1946  computedHash */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1934:1962  computedHash <= proofElement */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n      tag_417\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2425:2438  bytes32 value */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2473:2488  mstore(0x00, a) */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2508:2512  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2501:2516  mstore(0x20, b) */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2554:2558  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2538:2559  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2060:2117  computedHash = _efficientHash(computedHash, proofElement) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n      jump(tag_420)\n    tag_417:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2425:2438  bytes32 value */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2473:2488  mstore(0x00, a) */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2508:2512  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2501:2516  mstore(0x20, b) */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2554:2558  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2538:2559  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2234:2291  computedHash = _efficientHash(proofElement, computedHash) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n    tag_420:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1866:1869  i++ */\n      dup1\n      tag_422\n      dup2\n      tag_423\n      jump\t// in\n    tag_422:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n      jump(tag_411)\n    tag_412:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2332:2344  computedHash */\n      swap4\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1689:2351  function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:327   */\n    tag_425:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":271:302   */\n      dup2\n      and\n        /* \"#utility.yul\":261:303   */\n      dup2\n      eq\n        /* \"#utility.yul\":251:321   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":332:579   */\n    tag_49:\n        /* \"#utility.yul\":391:397   */\n      0x00\n        /* \"#utility.yul\":444:446   */\n      0x20\n        /* \"#utility.yul\":432:441   */\n      dup3\n        /* \"#utility.yul\":423:430   */\n      dup5\n        /* \"#utility.yul\":419:442   */\n      sub\n        /* \"#utility.yul\":415:447   */\n      slt\n        /* \"#utility.yul\":412:464   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":460:461   */\n      0x00\n        /* \"#utility.yul\":457:458   */\n      dup1\n        /* \"#utility.yul\":450:462   */\n      revert\n        /* \"#utility.yul\":412:464   */\n    tag_434:\n        /* \"#utility.yul\":499:508   */\n      dup2\n        /* \"#utility.yul\":486:509   */\n      calldataload\n        /* \"#utility.yul\":518:549   */\n      tag_435\n        /* \"#utility.yul\":543:548   */\n      dup2\n        /* \"#utility.yul\":518:549   */\n      tag_425\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":568:573   */\n      swap4\n        /* \"#utility.yul\":332:579   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":792:919   */\n    tag_426:\n        /* \"#utility.yul\":853:863   */\n      0x4e487b71\n        /* \"#utility.yul\":848:851   */\n      0xe0\n        /* \"#utility.yul\":844:864   */\n      shl\n        /* \"#utility.yul\":841:842   */\n      0x00\n        /* \"#utility.yul\":834:865   */\n      mstore\n        /* \"#utility.yul\":884:888   */\n      0x41\n        /* \"#utility.yul\":881:882   */\n      0x04\n        /* \"#utility.yul\":874:889   */\n      mstore\n        /* \"#utility.yul\":908:912   */\n      0x24\n        /* \"#utility.yul\":905:906   */\n      0x00\n        /* \"#utility.yul\":898:913   */\n      revert\n        /* \"#utility.yul\":924:1642   */\n    tag_427:\n        /* \"#utility.yul\":966:971   */\n      0x00\n        /* \"#utility.yul\":1019:1022   */\n      dup3\n        /* \"#utility.yul\":1012:1016   */\n      0x1f\n        /* \"#utility.yul\":1004:1010   */\n      dup4\n        /* \"#utility.yul\":1000:1017   */\n      add\n        /* \"#utility.yul\":996:1023   */\n      slt\n        /* \"#utility.yul\":986:1041   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":1037:1038   */\n      0x00\n        /* \"#utility.yul\":1034:1035   */\n      dup1\n        /* \"#utility.yul\":1027:1039   */\n      revert\n        /* \"#utility.yul\":986:1041   */\n    tag_439:\n        /* \"#utility.yul\":1073:1079   */\n      dup2\n        /* \"#utility.yul\":1060:1080   */\n      calldataload\n        /* \"#utility.yul\":1099:1117   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1136:1138   */\n      dup1\n        /* \"#utility.yul\":1132:1134   */\n      dup3\n        /* \"#utility.yul\":1129:1139   */\n      gt\n        /* \"#utility.yul\":1126:1162   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":1142:1160   */\n      tag_441\n      tag_426\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":1217:1219   */\n      0x40\n        /* \"#utility.yul\":1211:1220   */\n      mload\n        /* \"#utility.yul\":1185:1187   */\n      0x1f\n        /* \"#utility.yul\":1271:1284   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1267:1289   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1291:1293   */\n      0x3f\n        /* \"#utility.yul\":1263:1294   */\n      add\n        /* \"#utility.yul\":1259:1299   */\n      and\n        /* \"#utility.yul\":1247:1300   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1315:1333   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":1335:1357   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1312:1358   */\n      or\n        /* \"#utility.yul\":1309:1381   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":1361:1379   */\n      tag_443\n      tag_426\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":1401:1411   */\n      dup2\n        /* \"#utility.yul\":1397:1399   */\n      0x40\n        /* \"#utility.yul\":1390:1412   */\n      mstore\n        /* \"#utility.yul\":1436:1438   */\n      dup4\n        /* \"#utility.yul\":1428:1434   */\n      dup2\n        /* \"#utility.yul\":1421:1439   */\n      mstore\n        /* \"#utility.yul\":1482:1485   */\n      dup7\n        /* \"#utility.yul\":1475:1479   */\n      0x20\n        /* \"#utility.yul\":1470:1472   */\n      dup6\n        /* \"#utility.yul\":1462:1468   */\n      dup9\n        /* \"#utility.yul\":1458:1473   */\n      add\n        /* \"#utility.yul\":1454:1480   */\n      add\n        /* \"#utility.yul\":1451:1486   */\n      gt\n        /* \"#utility.yul\":1448:1503   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":1499:1500   */\n      0x00\n        /* \"#utility.yul\":1496:1497   */\n      dup1\n        /* \"#utility.yul\":1489:1501   */\n      revert\n        /* \"#utility.yul\":1448:1503   */\n    tag_444:\n        /* \"#utility.yul\":1563:1565   */\n      dup4\n        /* \"#utility.yul\":1556:1560   */\n      0x20\n        /* \"#utility.yul\":1548:1554   */\n      dup8\n        /* \"#utility.yul\":1544:1561   */\n      add\n        /* \"#utility.yul\":1537:1541   */\n      0x20\n        /* \"#utility.yul\":1529:1535   */\n      dup4\n        /* \"#utility.yul\":1525:1542   */\n      add\n        /* \"#utility.yul\":1512:1566   */\n      calldatacopy\n        /* \"#utility.yul\":1610:1611   */\n      0x00\n        /* \"#utility.yul\":1603:1607   */\n      0x20\n        /* \"#utility.yul\":1598:1600   */\n      dup6\n        /* \"#utility.yul\":1590:1596   */\n      dup4\n        /* \"#utility.yul\":1586:1601   */\n      add\n        /* \"#utility.yul\":1582:1608   */\n      add\n        /* \"#utility.yul\":1575:1612   */\n      mstore\n        /* \"#utility.yul\":1630:1636   */\n      dup1\n        /* \"#utility.yul\":1621:1636   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":924:1642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1647:2243   */\n    tag_68:\n        /* \"#utility.yul\":1733:1739   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup1\n        /* \"#utility.yul\":1749:1755   */\n      0x00\n        /* \"#utility.yul\":1802:1804   */\n      0x60\n        /* \"#utility.yul\":1790:1799   */\n      dup5\n        /* \"#utility.yul\":1781:1788   */\n      dup7\n        /* \"#utility.yul\":1777:1800   */\n      sub\n        /* \"#utility.yul\":1773:1805   */\n      slt\n        /* \"#utility.yul\":1770:1822   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":1818:1819   */\n      0x00\n        /* \"#utility.yul\":1815:1816   */\n      dup1\n        /* \"#utility.yul\":1808:1820   */\n      revert\n        /* \"#utility.yul\":1770:1822   */\n    tag_446:\n        /* \"#utility.yul\":1857:1866   */\n      dup4\n        /* \"#utility.yul\":1844:1867   */\n      calldataload\n        /* \"#utility.yul\":1876:1907   */\n      tag_447\n        /* \"#utility.yul\":1901:1906   */\n      dup2\n        /* \"#utility.yul\":1876:1907   */\n      tag_425\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":1926:1931   */\n      swap3\n      pop\n        /* \"#utility.yul\":1983:1985   */\n      0x20\n        /* \"#utility.yul\":1968:1986   */\n      dup5\n      add\n        /* \"#utility.yul\":1955:1987   */\n      calldataload\n        /* \"#utility.yul\":1996:2029   */\n      tag_448\n        /* \"#utility.yul\":1955:1987   */\n      dup2\n        /* \"#utility.yul\":1996:2029   */\n      tag_425\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":2048:2055   */\n      swap2\n      pop\n        /* \"#utility.yul\":2106:2108   */\n      0x40\n        /* \"#utility.yul\":2091:2109   */\n      dup5\n      add\n        /* \"#utility.yul\":2078:2110   */\n      calldataload\n        /* \"#utility.yul\":2133:2151   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2122:2152   */\n      dup2\n      gt\n        /* \"#utility.yul\":2119:2169   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":2165:2166   */\n      0x00\n        /* \"#utility.yul\":2162:2163   */\n      dup1\n        /* \"#utility.yul\":2155:2167   */\n      revert\n        /* \"#utility.yul\":2119:2169   */\n    tag_449:\n        /* \"#utility.yul\":2188:2237   */\n      tag_450\n        /* \"#utility.yul\":2229:2236   */\n      dup7\n        /* \"#utility.yul\":2220:2226   */\n      dup3\n        /* \"#utility.yul\":2209:2218   */\n      dup8\n        /* \"#utility.yul\":2205:2227   */\n      add\n        /* \"#utility.yul\":2188:2237   */\n      tag_427\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":2178:2237   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1647:2243   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2622:2802   */\n    tag_91:\n        /* \"#utility.yul\":2681:2687   */\n      0x00\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2722:2731   */\n      dup3\n        /* \"#utility.yul\":2713:2720   */\n      dup5\n        /* \"#utility.yul\":2709:2732   */\n      sub\n        /* \"#utility.yul\":2705:2737   */\n      slt\n        /* \"#utility.yul\":2702:2754   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":2750:2751   */\n      0x00\n        /* \"#utility.yul\":2747:2748   */\n      dup1\n        /* \"#utility.yul\":2740:2752   */\n      revert\n        /* \"#utility.yul\":2702:2754   */\n    tag_454:\n      pop\n        /* \"#utility.yul\":2773:2796   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2622:2802   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2807:3195   */\n    tag_96:\n        /* \"#utility.yul\":2875:2881   */\n      0x00\n        /* \"#utility.yul\":2883:2889   */\n      dup1\n        /* \"#utility.yul\":2936:2938   */\n      0x40\n        /* \"#utility.yul\":2924:2933   */\n      dup4\n        /* \"#utility.yul\":2915:2922   */\n      dup6\n        /* \"#utility.yul\":2911:2934   */\n      sub\n        /* \"#utility.yul\":2907:2939   */\n      slt\n        /* \"#utility.yul\":2904:2956   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":2952:2953   */\n      0x00\n        /* \"#utility.yul\":2949:2950   */\n      dup1\n        /* \"#utility.yul\":2942:2954   */\n      revert\n        /* \"#utility.yul\":2904:2956   */\n    tag_456:\n        /* \"#utility.yul\":2991:3000   */\n      dup3\n        /* \"#utility.yul\":2978:3001   */\n      calldataload\n        /* \"#utility.yul\":3010:3041   */\n      tag_457\n        /* \"#utility.yul\":3035:3040   */\n      dup2\n        /* \"#utility.yul\":3010:3041   */\n      tag_425\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":3060:3065   */\n      swap2\n      pop\n        /* \"#utility.yul\":3117:3119   */\n      0x20\n        /* \"#utility.yul\":3102:3120   */\n      dup4\n      add\n        /* \"#utility.yul\":3089:3121   */\n      calldataload\n        /* \"#utility.yul\":3130:3163   */\n      tag_458\n        /* \"#utility.yul\":3089:3121   */\n      dup2\n        /* \"#utility.yul\":3130:3163   */\n      tag_425\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3182:3189   */\n      dup1\n        /* \"#utility.yul\":3172:3189   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2807:3195   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3200:3588   */\n    tag_109:\n        /* \"#utility.yul\":3277:3283   */\n      0x00\n        /* \"#utility.yul\":3285:3291   */\n      dup1\n        /* \"#utility.yul\":3338:3340   */\n      0x40\n        /* \"#utility.yul\":3326:3335   */\n      dup4\n        /* \"#utility.yul\":3317:3324   */\n      dup6\n        /* \"#utility.yul\":3313:3336   */\n      sub\n        /* \"#utility.yul\":3309:3341   */\n      slt\n        /* \"#utility.yul\":3306:3358   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":3354:3355   */\n      0x00\n        /* \"#utility.yul\":3351:3352   */\n      dup1\n        /* \"#utility.yul\":3344:3356   */\n      revert\n        /* \"#utility.yul\":3306:3358   */\n    tag_460:\n        /* \"#utility.yul\":3390:3399   */\n      dup3\n        /* \"#utility.yul\":3377:3400   */\n      calldataload\n        /* \"#utility.yul\":3367:3400   */\n      swap2\n      pop\n        /* \"#utility.yul\":3451:3453   */\n      0x20\n        /* \"#utility.yul\":3440:3449   */\n      dup4\n        /* \"#utility.yul\":3436:3454   */\n      add\n        /* \"#utility.yul\":3423:3455   */\n      calldataload\n        /* \"#utility.yul\":3478:3496   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3470:3476   */\n      dup2\n        /* \"#utility.yul\":3467:3497   */\n      gt\n        /* \"#utility.yul\":3464:3514   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":3510:3511   */\n      0x00\n        /* \"#utility.yul\":3507:3508   */\n      dup1\n        /* \"#utility.yul\":3500:3512   */\n      revert\n        /* \"#utility.yul\":3464:3514   */\n    tag_461:\n        /* \"#utility.yul\":3533:3582   */\n      tag_462\n        /* \"#utility.yul\":3574:3581   */\n      dup6\n        /* \"#utility.yul\":3565:3571   */\n      dup3\n        /* \"#utility.yul\":3554:3563   */\n      dup7\n        /* \"#utility.yul\":3550:3572   */\n      add\n        /* \"#utility.yul\":3533:3582   */\n      tag_427\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3523:3582   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3200:3588   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3861:4181   */\n    tag_124:\n        /* \"#utility.yul\":3929:3935   */\n      0x00\n        /* \"#utility.yul\":3982:3984   */\n      0x20\n        /* \"#utility.yul\":3970:3979   */\n      dup3\n        /* \"#utility.yul\":3961:3968   */\n      dup5\n        /* \"#utility.yul\":3957:3980   */\n      sub\n        /* \"#utility.yul\":3953:3985   */\n      slt\n        /* \"#utility.yul\":3950:4002   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":3998:3999   */\n      0x00\n        /* \"#utility.yul\":3995:3996   */\n      dup1\n        /* \"#utility.yul\":3988:4000   */\n      revert\n        /* \"#utility.yul\":3950:4002   */\n    tag_467:\n        /* \"#utility.yul\":4038:4047   */\n      dup2\n        /* \"#utility.yul\":4025:4048   */\n      calldataload\n        /* \"#utility.yul\":4071:4089   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4063:4069   */\n      dup2\n        /* \"#utility.yul\":4060:4090   */\n      gt\n        /* \"#utility.yul\":4057:4107   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":4103:4104   */\n      0x00\n        /* \"#utility.yul\":4100:4101   */\n      dup1\n        /* \"#utility.yul\":4093:4105   */\n      revert\n        /* \"#utility.yul\":4057:4107   */\n    tag_468:\n        /* \"#utility.yul\":4126:4175   */\n      tag_469\n        /* \"#utility.yul\":4167:4174   */\n      dup5\n        /* \"#utility.yul\":4158:4164   */\n      dup3\n        /* \"#utility.yul\":4147:4156   */\n      dup6\n        /* \"#utility.yul\":4143:4165   */\n      add\n        /* \"#utility.yul\":4126:4175   */\n      tag_427\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4116:4175   */\n      swap5\n        /* \"#utility.yul\":3861:4181   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4517:4832   */\n    tag_131:\n        /* \"#utility.yul\":4585:4591   */\n      0x00\n        /* \"#utility.yul\":4593:4599   */\n      dup1\n        /* \"#utility.yul\":4646:4648   */\n      0x40\n        /* \"#utility.yul\":4634:4643   */\n      dup4\n        /* \"#utility.yul\":4625:4632   */\n      dup6\n        /* \"#utility.yul\":4621:4644   */\n      sub\n        /* \"#utility.yul\":4617:4649   */\n      slt\n        /* \"#utility.yul\":4614:4666   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":4662:4663   */\n      0x00\n        /* \"#utility.yul\":4659:4660   */\n      dup1\n        /* \"#utility.yul\":4652:4664   */\n      revert\n        /* \"#utility.yul\":4614:4666   */\n    tag_472:\n        /* \"#utility.yul\":4701:4710   */\n      dup3\n        /* \"#utility.yul\":4688:4711   */\n      calldataload\n        /* \"#utility.yul\":4720:4751   */\n      tag_473\n        /* \"#utility.yul\":4745:4750   */\n      dup2\n        /* \"#utility.yul\":4720:4751   */\n      tag_425\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":4770:4775   */\n      swap5\n        /* \"#utility.yul\":4822:4824   */\n      0x20\n        /* \"#utility.yul\":4807:4825   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4794:4826   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4517:4832   */\n      jump\t// out\n        /* \"#utility.yul\":4837:5293   */\n    tag_137:\n        /* \"#utility.yul\":4914:4920   */\n      0x00\n        /* \"#utility.yul\":4922:4928   */\n      dup1\n        /* \"#utility.yul\":4930:4936   */\n      0x00\n        /* \"#utility.yul\":4983:4985   */\n      0x60\n        /* \"#utility.yul\":4971:4980   */\n      dup5\n        /* \"#utility.yul\":4962:4969   */\n      dup7\n        /* \"#utility.yul\":4958:4981   */\n      sub\n        /* \"#utility.yul\":4954:4986   */\n      slt\n        /* \"#utility.yul\":4951:5003   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4996:4997   */\n      dup1\n        /* \"#utility.yul\":4989:5001   */\n      revert\n        /* \"#utility.yul\":4951:5003   */\n    tag_475:\n        /* \"#utility.yul\":5038:5047   */\n      dup4\n        /* \"#utility.yul\":5025:5048   */\n      calldataload\n        /* \"#utility.yul\":5057:5088   */\n      tag_476\n        /* \"#utility.yul\":5082:5087   */\n      dup2\n        /* \"#utility.yul\":5057:5088   */\n      tag_425\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":5107:5112   */\n      swap3\n      pop\n        /* \"#utility.yul\":5164:5166   */\n      0x20\n        /* \"#utility.yul\":5149:5167   */\n      dup5\n      add\n        /* \"#utility.yul\":5136:5168   */\n      calldataload\n        /* \"#utility.yul\":5177:5210   */\n      tag_477\n        /* \"#utility.yul\":5136:5168   */\n      dup2\n        /* \"#utility.yul\":5177:5210   */\n      tag_425\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":4837:5293   */\n      swap3\n      swap6\n        /* \"#utility.yul\":5229:5236   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5283:5285   */\n      0x40\n        /* \"#utility.yul\":5268:5286   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5255:5287   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":4837:5293   */\n      jump\t// out\n        /* \"#utility.yul\":5298:5889   */\n    tag_145:\n        /* \"#utility.yul\":5368:5374   */\n      0x00\n        /* \"#utility.yul\":5376:5382   */\n      dup1\n        /* \"#utility.yul\":5429:5431   */\n      0x20\n        /* \"#utility.yul\":5417:5426   */\n      dup4\n        /* \"#utility.yul\":5408:5415   */\n      dup6\n        /* \"#utility.yul\":5404:5427   */\n      sub\n        /* \"#utility.yul\":5400:5432   */\n      slt\n        /* \"#utility.yul\":5397:5449   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":5445:5446   */\n      0x00\n        /* \"#utility.yul\":5442:5443   */\n      dup1\n        /* \"#utility.yul\":5435:5447   */\n      revert\n        /* \"#utility.yul\":5397:5449   */\n    tag_479:\n        /* \"#utility.yul\":5485:5494   */\n      dup3\n        /* \"#utility.yul\":5472:5495   */\n      calldataload\n        /* \"#utility.yul\":5514:5532   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5555:5557   */\n      dup1\n        /* \"#utility.yul\":5547:5553   */\n      dup3\n        /* \"#utility.yul\":5544:5558   */\n      gt\n        /* \"#utility.yul\":5541:5575   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":5571:5572   */\n      0x00\n        /* \"#utility.yul\":5568:5569   */\n      dup1\n        /* \"#utility.yul\":5561:5573   */\n      revert\n        /* \"#utility.yul\":5541:5575   */\n    tag_480:\n        /* \"#utility.yul\":5609:5615   */\n      dup2\n        /* \"#utility.yul\":5598:5607   */\n      dup6\n        /* \"#utility.yul\":5594:5616   */\n      add\n        /* \"#utility.yul\":5584:5616   */\n      swap2\n      pop\n        /* \"#utility.yul\":5654:5661   */\n      dup6\n        /* \"#utility.yul\":5647:5651   */\n      0x1f\n        /* \"#utility.yul\":5643:5645   */\n      dup4\n        /* \"#utility.yul\":5639:5652   */\n      add\n        /* \"#utility.yul\":5635:5662   */\n      slt\n        /* \"#utility.yul\":5625:5680   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":5676:5677   */\n      0x00\n        /* \"#utility.yul\":5673:5674   */\n      dup1\n        /* \"#utility.yul\":5666:5678   */\n      revert\n        /* \"#utility.yul\":5625:5680   */\n    tag_481:\n        /* \"#utility.yul\":5716:5718   */\n      dup2\n        /* \"#utility.yul\":5703:5719   */\n      calldataload\n        /* \"#utility.yul\":5742:5744   */\n      dup2\n        /* \"#utility.yul\":5734:5740   */\n      dup2\n        /* \"#utility.yul\":5731:5745   */\n      gt\n        /* \"#utility.yul\":5728:5762   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":5758:5759   */\n      0x00\n        /* \"#utility.yul\":5755:5756   */\n      dup1\n        /* \"#utility.yul\":5748:5760   */\n      revert\n        /* \"#utility.yul\":5728:5762   */\n    tag_482:\n        /* \"#utility.yul\":5803:5810   */\n      dup7\n        /* \"#utility.yul\":5798:5800   */\n      0x20\n        /* \"#utility.yul\":5789:5795   */\n      dup3\n        /* \"#utility.yul\":5785:5787   */\n      dup6\n        /* \"#utility.yul\":5781:5796   */\n      add\n        /* \"#utility.yul\":5777:5801   */\n      add\n        /* \"#utility.yul\":5774:5811   */\n      gt\n        /* \"#utility.yul\":5771:5828   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":5824:5825   */\n      0x00\n        /* \"#utility.yul\":5821:5822   */\n      dup1\n        /* \"#utility.yul\":5814:5826   */\n      revert\n        /* \"#utility.yul\":5771:5828   */\n    tag_483:\n        /* \"#utility.yul\":5855:5857   */\n      0x20\n        /* \"#utility.yul\":5847:5858   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":5877:5883   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":5298:5889   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6118:6875   */\n    tag_175:\n        /* \"#utility.yul\":6222:6228   */\n      0x00\n        /* \"#utility.yul\":6230:6236   */\n      dup1\n        /* \"#utility.yul\":6238:6244   */\n      0x00\n        /* \"#utility.yul\":6246:6252   */\n      dup1\n        /* \"#utility.yul\":6299:6301   */\n      0x60\n        /* \"#utility.yul\":6287:6296   */\n      dup6\n        /* \"#utility.yul\":6278:6285   */\n      dup8\n        /* \"#utility.yul\":6274:6297   */\n      sub\n        /* \"#utility.yul\":6270:6302   */\n      slt\n        /* \"#utility.yul\":6267:6319   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":6315:6316   */\n      0x00\n        /* \"#utility.yul\":6312:6313   */\n      dup1\n        /* \"#utility.yul\":6305:6317   */\n      revert\n        /* \"#utility.yul\":6267:6319   */\n    tag_486:\n        /* \"#utility.yul\":6355:6364   */\n      dup5\n        /* \"#utility.yul\":6342:6365   */\n      calldataload\n        /* \"#utility.yul\":6384:6402   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6425:6427   */\n      dup1\n        /* \"#utility.yul\":6417:6423   */\n      dup3\n        /* \"#utility.yul\":6414:6428   */\n      gt\n        /* \"#utility.yul\":6411:6445   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":6441:6442   */\n      0x00\n        /* \"#utility.yul\":6438:6439   */\n      dup1\n        /* \"#utility.yul\":6431:6443   */\n      revert\n        /* \"#utility.yul\":6411:6445   */\n    tag_487:\n        /* \"#utility.yul\":6479:6485   */\n      dup2\n        /* \"#utility.yul\":6468:6477   */\n      dup8\n        /* \"#utility.yul\":6464:6486   */\n      add\n        /* \"#utility.yul\":6454:6486   */\n      swap2\n      pop\n        /* \"#utility.yul\":6524:6531   */\n      dup8\n        /* \"#utility.yul\":6517:6521   */\n      0x1f\n        /* \"#utility.yul\":6513:6515   */\n      dup4\n        /* \"#utility.yul\":6509:6522   */\n      add\n        /* \"#utility.yul\":6505:6532   */\n      slt\n        /* \"#utility.yul\":6495:6550   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":6546:6547   */\n      0x00\n        /* \"#utility.yul\":6543:6544   */\n      dup1\n        /* \"#utility.yul\":6536:6548   */\n      revert\n        /* \"#utility.yul\":6495:6550   */\n    tag_488:\n        /* \"#utility.yul\":6586:6588   */\n      dup2\n        /* \"#utility.yul\":6573:6589   */\n      calldataload\n        /* \"#utility.yul\":6612:6614   */\n      dup2\n        /* \"#utility.yul\":6604:6610   */\n      dup2\n        /* \"#utility.yul\":6601:6615   */\n      gt\n        /* \"#utility.yul\":6598:6632   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":6628:6629   */\n      0x00\n        /* \"#utility.yul\":6625:6626   */\n      dup1\n        /* \"#utility.yul\":6618:6630   */\n      revert\n        /* \"#utility.yul\":6598:6632   */\n    tag_489:\n        /* \"#utility.yul\":6683:6690   */\n      dup9\n        /* \"#utility.yul\":6676:6680   */\n      0x20\n        /* \"#utility.yul\":6666:6672   */\n      dup3\n        /* \"#utility.yul\":6663:6664   */\n      0x05\n        /* \"#utility.yul\":6659:6673   */\n      shl\n        /* \"#utility.yul\":6655:6657   */\n      dup6\n        /* \"#utility.yul\":6651:6674   */\n      add\n        /* \"#utility.yul\":6647:6681   */\n      add\n        /* \"#utility.yul\":6644:6691   */\n      gt\n        /* \"#utility.yul\":6641:6708   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":6704:6705   */\n      0x00\n        /* \"#utility.yul\":6701:6702   */\n      dup1\n        /* \"#utility.yul\":6694:6706   */\n      revert\n        /* \"#utility.yul\":6641:6708   */\n    tag_490:\n        /* \"#utility.yul\":6735:6739   */\n      0x20\n        /* \"#utility.yul\":6727:6740   */\n      swap3\n      dup4\n      add\n      swap10\n        /* \"#utility.yul\":6759:6765   */\n      swap1\n      swap9\n      pop\n        /* \"#utility.yul\":6797:6817   */\n      swap2\n      dup8\n      add\n        /* \"#utility.yul\":6784:6818   */\n      calldataload\n      swap7\n        /* \"#utility.yul\":6865:6867   */\n      0x40\n        /* \"#utility.yul\":6850:6868   */\n      add\n        /* \"#utility.yul\":6837:6869   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":6118:6875   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7218:7402   */\n    tag_202:\n        /* \"#utility.yul\":7288:7294   */\n      0x00\n        /* \"#utility.yul\":7341:7343   */\n      0x20\n        /* \"#utility.yul\":7329:7338   */\n      dup3\n        /* \"#utility.yul\":7320:7327   */\n      dup5\n        /* \"#utility.yul\":7316:7339   */\n      sub\n        /* \"#utility.yul\":7312:7344   */\n      slt\n        /* \"#utility.yul\":7309:7361   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":7357:7358   */\n      0x00\n        /* \"#utility.yul\":7354:7355   */\n      dup1\n        /* \"#utility.yul\":7347:7359   */\n      revert\n        /* \"#utility.yul\":7309:7361   */\n    tag_493:\n      pop\n        /* \"#utility.yul\":7380:7396   */\n      mload\n      swap2\n        /* \"#utility.yul\":7218:7402   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7407:7763   */\n    tag_209:\n        /* \"#utility.yul\":7609:7611   */\n      0x20\n        /* \"#utility.yul\":7591:7612   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7628:7646   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":7621:7651   */\n      mstore\n        /* \"#utility.yul\":7687:7721   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7682:7684   */\n      0x40\n        /* \"#utility.yul\":7667:7685   */\n      dup3\n      add\n        /* \"#utility.yul\":7660:7722   */\n      mstore\n        /* \"#utility.yul\":7754:7756   */\n      0x60\n        /* \"#utility.yul\":7739:7757   */\n      add\n      swap1\n        /* \"#utility.yul\":7407:7763   */\n      jump\t// out\n        /* \"#utility.yul\":9518:9795   */\n    tag_263:\n        /* \"#utility.yul\":9585:9591   */\n      0x00\n        /* \"#utility.yul\":9638:9640   */\n      0x20\n        /* \"#utility.yul\":9626:9635   */\n      dup3\n        /* \"#utility.yul\":9617:9624   */\n      dup5\n        /* \"#utility.yul\":9613:9636   */\n      sub\n        /* \"#utility.yul\":9609:9641   */\n      slt\n        /* \"#utility.yul\":9606:9658   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":9654:9655   */\n      0x00\n        /* \"#utility.yul\":9651:9652   */\n      dup1\n        /* \"#utility.yul\":9644:9656   */\n      revert\n        /* \"#utility.yul\":9606:9658   */\n    tag_502:\n        /* \"#utility.yul\":9686:9695   */\n      dup2\n        /* \"#utility.yul\":9680:9696   */\n      mload\n        /* \"#utility.yul\":9739:9744   */\n      dup1\n        /* \"#utility.yul\":9732:9745   */\n      iszero\n        /* \"#utility.yul\":9725:9746   */\n      iszero\n        /* \"#utility.yul\":9718:9723   */\n      dup2\n        /* \"#utility.yul\":9715:9747   */\n      eq\n        /* \"#utility.yul\":9705:9765   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":9761:9762   */\n      0x00\n        /* \"#utility.yul\":9758:9759   */\n      dup1\n        /* \"#utility.yul\":9751:9763   */\n      revert\n        /* \"#utility.yul\":11008:11259   */\n    tag_295:\n        /* \"#utility.yul\":11078:11084   */\n      0x00\n        /* \"#utility.yul\":11131:11133   */\n      0x20\n        /* \"#utility.yul\":11119:11128   */\n      dup3\n        /* \"#utility.yul\":11110:11117   */\n      dup5\n        /* \"#utility.yul\":11106:11129   */\n      sub\n        /* \"#utility.yul\":11102:11134   */\n      slt\n        /* \"#utility.yul\":11099:11151   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":11147:11148   */\n      0x00\n        /* \"#utility.yul\":11144:11145   */\n      dup1\n        /* \"#utility.yul\":11137:11149   */\n      revert\n        /* \"#utility.yul\":11099:11151   */\n    tag_508:\n        /* \"#utility.yul\":11179:11188   */\n      dup2\n        /* \"#utility.yul\":11173:11189   */\n      mload\n        /* \"#utility.yul\":11198:11229   */\n      tag_435\n        /* \"#utility.yul\":11223:11228   */\n      dup2\n        /* \"#utility.yul\":11198:11229   */\n      tag_425\n      jump\t// in\n        /* \"#utility.yul\":16005:16132   */\n    tag_428:\n        /* \"#utility.yul\":16066:16076   */\n      0x4e487b71\n        /* \"#utility.yul\":16061:16064   */\n      0xe0\n        /* \"#utility.yul\":16057:16077   */\n      shl\n        /* \"#utility.yul\":16054:16055   */\n      0x00\n        /* \"#utility.yul\":16047:16078   */\n      mstore\n        /* \"#utility.yul\":16097:16101   */\n      0x11\n        /* \"#utility.yul\":16094:16095   */\n      0x04\n        /* \"#utility.yul\":16087:16102   */\n      mstore\n        /* \"#utility.yul\":16121:16125   */\n      0x24\n        /* \"#utility.yul\":16118:16119   */\n      0x00\n        /* \"#utility.yul\":16111:16126   */\n      revert\n        /* \"#utility.yul\":16137:16265   */\n    tag_368:\n        /* \"#utility.yul\":16177:16180   */\n      0x00\n        /* \"#utility.yul\":16208:16209   */\n      dup3\n        /* \"#utility.yul\":16204:16210   */\n      not\n        /* \"#utility.yul\":16201:16202   */\n      dup3\n        /* \"#utility.yul\":16198:16211   */\n      gt\n        /* \"#utility.yul\":16195:16234   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":16214:16232   */\n      tag_526\n      tag_428\n      jump\t// in\n    tag_526:\n      pop\n        /* \"#utility.yul\":16250:16259   */\n      add\n      swap1\n        /* \"#utility.yul\":16137:16265   */\n      jump\t// out\n        /* \"#utility.yul\":17765:17892   */\n    tag_416:\n        /* \"#utility.yul\":17826:17836   */\n      0x4e487b71\n        /* \"#utility.yul\":17821:17824   */\n      0xe0\n        /* \"#utility.yul\":17817:17837   */\n      shl\n        /* \"#utility.yul\":17814:17815   */\n      0x00\n        /* \"#utility.yul\":17807:17838   */\n      mstore\n        /* \"#utility.yul\":17857:17861   */\n      0x32\n        /* \"#utility.yul\":17854:17855   */\n      0x04\n        /* \"#utility.yul\":17847:17862   */\n      mstore\n        /* \"#utility.yul\":17881:17885   */\n      0x24\n        /* \"#utility.yul\":17878:17879   */\n      0x00\n        /* \"#utility.yul\":17871:17886   */\n      revert\n        /* \"#utility.yul\":17897:18032   */\n    tag_423:\n        /* \"#utility.yul\":17936:17939   */\n      0x00\n        /* \"#utility.yul\":17957:17974   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":17954:17997   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":17977:17995   */\n      tag_534\n      tag_428\n      jump\t// in\n    tag_534:\n      pop\n        /* \"#utility.yul\":18024:18025   */\n      0x01\n        /* \"#utility.yul\":18013:18026   */\n      add\n      swap1\n        /* \"#utility.yul\":17897:18032   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206818e59282e4a16d5d14784e075d3c8dd60cd412976fc22011751158cfcd0de164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_123": {
									"entryPoint": null,
									"id": 123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_649": {
									"entryPoint": null,
									"id": 649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_350": {
									"entryPoint": null,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 120,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setMerkleRoot_744": {
									"entryPoint": 379,
									"id": 744,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNagaKidContract_681": {
									"entryPoint": 200,
									"id": 681,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSigner_723": {
									"entryPoint": 524,
									"id": 723,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_INagaKid_$494t_addresst_bytes32_fromMemory": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_contract_INagaKid": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1567:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:86:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "133:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "145:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "135:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "135:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "135:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "92:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "103:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "118:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "123:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "114:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "114:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "127:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "110:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "110:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "99:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "99:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "89:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "89:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:50:13"
															},
															"nodeType": "YulIf",
															"src": "79:70:13"
														}
													]
												},
												"name": "validator_revert_contract_INagaKid",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "58:5:13",
														"type": ""
													}
												],
												"src": "14:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "291:351:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "337:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "346:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "339:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "339:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "339:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "312:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "321:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "308:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "308:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "304:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:32:13"
															},
															"nodeType": "YulIf",
															"src": "301:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "362:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "381:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "375:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "366:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "435:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_INagaKid",
																	"nodeType": "YulIdentifier",
																	"src": "400:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "400:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "450:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "460:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "450:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "474:40:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "499:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "510:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "495:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "489:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:25:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "478:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "558:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_INagaKid",
																	"nodeType": "YulIdentifier",
																	"src": "523:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "575:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "585:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "575:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "601:35:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "621:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "632:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "617:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "617:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "611:25:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INagaKid_$494t_addresst_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "241:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "252:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "264:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "272:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "280:6:13",
														"type": ""
													}
												],
												"src": "160:482:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "821:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "838:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "849:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "831:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "831:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "831:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "872:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "883:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "888:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "861:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "922:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "907:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "907:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "927:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "900:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "900:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "971:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "983:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "994:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "971:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "798:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "812:4:13",
														"type": ""
													}
												],
												"src": "647:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1137:175:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1147:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1159:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1170:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1155:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1147:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1182:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1200:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1205:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1196:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1196:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1209:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1192:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1186:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1227:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1242:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1250:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1238:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1238:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1220:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1220:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1274:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1285:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1270:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1270:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1294:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1302:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1290:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1290:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1263:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1263:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1263:43:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1098:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1109:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1117:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1128:4:13",
														"type": ""
													}
												],
												"src": "1008:304:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1456:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1468:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1479:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1464:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1464:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1456:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1509:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1536:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1532:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1532:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1407:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1418:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1426:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1437:4:13",
														"type": ""
													}
												],
												"src": "1317:248:13"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_contract_INagaKid(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_INagaKid_$494t_addresst_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_INagaKid(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_INagaKid(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526005805461ffff191690553480156200001c57600080fd5b5060405162002118380380620021188339810160408190526200003f91620002d7565b6200004a3362000078565b600180556200005983620000c8565b62000064816200017b565b6200006f826200020c565b5050506200031f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001175760405162461bcd60e51b81526020600482018190526024820152600080516020620020f883398151915260448201526064015b60405180910390fd5b600280546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935283917fabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d973910160405180910390a1505050565b6000546001600160a01b03163314620001c65760405162461bcd60e51b81526020600482018190526024820152600080516020620020f883398151915260448201526064016200010e565b600480549082905560408051828152602081018490527f123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe91015b60405180910390a15050565b6000546001600160a01b03163314620002575760405162461bcd60e51b81526020600482018190526024820152600080516020620020f883398151915260448201526064016200010e565b600580546001600160a01b038381166201000081810262010000600160b01b031985161790945560408051949093049091168084526020840191909152917feeb293e1f8f3a9db91ade748726387ed1352ca78f5430c5f06fe3d1e1ad50579910162000200565b6001600160a01b0381168114620002d457600080fd5b50565b600080600060608486031215620002ed57600080fd5b8351620002fa81620002be565b60208501519093506200030d81620002be565b80925050604084015190509250925092565b611dc9806200032f6000396000f3fe6080604052600436106101e35760003560e01c8063a4435dfd11610102578063ef5fe79f11610095578063f6b48e5511610064578063f6b48e55146105eb578063fa540801146105fe578063ff05fe4a1461061e578063ffdc61291461063e57600080fd5b8063ef5fe79f14610548578063f055c7a91461055e578063f2fde38b14610597578063f500cdfc146105b757600080fd5b8063c4e41b22116100d1578063c4e41b22146104cc578063de6892c8146104e1578063df4e5881146104f4578063e02023a11461051457600080fd5b8063a4435dfd14610411578063a7bb58031461042b578063b5abafa114610469578063bff863ec146104ac57600080fd5b80636c19e7831161017a5780638907f3fa116101495780638907f3fa146103945780638da5cb5b146103b357806397aba7f9146103d15780639e6c8855146103f157600080fd5b80636c19e7831461031f578063715018a61461033f5780637cb64759146103545780638407ecc41461037457600080fd5b80632eb4a7ab116101b65780632eb4a7ab146102a257806342920a46146102b85780634c0f38c2146102e857806351cff8d9146102fd57600080fd5b80630a25dea9146101e85780631f5ac1b214610210578063238ac9331461023057806324c37a851461026e575b600080fd5b3480156101f457600080fd5b506101fd600081565b6040519081526020015b60405180910390f35b34801561021c57600080fd5b506101fd61022b366004611949565b610684565b34801561023c57600080fd5b50600554610256906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610207565b34801561027a57600080fd5b506101fd7fb3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db381565b3480156102ae57600080fd5b506101fd60045481565b3480156102c457600080fd5b506102d86102d3366004611a10565b6106ce565b6040519015158152602001610207565b3480156102f457600080fd5b506101fd610711565b34801561030957600080fd5b5061031d610318366004611949565b610784565b005b34801561032b57600080fd5b5061031d61033a366004611949565b6108ae565b34801561034b57600080fd5b5061031d610946565b34801561036057600080fd5b5061031d61036f366004611a72565b61097c565b34801561038057600080fd5b5061031d61038f366004611a8b565b6109e4565b3480156103a057600080fd5b506005546102d890610100900460ff1681565b3480156103bf57600080fd5b506000546001600160a01b0316610256565b3480156103dd57600080fd5b506102566103ec366004611ac4565b610b84565b3480156103fd57600080fd5b5061031d61040c366004611949565b610c03565b34801561041d57600080fd5b506005546102d89060ff1681565b34801561043757600080fd5b5061044b610446366004611b0b565b610c89565b60408051938452602084019290925260ff1690820152606001610207565b34801561047557600080fd5b506101fd610484366004611b48565b6001600160a01b03919091166000908152600760209081526040808320938352929052205490565b3480156104b857600080fd5b5061031d6104c7366004611b74565b610cfd565b3480156104d857600080fd5b506101fd610ead565b61031d6104ef366004611bb5565b610ef7565b34801561050057600080fd5b50600254610256906001600160a01b031681565b34801561052057600080fd5b506101fd7f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec81565b34801561055457600080fd5b506101fd60035481565b34801561056a57600080fd5b506102d8610579366004611949565b6001600160a01b031660009081526008602052604090205460ff1690565b3480156105a357600080fd5b5061031d6105b2366004611949565b61127f565b3480156105c357600080fd5b506101fd7f68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba81565b61031d6105f9366004611c27565b61131a565b34801561060a57600080fd5b506101fd610619366004611a72565b6117b7565b34801561062a57600080fd5b5061031d610639366004611a72565b6117f2565b34801561064a57600080fd5b506102d8610659366004611b48565b6001600160a01b03919091166000908152600660209081526040808320938352929052205460ff1690565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b6000806106da84610684565b905060006106e7826117b7565b9050856001600160a01b03166106fd8286610b84565b6001600160a01b0316149695505050505050565b6002546040805163d5abeb0160e01b815290516000926001600160a01b03169163d5abeb019160048083019260209291908290030181865afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190611ca9565b905090565b6000546001600160a01b031633146107b75760405162461bcd60e51b81526004016107ae90611cc2565b60405180910390fd5b47806107fc5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b60448201526064016107ae565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610849576040519150601f19603f3d011682016040523d82523d6000602084013e61084e565b606091505b505090508061085c57600080fd5b604080516001600160a01b03851681526020810184905242918101919091527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906060015b60405180910390a1505050565b6000546001600160a01b031633146108d85760405162461bcd60e51b81526004016107ae90611cc2565b600580546001600160a01b038381166201000081810262010000600160b01b031985161790945560408051949093049091168084526020840191909152917feeb293e1f8f3a9db91ade748726387ed1352ca78f5430c5f06fe3d1e1ad5057991015b60405180910390a15050565b6000546001600160a01b031633146109705760405162461bcd60e51b81526004016107ae90611cc2565b61097a600061185a565b565b6000546001600160a01b031633146109a65760405162461bcd60e51b81526004016107ae90611cc2565b600480549082905560408051828152602081018490527f123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe910161093a565b6000546001600160a01b03163314610a0e5760405162461bcd60e51b81526004016107ae90611cc2565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190611ca9565b905060008111610ac25760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b60448201526064016107ae565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820183905283169063a9059cbb906044016020604051808303816000875af1158015610b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b359190611cf7565b50604080516001600160a01b038086168252841660208201529081018290524260608201527fb818a975f91276df8ba59329becbc23c793df0d503c19ac296c3c372a1fa0461906080016108a1565b600080600080610b9385610c89565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610bee573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000546001600160a01b03163314610c2d5760405162461bcd60e51b81526004016107ae90611cc2565b600280546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935283917fabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d97391016108a1565b60008060008351604114610cdf5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016107ae565b50505060208101516040820151606090920151909260009190911a90565b6000546001600160a01b03163314610d275760405162461bcd60e51b81526004016107ae90611cc2565b6040516331a9108f60e11b81526004810182905230906001600160a01b03841690636352211e90602401602060405180830381865afa158015610d6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d929190611d19565b6001600160a01b031614610df65760405162461bcd60e51b815260206004820152602560248201527f5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e6044820152641d1c9858dd60da1b60648201526084016107ae565b604051632142170760e11b81523060048201526001600160a01b038481166024830152604482018390528316906342842e0e90606401600060405180830381600087803b158015610e4657600080fd5b505af1158015610e5a573d6000803e3d6000fd5b5050604080516001600160a01b038088168252861660208201529081018490524260608201527f0127a8d3f57942833f6930572bce52ad882683e36eeb5830d199d3fa4bfa9467925060800190506108a1565b600254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801561075b573d6000803e3d6000fd5b600260015403610f495760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107ae565b6002600190815560055460ff16151514610fa55760405162461bcd60e51b815260206004820152601860248201527f5075626c6963206d696e74206973206e6f74206f70656e2e000000000000000060448201526064016107ae565b323314610ff45760405162461bcd60e51b815260206004820152601b60248201527f6861686120436f6e74726163742063616e27742063616c6c206d65000000000060448201526064016107ae565b3360009081526008602052604090205460ff1615156001036110525760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016107ae565b6002546040516355138f0d60e11b81523060048201526001600160a01b039091169063aa271e1a90602401602060405180830381865afa15801561109a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110be9190611cf7565b61110a5760405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374204d696e74206973206e6f7420617070726f7665642e000060448201526064016107ae565b611160600560029054906101000a90046001600160a01b03163384848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506106ce92505050565b6111b75760405162461bcd60e51b815260206004820152602260248201527f556e617574686f72697a6564205075626c69634d696e74205468697320557365604482015261391760f11b60648201526084016107ae565b3360008181526008602052604090819020805460ff191660019081179091556002549151632851206560e21b8152600481019390935260248301819052916001600160a01b039091169063a144819490604401600060405180830381600087803b15801561122457600080fd5b505af1158015611238573d6000803e3d6000fd5b5050604080518481524260208201523393507fc1a73b31b32801ebbb4cae30b73eae4345be9f2915ea60306383c245ef8fac4492500160405180910390a250506001805550565b6000546001600160a01b031633146112a95760405162461bcd60e51b81526004016107ae90611cc2565b6001600160a01b03811661130e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107ae565b6113178161185a565b50565b60026001540361136c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107ae565b60026001908155600554610100900460ff161515146113cd5760405162461bcd60e51b815260206004820152601960248201527f50726976617465206d696e74206973206e6f74206f70656e2e0000000000000060448201526064016107ae565b806114125760405162461bcd60e51b815260206004820152601560248201527426b4b73a1034b9903737ba1030b8383937bb32b21760591b60448201526064016107ae565b80600354146114735760405162461bcd60e51b815260206004820152602760248201527f436f6e747261637420617265206e6f7420696e2074686973206d696e74696e67604482015266103937bab7321760c91b60648201526084016107ae565b61147b610711565b82611484610ead565b61148e9190611d4c565b106114c95760405162461bcd60e51b815260206004820152600b60248201526a4f76657220737570706c7960a81b60448201526064016107ae565b33600090815260066020908152604080832084845290915290205460ff161561152e5760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016107ae565b6002546040516355138f0d60e11b81523060048201526001600160a01b039091169063aa271e1a90602401602060405180830381865afa158015611576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159a9190611cf7565b6115e65760405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374204d696e74206973206e6f7420617070726f7665642e000060448201526064016107ae565b611669848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506004546040516bffffffffffffffffffffffff193360601b16602082015260348101889052605481018790529092506074019050604051602081830303815290604052805190602001206118aa565b6116c35760405162461bcd60e51b815260206004820152602560248201527f556e617574686f72697a65642057686974656c6973744d696e742054686973206044820152642ab9b2b91760d91b60648201526084016107ae565b3360008181526006602090815260408083208584528252808320805460ff19166001179055928252600781528282208483529052908120805484929061170a908490611d4c565b9091555050600254604051632851206560e21b8152336004820152602481018490526001600160a01b039091169063a144819490604401600060405180830381600087803b15801561175b57600080fd5b505af115801561176f573d6000803e3d6000fd5b5050604080518581524260208201523393507fe9e607753e80542a9021d5149990f18919907f0136fad424eaac3d15056ccf6e92500160405180910390a25050600180555050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c016106b1565b6000546001600160a01b0316331461181c5760405162461bcd60e51b81526004016107ae90611cc2565b600380549082905560408051828152602081018490527f521ec96875ca228cd2fc1dbd4c927a34328c9ce1a83bcb8c1f633f012c90d785910161093a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000826118b785846118c0565b14949350505050565b600081815b845181101561192c5760008582815181106118e2576118e2611d64565b602002602001015190508083116119085760008381526020829052604090209250611919565b600081815260208490526040902092505b508061192481611d7a565b9150506118c5565b509392505050565b6001600160a01b038116811461131757600080fd5b60006020828403121561195b57600080fd5b813561196681611934565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261199457600080fd5b813567ffffffffffffffff808211156119af576119af61196d565b604051601f8301601f19908116603f011681019082821181831017156119d7576119d761196d565b816040528381528660208588010111156119f057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611a2557600080fd5b8335611a3081611934565b92506020840135611a4081611934565b9150604084013567ffffffffffffffff811115611a5c57600080fd5b611a6886828701611983565b9150509250925092565b600060208284031215611a8457600080fd5b5035919050565b60008060408385031215611a9e57600080fd5b8235611aa981611934565b91506020830135611ab981611934565b809150509250929050565b60008060408385031215611ad757600080fd5b82359150602083013567ffffffffffffffff811115611af557600080fd5b611b0185828601611983565b9150509250929050565b600060208284031215611b1d57600080fd5b813567ffffffffffffffff811115611b3457600080fd5b611b4084828501611983565b949350505050565b60008060408385031215611b5b57600080fd5b8235611b6681611934565b946020939093013593505050565b600080600060608486031215611b8957600080fd5b8335611b9481611934565b92506020840135611ba481611934565b929592945050506040919091013590565b60008060208385031215611bc857600080fd5b823567ffffffffffffffff80821115611be057600080fd5b818501915085601f830112611bf457600080fd5b813581811115611c0357600080fd5b866020828501011115611c1557600080fd5b60209290920196919550909350505050565b60008060008060608587031215611c3d57600080fd5b843567ffffffffffffffff80821115611c5557600080fd5b818701915087601f830112611c6957600080fd5b813581811115611c7857600080fd5b8860208260051b8501011115611c8d57600080fd5b6020928301999098509187013596604001359550909350505050565b600060208284031215611cbb57600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611d0957600080fd5b8151801515811461196657600080fd5b600060208284031215611d2b57600080fd5b815161196681611934565b634e487b7160e01b600052601160045260246000fd5b60008219821115611d5f57611d5f611d36565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201611d8c57611d8c611d36565b506001019056fea26469706673582212206818e59282e4a16d5d14784e075d3c8dd60cd412976fc22011751158cfcd0de164736f6c634300080f00334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2118 CODESIZE SUB DUP1 PUSH3 0x2118 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3F SWAP2 PUSH3 0x2D7 JUMP JUMPDEST PUSH3 0x4A CALLER PUSH3 0x78 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH3 0x59 DUP4 PUSH3 0xC8 JUMP JUMPDEST PUSH3 0x64 DUP2 PUSH3 0x17B JUMP JUMPDEST PUSH3 0x6F DUP3 PUSH3 0x20C JUMP JUMPDEST POP POP POP PUSH3 0x31F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x117 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 SWAP2 PUSH32 0xABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x10E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x257 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x10E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH3 0x10000 DUP2 DUP2 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH32 0xEEB293E1F8F3A9DB91ADE748726387ED1352CA78F5430C5F06FE3D1E1AD50579 SWAP2 ADD PUSH3 0x200 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x2FA DUP2 PUSH3 0x2BE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x30D DUP2 PUSH3 0x2BE JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1DC9 DUP1 PUSH3 0x32F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4435DFD GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xEF5FE79F GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF6B48E55 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF6B48E55 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xFF05FE4A EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0xFFDC6129 EQ PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEF5FE79F EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xF055C7A9 EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0xF500CDFC EQ PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4E41B22 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0xDE6892C8 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0xDF4E5881 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0xE02023A1 EQ PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA4435DFD EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0xB5ABAFA1 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xBFF863EC EQ PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C19E783 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x8907F3FA GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x8907F3FA EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x9E6C8855 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x8407ECC4 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB4A7AB GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x4C0F38C2 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA25DEA9 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x24C37A85 EQ PUSH2 0x26E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x256 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH32 0xB3C595E55271590809F54E2F4FC3A582754F45B104DD3C41666E2AD310493DB3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x711 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x946 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH2 0x3EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC4 JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2D8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0B JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x207 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x4C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x31D PUSH2 0x4EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0xEF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH32 0x5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0x579 CALLDATASIZE PUSH1 0x4 PUSH2 0x1949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x5B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x127F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH32 0x68E7D51FDB912CB107DDA2E59B053D87FCCA666DD0EF5339CD3474CCB5276BBA DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x5F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0x131A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x619 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x17B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x17F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0x659 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6DA DUP5 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6E7 DUP3 PUSH2 0x17B7 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6FD DUP3 DUP7 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5ABEB01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD5ABEB01 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP1 PUSH2 0x7FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x84E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x85C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH3 0x10000 DUP2 DUP2 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH32 0xEEB293E1F8F3A9DB91ADE748726387ED1352CA78F5430C5F06FE3D1E1AD50579 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x970 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x97A PUSH1 0x0 PUSH2 0x185A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE SWAP2 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB35 SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xB818A975F91276DF8BA59329BECBC23C793DF0D503C19AC296C3C372A1FA0461 SWAP1 PUSH1 0x80 ADD PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xB93 DUP6 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 SWAP2 PUSH32 0xABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973 SWAP2 ADD PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0xCDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD92 SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E4964206973206E6F74206F776E656420627920636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x127A8D3F57942833F6930572BCE52AD882683E36EEB5830D199D3FA4BFA9467 SWAP3 POP PUSH1 0x80 ADD SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xF49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C6963206D696E74206973206E6F74206F70656E2E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0xFF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6861686120436F6E74726163742063616E27742063616C6C206D650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x55138F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAA271E1A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x109A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10BE SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x110A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x1160 PUSH1 0x5 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x6CE SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A6564205075626C69634D696E74205468697320557365 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x28512065 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1448194 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1238 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP PUSH32 0xC1A73B31B32801EBBB4CAE30B73EAE4345BE9F2915EA60306383C245EF8FAC44 SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x130E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x1317 DUP2 PUSH2 0x185A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x136C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x13CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726976617465206D696E74206973206E6F74206F70656E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST DUP1 PUSH2 0x1412 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x26B4B73A1034B9903737BA1030B8383937BB32B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST DUP1 PUSH1 0x3 SLOAD EQ PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420617265206E6F7420696E2074686973206D696E74696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x103937BAB73217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x147B PUSH2 0x711 JUMP JUMPDEST DUP3 PUSH2 0x1484 PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x148E SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST LT PUSH2 0x14C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4F76657220737570706C79 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x152E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x55138F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAA271E1A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1576 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x159A SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x15E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x1669 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH1 0x74 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0x16C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642057686974656C6973744D696E74205468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2AB9B2B917 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x170A SWAP1 DUP5 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x28512065 PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1448194 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x175B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x176F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP PUSH32 0xE9E607753E80542A9021D5149990F18919907F0136FAD424EAAC3D15056CCF6E SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x181C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x521EC96875CA228CD2FC1DBD4C927A34328C9CE1A83BCB8C1F633F012C90D785 SWAP2 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18B7 DUP6 DUP5 PUSH2 0x18C0 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x192C JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x18E2 JUMPI PUSH2 0x18E2 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x1908 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x1924 DUP2 PUSH2 0x1D7A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18C5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1966 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19AF JUMPI PUSH2 0x19AF PUSH2 0x196D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x19D7 JUMPI PUSH2 0x19D7 PUSH2 0x196D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x19F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1A30 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1A40 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A68 DUP7 DUP3 DUP8 ADD PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1AA9 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1AB9 DUP2 PUSH2 0x1934 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B01 DUP6 DUP3 DUP7 ADD PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B40 DUP5 DUP3 DUP6 ADD PUSH2 0x1983 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B66 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1B94 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1BA4 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1C15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP10 SWAP1 SWAP9 POP SWAP2 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x40 ADD CALLDATALOAD SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1966 DUP2 PUSH2 0x1934 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D5F JUMPI PUSH2 0x1D5F PUSH2 0x1D36 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D8C JUMPI PUSH2 0x1D8C PUSH2 0x1D36 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x18E59282E4A16D5D14 PUSH25 0x4E075D3C8DD60CD412976FC22011751158CFCD0DE164736F6C PUSH4 0x4300080F STOP CALLER 0x4F PUSH24 0x6E61626C653A2063616C6C6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E6572000000000000000000000000 ",
							"sourceMap": "428:6458:8:-:0;;;1124:36;;;-1:-1:-1;;1167:37:8;;;2198:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;1701:1:1;1806:22;;2295:36:8;2314:16;2295:18;:36::i;:::-;2342:26;2356:11;2342:13;:26::i;:::-;2379:18;2389:7;2379:9;:18::i;:::-;2198:209;;;428:6458;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;2415:288:8:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;849:2:13;1240:68:0;;;831:21:13;;;868:18;;;861:30;-1:-1:-1;;;;;;;;;;;907:18:13;;;900:62;979:18;;1240:68:0;;;;;;;;;2522:15:8::1;::::0;;-1:-1:-1;;;;;2549:26:8;;::::1;-1:-1:-1::0;;;;;;2549:26:8;::::1;::::0;::::1;::::0;;;2644:51:::1;::::0;;2522:15;;;::::1;1220:34:13::0;;;1285:2;1270:18;;1263:43;;;;2549:26:8;;2644:51:::1;::::0;1155:18:13;2644:51:8::1;;;;;;;2479:224;;2415:288:::0;:::o;3108:220::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;849:2:13;1240:68:0;;;831:21:13;;;868:18;;;861:30;-1:-1:-1;;;;;;;;;;;907:18:13;;;900:62;979:18;;1240:68:0;647:356:13;1240:68:0;3208:10:8::1;::::0;;3229:24;;;;3271:49:::1;::::0;;1491:25:13;;;1547:2;1532:18;;1525:34;;;3271:49:8::1;::::0;1464:18:13;3271:49:8::1;;;;;;;;3169:159;3108:220:::0;:::o;2916:184::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;849:2:13;1240:68:0;;;831:21:13;;;868:18;;;861:30;-1:-1:-1;;;;;;;;;;;907:18:13;;;900:62;979:18;;1240:68:0;647:356:13;1240:68:0;3004:6:8::1;::::0;;-1:-1:-1;;;;;3021:16:8;;::::1;3004:6:::0;3021:16;;::::1;-1:-1:-1::0;;;;;;3021:16:8;::::1;;::::0;;;3055:37:::1;::::0;;3004:6;;;::::1;::::0;;::::1;1220:34:13::0;;;1285:2;1270:18;;1263:43;;;;3004:6:8;3055:37:::1;::::0;1155:18:13;3055:37:8::1;1008:304:13::0;14:141;-1:-1:-1;;;;;99:31:13;;89:42;;79:70;;145:1;142;135:12;79:70;14:141;:::o;160:482::-;264:6;272;280;333:2;321:9;312:7;308:23;304:32;301:52;;;349:1;346;339:12;301:52;381:9;375:16;400:41;435:5;400:41;:::i;:::-;510:2;495:18;;489:25;460:5;;-1:-1:-1;523:43:13;489:25;523:43;:::i;:::-;585:7;575:17;;;632:2;621:9;617:18;611:25;601:35;;160:482;;;;;:::o;1317:248::-;428:6458:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_522": {
									"entryPoint": null,
									"id": 522,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NAGA_HOLDER_MINT_ROUND_519": {
									"entryPoint": null,
									"id": 519,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WHITELIST_MINT_ROUND_514": {
									"entryPoint": null,
									"id": 514,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WITHDRAW_ROLE_527": {
									"entryPoint": null,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_efficientHash_452": {
									"entryPoint": null,
									"id": 452,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_350": {
									"entryPoint": null,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 6234,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowlistMint_863": {
									"entryPoint": 4890,
									"id": 863,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@currentMintRound_532": {
									"entryPoint": null,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getEthSignedMessageHash_1182": {
									"entryPoint": 6071,
									"id": 1182,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMaxSupply_1144": {
									"entryPoint": 1809,
									"id": 1144,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMessageHash_1166": {
									"entryPoint": 1668,
									"id": 1166,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalSupply_1134": {
									"entryPoint": 3757,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isPrivateMintOpen_540": {
									"entryPoint": null,
									"id": 540,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isPublicMintOpen_537": {
									"entryPoint": null,
									"id": 537,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isPublicMinted_957": {
									"entryPoint": null,
									"id": 957,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isUserMinted_1108": {
									"entryPoint": null,
									"id": 1108,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@merkleRoot_534": {
									"entryPoint": null,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nagaKidContract_530": {
									"entryPoint": null,
									"id": 530,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@processProof_441": {
									"entryPoint": 6336,
									"id": 441,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@publicMint_945": {
									"entryPoint": 3831,
									"id": 945,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@recoverSigner_1240": {
									"entryPoint": 2948,
									"id": 1240,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2374,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMerkleRoot_744": {
									"entryPoint": 2428,
									"id": 744,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNagaKidContract_681": {
									"entryPoint": 3075,
									"id": 681,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRound_702": {
									"entryPoint": 6130,
									"id": 702,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSigner_723": {
									"entryPoint": 2222,
									"id": 723,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@signer_542": {
									"entryPoint": null,
									"id": 542,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@splitSignature_1261": {
									"entryPoint": 3209,
									"id": 1261,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@transferOwnership_83": {
									"entryPoint": 4735,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userMintedAmount_1124": {
									"entryPoint": null,
									"id": 1124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verify_1213": {
									"entryPoint": 1742,
									"id": 1213,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@verify_384": {
									"entryPoint": 6314,
									"id": 384,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdrawCurrency_1045": {
									"entryPoint": 2532,
									"id": 1045,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawNFT_1092": {
									"entryPoint": 3325,
									"id": 1092,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdraw_1000": {
									"entryPoint": 1924,
									"id": 1000,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_bytes": {
									"entryPoint": 6531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 7449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr": {
									"entryPoint": 6672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes32": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256t_bytes32": {
									"entryPoint": 7207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 6770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 6852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 7093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 6923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_INagaKid_$494": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INagaKid_$494__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44088db98f64bd7f2c584eff446b56f0c15b8c18215ca7ced6e447e24db3d2bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_507f035c670b11e911e1eb5937077419dc7c16add6610aed12b3d2f661e88ec0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7478,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18034:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:13",
														"type": ""
													}
												],
												"src": "14:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "241:86:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "314:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "264:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "275:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "290:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "295:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "286:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "286:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "299:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "282:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "282:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "271:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "271:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "261:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "261:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "254:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:50:13"
															},
															"nodeType": "YulIf",
															"src": "251:70:13"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "230:5:13",
														"type": ""
													}
												],
												"src": "196:131:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "402:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "448:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "457:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "460:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "450:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "450:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "450:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "423:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "419:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "419:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "415:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "415:32:13"
															},
															"nodeType": "YulIf",
															"src": "412:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "473:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "499:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "486:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "477:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "543:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "518:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "518:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "518:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "558:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "568:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "558:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "368:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "379:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "391:6:13",
														"type": ""
													}
												],
												"src": "332:247:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "685:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "695:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "707:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "718:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "703:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "695:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "737:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "752:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "768:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "773:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "764:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "764:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "777:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "760:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "760:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "748:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "730:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "730:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "730:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "654:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "665:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "676:4:13",
														"type": ""
													}
												],
												"src": "584:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "824:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "848:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "853:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "844:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "844:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "834:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "834:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "834:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "881:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "884:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "874:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "874:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "908:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "898:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "792:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "976:666:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1025:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1034:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1027:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1027:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1027:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1004:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1012:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1000:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1000:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1019:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "996:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "996:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "989:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "989:35:13"
															},
															"nodeType": "YulIf",
															"src": "986:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1050:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1073:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1060:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1054:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1089:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1099:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1093:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1140:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1142:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1142:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1142:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1132:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1136:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1129:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1129:10:13"
															},
															"nodeType": "YulIf",
															"src": "1126:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1171:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1185:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1181:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1175:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1197:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1217:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1211:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1201:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1229:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1251:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "1275:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1279:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1271:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1271:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1286:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1267:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1267:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1291:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1263:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1263:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1296:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1259:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1259:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1247:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1247:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1233:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1361:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1318:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1330:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1315:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1315:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1338:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1350:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1335:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1335:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1312:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:46:13"
															},
															"nodeType": "YulIf",
															"src": "1309:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1397:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1401:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1390:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1390:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1428:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1436:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1421:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1421:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1421:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1487:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1496:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1499:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1489:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1489:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1489:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1462:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1470:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1458:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1458:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1475:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1454:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1454:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1482:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1451:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:35:13"
															},
															"nodeType": "YulIf",
															"src": "1448:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1529:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1537:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1548:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1556:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1544:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1544:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1563:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1512:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1512:54:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1590:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1598:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1586:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1586:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1603:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1582:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:26:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1610:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1575:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1575:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1621:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1630:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1621:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "950:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "958:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "966:5:13",
														"type": ""
													}
												],
												"src": "924:718:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1760:483:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1806:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1815:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1818:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1808:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1808:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1808:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1781:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1790:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1777:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1802:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1773:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:32:13"
															},
															"nodeType": "YulIf",
															"src": "1770:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1831:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1857:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1844:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1844:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1835:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1901:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1876:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1876:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1916:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1926:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1940:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1972:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1983:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1968:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1968:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1955:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:32:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1944:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2021:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1996:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1996:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1996:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2038:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2048:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2038:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2064:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2095:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2106:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2091:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2091:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2078:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2068:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2153:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2162:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2165:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2155:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2155:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2155:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2125:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2133:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2122:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2122:30:13"
															},
															"nodeType": "YulIf",
															"src": "2119:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2178:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2209:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2220:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2205:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2205:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2229:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2188:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2188:49:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2178:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1710:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1721:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1733:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1741:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1749:6:13",
														"type": ""
													}
												],
												"src": "1647:596:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2343:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2353:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2365:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2376:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2361:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2361:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2353:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2395:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2420:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2413:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2406:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2406:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2388:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2388:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2388:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2312:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2323:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2334:4:13",
														"type": ""
													}
												],
												"src": "2248:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2541:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2551:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2563:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2574:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2559:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2551:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2593:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2604:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2586:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2586:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2586:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2510:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2521:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2532:4:13",
														"type": ""
													}
												],
												"src": "2440:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2692:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2738:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2747:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2750:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2740:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2740:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2740:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2713:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2722:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2709:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2709:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2734:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2705:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:32:13"
															},
															"nodeType": "YulIf",
															"src": "2702:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2763:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2786:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2773:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2773:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2763:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2658:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2669:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2681:6:13",
														"type": ""
													}
												],
												"src": "2622:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2894:301:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2940:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2949:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2952:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2942:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2942:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2942:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2915:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2924:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2911:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2911:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2936:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2907:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2907:32:13"
															},
															"nodeType": "YulIf",
															"src": "2904:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2965:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2991:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2978:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2978:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2969:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3035:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3010:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3010:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3010:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3050:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3060:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3050:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3074:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3106:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3117:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3102:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3102:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3089:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3089:32:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3078:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3155:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3130:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3130:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3172:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3182:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3172:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2852:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2863:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2875:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2883:6:13",
														"type": ""
													}
												],
												"src": "2807:388:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3296:292:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3342:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3351:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3354:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3344:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3344:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3344:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3317:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3326:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3338:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3309:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3309:32:13"
															},
															"nodeType": "YulIf",
															"src": "3306:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3367:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3377:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3377:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3367:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3409:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3440:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3451:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3436:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3423:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3423:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3413:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3498:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3507:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3510:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3500:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3500:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3500:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3470:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3478:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3467:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:30:13"
															},
															"nodeType": "YulIf",
															"src": "3464:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3523:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3554:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3565:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3550:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3550:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3574:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3533:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3533:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3254:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3265:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3277:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3285:6:13",
														"type": ""
													}
												],
												"src": "3200:388:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3679:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3725:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3734:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3737:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3727:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3727:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3727:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3700:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3696:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3696:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3721:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3692:32:13"
															},
															"nodeType": "YulIf",
															"src": "3689:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3750:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3776:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3763:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3754:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3820:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3795:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3795:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3835:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3845:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3835:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INagaKid_$494",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3645:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3656:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3668:6:13",
														"type": ""
													}
												],
												"src": "3593:263:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3940:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3986:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3995:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3998:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3988:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3988:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3988:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3961:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3970:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3957:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3957:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3953:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3953:32:13"
															},
															"nodeType": "YulIf",
															"src": "3950:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4011:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4038:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4025:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4015:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4091:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4100:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4103:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4093:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4093:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4093:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4063:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4071:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:30:13"
															},
															"nodeType": "YulIf",
															"src": "4057:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4116:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4147:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4158:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4143:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4167:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4126:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:49:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4116:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3906:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3917:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3929:6:13",
														"type": ""
													}
												],
												"src": "3861:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4339:173:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4349:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4361:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4372:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4357:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4357:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4349:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4402:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4384:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4384:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4429:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4440:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4425:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4425:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4445:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4472:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4483:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4468:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4468:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4492:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4500:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4488:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4488:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4461:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4461:45:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4292:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4303:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4311:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4319:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4330:4:13",
														"type": ""
													}
												],
												"src": "4186:326:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4604:228:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4650:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4659:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4662:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4652:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4652:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4652:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4625:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4634:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4621:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4621:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4646:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4617:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4617:32:13"
															},
															"nodeType": "YulIf",
															"src": "4614:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4675:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4701:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4688:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4679:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4745:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4720:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4720:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4720:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4770:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4760:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4784:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4811:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4822:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4807:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4807:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4794:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4794:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4784:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4562:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4573:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4585:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4593:6:13",
														"type": ""
													}
												],
												"src": "4517:315:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4941:352:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4987:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4996:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4999:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4989:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4989:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4989:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4962:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4971:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4958:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4958:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4954:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4954:32:13"
															},
															"nodeType": "YulIf",
															"src": "4951:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5012:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5038:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5025:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5025:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5016:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5082:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5057:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5057:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5057:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5097:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5107:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5097:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5121:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5153:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5164:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5149:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5149:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5136:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:32:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5125:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5202:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5177:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5177:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5177:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5219:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5229:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5219:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5245:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5272:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5283:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5268:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5255:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5245:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4891:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4902:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4914:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4922:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4930:6:13",
														"type": ""
													}
												],
												"src": "4837:456:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5387:502:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5433:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5442:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5445:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5435:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5435:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5435:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5408:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5417:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5404:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5404:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5429:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5400:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5400:32:13"
															},
															"nodeType": "YulIf",
															"src": "5397:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5458:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5485:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5472:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5472:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5462:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5504:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5514:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5508:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5559:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5568:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5571:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5561:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5561:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5561:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5547:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5555:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5544:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5544:14:13"
															},
															"nodeType": "YulIf",
															"src": "5541:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5584:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5598:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5609:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5588:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5664:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5673:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5676:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5666:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5666:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5666:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5643:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5647:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5639:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5639:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5654:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5635:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5635:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5628:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5628:35:13"
															},
															"nodeType": "YulIf",
															"src": "5625:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5689:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5716:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5703:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5703:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5693:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5746:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5755:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5758:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5748:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5748:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5748:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5734:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5742:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5731:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5731:14:13"
															},
															"nodeType": "YulIf",
															"src": "5728:34:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5812:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5821:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5824:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5814:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5814:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5814:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5785:2:13"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "5789:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5781:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5781:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5798:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5777:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5777:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5803:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5774:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5774:37:13"
															},
															"nodeType": "YulIf",
															"src": "5771:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5837:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5851:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5855:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5847:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5847:11:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5837:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5867:16:13",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "5877:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5345:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5356:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5368:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5376:6:13",
														"type": ""
													}
												],
												"src": "5298:591:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6011:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6021:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6033:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6044:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6029:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6029:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6021:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6063:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6078:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6094:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6099:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6090:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6090:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6103:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6086:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6086:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6074:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6074:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6056:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6056:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6056:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INagaKid_$494__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5980:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5991:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6002:4:13",
														"type": ""
													}
												],
												"src": "5894:219:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6257:618:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6303:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6312:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6315:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6305:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6305:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6305:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6278:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6287:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6274:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6274:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6299:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6270:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6270:32:13"
															},
															"nodeType": "YulIf",
															"src": "6267:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6328:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6355:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6342:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6342:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6332:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6374:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6384:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6378:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6429:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6438:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6441:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6431:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6431:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6431:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6417:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6425:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6414:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6414:14:13"
															},
															"nodeType": "YulIf",
															"src": "6411:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6454:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6468:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6479:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6464:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6464:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6458:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6534:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6543:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6546:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6536:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6536:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6536:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6513:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6517:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6509:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6509:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6524:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6505:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6505:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6498:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6498:35:13"
															},
															"nodeType": "YulIf",
															"src": "6495:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6559:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6586:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6573:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6573:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6563:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6616:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6625:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6628:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6618:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6618:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6618:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6604:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6612:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6601:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:14:13"
															},
															"nodeType": "YulIf",
															"src": "6598:34:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6692:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6701:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6704:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6694:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6694:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6694:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6655:2:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6663:1:13",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6666:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6659:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6659:14:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6651:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6651:23:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6676:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6647:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6647:34:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6683:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6644:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6644:47:13"
															},
															"nodeType": "YulIf",
															"src": "6641:67:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6717:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6731:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6735:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6727:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6727:13:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6717:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6749:16:13",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "6759:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6749:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6774:44:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6801:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6812:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6797:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6797:20:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6784:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6784:34:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6774:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6827:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6854:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6865:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6850:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6850:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6837:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6837:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6827:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6199:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6210:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6222:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6230:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6238:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6246:6:13",
														"type": ""
													}
												],
												"src": "6118:757:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7027:186:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7037:41:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7051:26:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "7047:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7047:31:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7041:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7094:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7107:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "7111:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7103:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7103:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7120:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7099:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7099:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7087:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7087:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7087:37:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7144:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7149:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7140:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7140:12:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7162:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "7166:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7158:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7158:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7175:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7154:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7154:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7133:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7133:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7133:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7188:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7199:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7204:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6995:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7000:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7008:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7019:3:13",
														"type": ""
													}
												],
												"src": "6880:333:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7299:103:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7345:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7354:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7357:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7347:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7347:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7347:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7320:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7329:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7316:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7316:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7341:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7312:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7312:32:13"
															},
															"nodeType": "YulIf",
															"src": "7309:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7370:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7386:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7380:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7380:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7265:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7276:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7288:6:13",
														"type": ""
													}
												],
												"src": "7218:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7581:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7598:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7609:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7591:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7591:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7591:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7632:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7643:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7628:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7628:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7648:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7621:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7621:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7621:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7671:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7682:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7667:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7667:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7687:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7660:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7660:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7660:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7731:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7743:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7754:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7739:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7739:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7731:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7558:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7572:4:13",
														"type": ""
													}
												],
												"src": "7407:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7942:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7959:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7970:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7952:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7952:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7952:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7993:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8004:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7989:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7989:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8009:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7982:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7982:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8032:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8043:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8028:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8028:18:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8048:22:13",
																		"type": "",
																		"value": "Insufficient Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8021:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8021:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8080:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8092:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8103:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8088:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8088:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8080:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7919:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7933:4:13",
														"type": ""
													}
												],
												"src": "7768:344:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8308:14:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8310:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8317:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8310:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8292:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8300:3:13",
														"type": ""
													}
												],
												"src": "8117:205:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8484:188:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8494:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8506:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8517:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8502:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8502:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8494:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8536:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8551:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8567:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8572:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8563:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8563:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8576:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8559:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8559:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8547:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8547:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8529:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8529:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8600:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8611:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8596:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8596:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8616:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8589:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8589:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8589:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8643:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8654:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8639:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8639:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8659:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8632:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8632:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8632:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8437:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8448:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8456:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8464:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8475:4:13",
														"type": ""
													}
												],
												"src": "8327:345:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8806:175:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8816:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8828:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8839:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8824:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8824:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8816:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8851:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8869:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8874:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8865:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8865:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8878:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8861:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8861:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8855:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8896:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8911:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8919:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8907:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8907:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8889:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8889:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8889:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8943:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8954:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8939:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8939:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8963:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8971:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8959:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8959:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8932:43:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8767:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8778:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8786:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8797:4:13",
														"type": ""
													}
												],
												"src": "8677:304:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9115:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9148:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9167:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9178:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9160:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9160:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9205:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9216:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9201:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9201:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9221:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9194:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9194:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9194:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9076:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9087:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9095:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9106:4:13",
														"type": ""
													}
												],
												"src": "8986:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9368:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9378:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9390:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9401:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9386:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9386:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9378:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9420:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9435:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9451:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9456:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9447:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9447:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9460:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9443:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9443:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9431:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9431:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9413:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9413:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9413:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9484:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9495:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9480:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9480:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9500:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9473:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9473:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9473:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9329:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9340:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9348:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9359:4:13",
														"type": ""
													}
												],
												"src": "9239:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9596:199:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9642:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9651:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9654:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9644:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9644:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9644:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9617:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9626:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9613:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9613:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9638:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9609:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9609:32:13"
															},
															"nodeType": "YulIf",
															"src": "9606:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9667:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9686:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9680:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9680:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9671:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9749:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9758:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9761:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9751:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9751:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9751:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9718:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9739:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9732:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9732:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9725:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9725:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9715:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9715:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9708:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9708:40:13"
															},
															"nodeType": "YulIf",
															"src": "9705:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9774:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9784:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9774:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9562:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9573:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9585:6:13",
														"type": ""
													}
												],
												"src": "9518:277:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9985:262:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9995:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10007:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10018:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10003:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10003:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9995:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10031:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10049:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10054:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10045:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10045:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10058:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10041:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10041:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10035:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10076:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10091:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10099:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10087:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10087:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10069:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10069:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10069:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10123:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10134:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10119:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10119:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10143:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10151:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10139:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10139:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10112:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10112:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10112:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10175:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10186:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10171:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10171:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10191:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10164:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10164:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10164:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10218:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10229:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10214:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10214:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10234:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10207:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10207:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10207:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9930:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9941:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9949:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9957:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9965:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9976:4:13",
														"type": ""
													}
												],
												"src": "9800:447:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10433:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10443:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10455:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10466:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10451:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10451:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10443:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10486:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10479:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10479:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10479:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10524:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10535:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10520:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10520:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10544:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10552:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10540:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10513:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10513:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10513:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10578:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10589:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10574:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10574:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10594:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10567:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10567:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10567:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10621:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10632:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10617:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10617:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10637:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10610:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10610:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10610:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10378:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10389:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10397:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10405:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10413:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10424:4:13",
														"type": ""
													}
												],
												"src": "10252:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10829:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10846:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10857:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10839:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10839:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10839:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10880:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10891:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10876:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10876:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10896:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10869:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10869:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10869:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10919:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10930:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10915:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10915:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10935:26:13",
																		"type": "",
																		"value": "invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10908:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10908:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10908:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10971:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10983:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10994:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10979:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10979:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10971:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10806:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10820:4:13",
														"type": ""
													}
												],
												"src": "10655:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11089:170:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11135:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11144:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11147:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11137:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11137:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11137:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11110:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11119:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11106:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11106:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11131:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11102:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11102:32:13"
															},
															"nodeType": "YulIf",
															"src": "11099:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11160:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11179:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11173:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11173:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11164:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11223:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "11198:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11198:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11198:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11238:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11248:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11238:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11055:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11066:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11078:6:13",
														"type": ""
													}
												],
												"src": "11008:251:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11438:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11455:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11466:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11448:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11448:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11448:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11489:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11500:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11485:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11485:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11505:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11478:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11478:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11478:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11528:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11539:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11524:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11524:18:13"
																	},
																	{
																		"hexValue": "5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11544:34:13",
																		"type": "",
																		"value": "This tokenId is not owned by con"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11517:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11517:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11517:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11599:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11610:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11595:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11595:18:13"
																	},
																	{
																		"hexValue": "7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11615:7:13",
																		"type": "",
																		"value": "tract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11588:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11588:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11588:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11632:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11644:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11655:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11640:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11640:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11632:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11415:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11429:4:13",
														"type": ""
													}
												],
												"src": "11264:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11827:218:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11837:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11849:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11860:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11845:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11845:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11837:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11872:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11890:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11895:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11886:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11886:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11899:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11882:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11882:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11876:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11917:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11932:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11940:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11928:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11928:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11910:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11910:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11910:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11964:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11975:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11960:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11960:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11984:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11992:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11980:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11980:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11953:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11953:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11953:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12016:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12027:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12012:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12012:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12032:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12005:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12005:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12005:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11780:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11791:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11799:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11807:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11818:4:13",
														"type": ""
													}
												],
												"src": "11670:375:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12224:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12241:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12252:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12234:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12234:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12234:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12275:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12286:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12271:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12271:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12291:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12264:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12264:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12264:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12314:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12325:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12310:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12310:18:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12330:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12303:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12303:61:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12303:61:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12373:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12385:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12396:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12381:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12381:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12373:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12201:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12215:4:13",
														"type": ""
													}
												],
												"src": "12050:355:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12584:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12601:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12612:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12594:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12594:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12594:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12635:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12646:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12631:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12631:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12651:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12624:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12624:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12674:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12685:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12670:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12670:18:13"
																	},
																	{
																		"hexValue": "5075626c6963206d696e74206973206e6f74206f70656e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12690:26:13",
																		"type": "",
																		"value": "Public mint is not open."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12663:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12663:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12663:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12726:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12738:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12749:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12734:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12734:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12726:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_507f035c670b11e911e1eb5937077419dc7c16add6610aed12b3d2f661e88ec0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12561:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12575:4:13",
														"type": ""
													}
												],
												"src": "12410:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12937:177:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12954:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12965:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12947:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12947:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12947:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12988:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12999:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12984:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12984:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13004:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12977:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12977:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12977:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13027:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13038:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13023:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13023:18:13"
																	},
																	{
																		"hexValue": "6861686120436f6e74726163742063616e27742063616c6c206d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13043:29:13",
																		"type": "",
																		"value": "haha Contract can't call me"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13016:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13016:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13016:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13082:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13094:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13105:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13090:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13090:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13082:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12914:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12928:4:13",
														"type": ""
													}
												],
												"src": "12763:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13293:173:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13310:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13321:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13303:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13303:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13303:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13344:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13355:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13340:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13340:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13360:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13333:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13333:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13333:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13383:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13394:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13379:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13379:18:13"
																	},
																	{
																		"hexValue": "596f752061726520616c7265616479206d696e7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13399:25:13",
																		"type": "",
																		"value": "You are already minted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13372:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13372:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13372:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13434:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13446:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13457:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13442:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13442:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13434:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13270:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13284:4:13",
														"type": ""
													}
												],
												"src": "13119:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13645:180:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13662:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13673:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13655:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13655:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13655:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13696:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13707:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13692:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13692:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13712:2:13",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13685:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13685:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13685:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13735:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13746:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13731:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13731:18:13"
																	},
																	{
																		"hexValue": "436f6e7472616374204d696e74206973206e6f7420617070726f7665642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13751:32:13",
																		"type": "",
																		"value": "Contract Mint is not approved."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13724:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13724:60:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13724:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13793:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13805:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13816:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13801:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13801:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13793:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13622:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13636:4:13",
														"type": ""
													}
												],
												"src": "13471:354:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14004:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14021:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14032:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14014:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14014:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14014:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14055:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14066:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14051:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14051:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14071:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14044:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14044:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14044:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14094:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14105:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14090:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14090:18:13"
																	},
																	{
																		"hexValue": "556e617574686f72697a6564205075626c69634d696e74205468697320557365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14110:34:13",
																		"type": "",
																		"value": "Unauthorized PublicMint This Use"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14083:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14083:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14083:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14165:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14176:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14161:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14161:18:13"
																	},
																	{
																		"hexValue": "722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14181:4:13",
																		"type": "",
																		"value": "r."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14154:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14154:32:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14195:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14207:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14218:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14203:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14203:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14195:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13981:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13995:4:13",
														"type": ""
													}
												],
												"src": "13830:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14362:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14372:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14384:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14395:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14380:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14380:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14372:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14414:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14425:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14407:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14407:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14407:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14452:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14463:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14448:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14448:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14468:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14441:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14441:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14441:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14323:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14334:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14342:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14353:4:13",
														"type": ""
													}
												],
												"src": "14233:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14660:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14677:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14688:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14670:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14670:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14670:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14711:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14722:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14707:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14707:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14727:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14700:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14700:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14700:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14750:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14761:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14746:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14746:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14766:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14739:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14739:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14739:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14821:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14832:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14817:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14817:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14837:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14810:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14810:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14810:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14855:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14867:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14878:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14863:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14863:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14855:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14637:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14651:4:13",
														"type": ""
													}
												],
												"src": "14486:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15067:175:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15084:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15095:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15077:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15077:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15077:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15118:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15129:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15114:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15114:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15134:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15107:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15107:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15107:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15157:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15168:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15153:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15153:18:13"
																	},
																	{
																		"hexValue": "50726976617465206d696e74206973206e6f74206f70656e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15173:27:13",
																		"type": "",
																		"value": "Private mint is not open."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15146:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15146:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15146:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15210:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15222:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15233:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15218:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15218:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15210:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44088db98f64bd7f2c584eff446b56f0c15b8c18215ca7ced6e447e24db3d2bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15044:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15058:4:13",
														"type": ""
													}
												],
												"src": "14893:349:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15421:171:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15438:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15449:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15431:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15431:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15431:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15472:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15483:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15468:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15468:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15488:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15461:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15461:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15461:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15511:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15522:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15507:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15507:18:13"
																	},
																	{
																		"hexValue": "4d696e74206973206e6f7420617070726f7665642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15527:23:13",
																		"type": "",
																		"value": "Mint is not approved."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15500:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15500:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15500:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15560:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15572:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15583:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15568:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15568:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15560:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15398:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15412:4:13",
														"type": ""
													}
												],
												"src": "15247:345:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15771:229:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15788:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15799:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15781:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15781:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15781:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15822:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15833:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15818:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15818:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15838:2:13",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15811:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15811:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15811:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15861:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15872:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15857:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15857:18:13"
																	},
																	{
																		"hexValue": "436f6e747261637420617265206e6f7420696e2074686973206d696e74696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15877:34:13",
																		"type": "",
																		"value": "Contract are not in this minting"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15850:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15850:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15850:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15932:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15943:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15928:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15928:18:13"
																	},
																	{
																		"hexValue": "20726f756e642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15948:9:13",
																		"type": "",
																		"value": " round."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15921:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15921:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15921:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15967:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15979:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15990:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15975:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15975:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15967:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15748:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15762:4:13",
														"type": ""
													}
												],
												"src": "15597:403:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16037:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16054:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16061:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16066:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16057:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16057:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16047:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16047:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16047:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16094:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16097:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16087:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16087:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16087:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16118:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16121:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16111:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16111:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16111:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16005:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16185:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16212:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16214:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16214:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16214:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16201:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16208:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16204:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16204:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16198:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16198:13:13"
															},
															"nodeType": "YulIf",
															"src": "16195:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16243:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16254:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16257:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16250:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16250:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "16243:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16168:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16171:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "16177:3:13",
														"type": ""
													}
												],
												"src": "16137:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16444:161:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16461:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16472:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16454:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16454:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16454:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16495:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16506:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16491:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16491:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16511:2:13",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16484:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16484:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16484:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16534:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16545:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16530:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16530:18:13"
																	},
																	{
																		"hexValue": "4f76657220737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16550:13:13",
																		"type": "",
																		"value": "Over supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16523:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16523:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16523:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16573:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16585:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16596:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16581:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16581:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16573:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16421:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16435:4:13",
														"type": ""
													}
												],
												"src": "16270:335:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16785:184:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16802:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16815:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16819:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "16811:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16811:15:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16832:26:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "16828:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16828:31:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16807:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16807:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16795:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16795:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16795:66:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16881:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16886:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16877:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16877:12:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16891:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16870:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16870:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16870:28:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16918:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16923:2:13",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16914:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16914:12:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16928:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16907:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16907:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16907:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16944:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16955:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16960:2:13",
																		"type": "",
																		"value": "84"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16951:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16951:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16944:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16745:3:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16750:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16758:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16766:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16777:3:13",
														"type": ""
													}
												],
												"src": "16610:359:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17148:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17165:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17176:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17158:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17158:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17158:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17199:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17210:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17195:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17195:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17215:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17188:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17188:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17188:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17238:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17249:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17234:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17234:18:13"
																	},
																	{
																		"hexValue": "556e617574686f72697a65642057686974656c6973744d696e74205468697320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17254:34:13",
																		"type": "",
																		"value": "Unauthorized WhitelistMint This "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17227:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17227:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17227:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17309:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17320:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17305:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17305:18:13"
																	},
																	{
																		"hexValue": "557365722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17325:7:13",
																		"type": "",
																		"value": "User."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17298:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17298:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17298:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17342:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17354:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17365:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17350:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17350:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17342:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17125:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17139:4:13",
														"type": ""
													}
												],
												"src": "16974:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17600:160:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17617:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17622:66:13",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17610:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17610:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17610:79:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17709:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17714:2:13",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17705:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17705:12:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17719:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17698:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17698:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17698:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17735:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17746:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17751:2:13",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17742:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17742:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17735:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17576:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17581:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17592:3:13",
														"type": ""
													}
												],
												"src": "17380:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17797:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17814:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17821:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17826:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17817:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17817:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17807:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17807:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17807:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17854:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17857:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17847:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17847:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17847:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17878:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17881:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17871:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17871:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17871:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "17765:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17944:88:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17975:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17977:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17977:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17977:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17960:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17971:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17967:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17967:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17957:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17957:17:13"
															},
															"nodeType": "YulIf",
															"src": "17954:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18006:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18017:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18024:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18013:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18013:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18006:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17926:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17936:3:13",
														"type": ""
													}
												],
												"src": "17897:135:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_contract$_INagaKid_$494(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_contract$_INagaKid_$494__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := calldataload(add(headStart, 0x20))\n        value3 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient Balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"This tokenId is not owned by con\")\n        mstore(add(headStart, 96), \"tract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_507f035c670b11e911e1eb5937077419dc7c16add6610aed12b3d2f661e88ec0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Public mint is not open.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"haha Contract can't call me\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"You are already minted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Contract Mint is not approved.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Unauthorized PublicMint This Use\")\n        mstore(add(headStart, 96), \"r.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_44088db98f64bd7f2c584eff446b56f0c15b8c18215ca7ced6e447e24db3d2bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Private mint is not open.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Mint is not approved.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Contract are not in this minting\")\n        mstore(add(headStart, 96), \" round.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Over supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        end := add(pos, 84)\n    }\n    function abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Unauthorized WhitelistMint This \")\n        mstore(add(headStart, 96), \"User.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101e35760003560e01c8063a4435dfd11610102578063ef5fe79f11610095578063f6b48e5511610064578063f6b48e55146105eb578063fa540801146105fe578063ff05fe4a1461061e578063ffdc61291461063e57600080fd5b8063ef5fe79f14610548578063f055c7a91461055e578063f2fde38b14610597578063f500cdfc146105b757600080fd5b8063c4e41b22116100d1578063c4e41b22146104cc578063de6892c8146104e1578063df4e5881146104f4578063e02023a11461051457600080fd5b8063a4435dfd14610411578063a7bb58031461042b578063b5abafa114610469578063bff863ec146104ac57600080fd5b80636c19e7831161017a5780638907f3fa116101495780638907f3fa146103945780638da5cb5b146103b357806397aba7f9146103d15780639e6c8855146103f157600080fd5b80636c19e7831461031f578063715018a61461033f5780637cb64759146103545780638407ecc41461037457600080fd5b80632eb4a7ab116101b65780632eb4a7ab146102a257806342920a46146102b85780634c0f38c2146102e857806351cff8d9146102fd57600080fd5b80630a25dea9146101e85780631f5ac1b214610210578063238ac9331461023057806324c37a851461026e575b600080fd5b3480156101f457600080fd5b506101fd600081565b6040519081526020015b60405180910390f35b34801561021c57600080fd5b506101fd61022b366004611949565b610684565b34801561023c57600080fd5b50600554610256906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610207565b34801561027a57600080fd5b506101fd7fb3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db381565b3480156102ae57600080fd5b506101fd60045481565b3480156102c457600080fd5b506102d86102d3366004611a10565b6106ce565b6040519015158152602001610207565b3480156102f457600080fd5b506101fd610711565b34801561030957600080fd5b5061031d610318366004611949565b610784565b005b34801561032b57600080fd5b5061031d61033a366004611949565b6108ae565b34801561034b57600080fd5b5061031d610946565b34801561036057600080fd5b5061031d61036f366004611a72565b61097c565b34801561038057600080fd5b5061031d61038f366004611a8b565b6109e4565b3480156103a057600080fd5b506005546102d890610100900460ff1681565b3480156103bf57600080fd5b506000546001600160a01b0316610256565b3480156103dd57600080fd5b506102566103ec366004611ac4565b610b84565b3480156103fd57600080fd5b5061031d61040c366004611949565b610c03565b34801561041d57600080fd5b506005546102d89060ff1681565b34801561043757600080fd5b5061044b610446366004611b0b565b610c89565b60408051938452602084019290925260ff1690820152606001610207565b34801561047557600080fd5b506101fd610484366004611b48565b6001600160a01b03919091166000908152600760209081526040808320938352929052205490565b3480156104b857600080fd5b5061031d6104c7366004611b74565b610cfd565b3480156104d857600080fd5b506101fd610ead565b61031d6104ef366004611bb5565b610ef7565b34801561050057600080fd5b50600254610256906001600160a01b031681565b34801561052057600080fd5b506101fd7f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec81565b34801561055457600080fd5b506101fd60035481565b34801561056a57600080fd5b506102d8610579366004611949565b6001600160a01b031660009081526008602052604090205460ff1690565b3480156105a357600080fd5b5061031d6105b2366004611949565b61127f565b3480156105c357600080fd5b506101fd7f68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba81565b61031d6105f9366004611c27565b61131a565b34801561060a57600080fd5b506101fd610619366004611a72565b6117b7565b34801561062a57600080fd5b5061031d610639366004611a72565b6117f2565b34801561064a57600080fd5b506102d8610659366004611b48565b6001600160a01b03919091166000908152600660209081526040808320938352929052205460ff1690565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b6000806106da84610684565b905060006106e7826117b7565b9050856001600160a01b03166106fd8286610b84565b6001600160a01b0316149695505050505050565b6002546040805163d5abeb0160e01b815290516000926001600160a01b03169163d5abeb019160048083019260209291908290030181865afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190611ca9565b905090565b6000546001600160a01b031633146107b75760405162461bcd60e51b81526004016107ae90611cc2565b60405180910390fd5b47806107fc5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b60448201526064016107ae565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610849576040519150601f19603f3d011682016040523d82523d6000602084013e61084e565b606091505b505090508061085c57600080fd5b604080516001600160a01b03851681526020810184905242918101919091527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906060015b60405180910390a1505050565b6000546001600160a01b031633146108d85760405162461bcd60e51b81526004016107ae90611cc2565b600580546001600160a01b038381166201000081810262010000600160b01b031985161790945560408051949093049091168084526020840191909152917feeb293e1f8f3a9db91ade748726387ed1352ca78f5430c5f06fe3d1e1ad5057991015b60405180910390a15050565b6000546001600160a01b031633146109705760405162461bcd60e51b81526004016107ae90611cc2565b61097a600061185a565b565b6000546001600160a01b031633146109a65760405162461bcd60e51b81526004016107ae90611cc2565b600480549082905560408051828152602081018490527f123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe910161093a565b6000546001600160a01b03163314610a0e5760405162461bcd60e51b81526004016107ae90611cc2565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190611ca9565b905060008111610ac25760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b60448201526064016107ae565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820183905283169063a9059cbb906044016020604051808303816000875af1158015610b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b359190611cf7565b50604080516001600160a01b038086168252841660208201529081018290524260608201527fb818a975f91276df8ba59329becbc23c793df0d503c19ac296c3c372a1fa0461906080016108a1565b600080600080610b9385610c89565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610bee573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000546001600160a01b03163314610c2d5760405162461bcd60e51b81526004016107ae90611cc2565b600280546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935283917fabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d97391016108a1565b60008060008351604114610cdf5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016107ae565b50505060208101516040820151606090920151909260009190911a90565b6000546001600160a01b03163314610d275760405162461bcd60e51b81526004016107ae90611cc2565b6040516331a9108f60e11b81526004810182905230906001600160a01b03841690636352211e90602401602060405180830381865afa158015610d6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d929190611d19565b6001600160a01b031614610df65760405162461bcd60e51b815260206004820152602560248201527f5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e6044820152641d1c9858dd60da1b60648201526084016107ae565b604051632142170760e11b81523060048201526001600160a01b038481166024830152604482018390528316906342842e0e90606401600060405180830381600087803b158015610e4657600080fd5b505af1158015610e5a573d6000803e3d6000fd5b5050604080516001600160a01b038088168252861660208201529081018490524260608201527f0127a8d3f57942833f6930572bce52ad882683e36eeb5830d199d3fa4bfa9467925060800190506108a1565b600254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801561075b573d6000803e3d6000fd5b600260015403610f495760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107ae565b6002600190815560055460ff16151514610fa55760405162461bcd60e51b815260206004820152601860248201527f5075626c6963206d696e74206973206e6f74206f70656e2e000000000000000060448201526064016107ae565b323314610ff45760405162461bcd60e51b815260206004820152601b60248201527f6861686120436f6e74726163742063616e27742063616c6c206d65000000000060448201526064016107ae565b3360009081526008602052604090205460ff1615156001036110525760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016107ae565b6002546040516355138f0d60e11b81523060048201526001600160a01b039091169063aa271e1a90602401602060405180830381865afa15801561109a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110be9190611cf7565b61110a5760405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374204d696e74206973206e6f7420617070726f7665642e000060448201526064016107ae565b611160600560029054906101000a90046001600160a01b03163384848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506106ce92505050565b6111b75760405162461bcd60e51b815260206004820152602260248201527f556e617574686f72697a6564205075626c69634d696e74205468697320557365604482015261391760f11b60648201526084016107ae565b3360008181526008602052604090819020805460ff191660019081179091556002549151632851206560e21b8152600481019390935260248301819052916001600160a01b039091169063a144819490604401600060405180830381600087803b15801561122457600080fd5b505af1158015611238573d6000803e3d6000fd5b5050604080518481524260208201523393507fc1a73b31b32801ebbb4cae30b73eae4345be9f2915ea60306383c245ef8fac4492500160405180910390a250506001805550565b6000546001600160a01b031633146112a95760405162461bcd60e51b81526004016107ae90611cc2565b6001600160a01b03811661130e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107ae565b6113178161185a565b50565b60026001540361136c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107ae565b60026001908155600554610100900460ff161515146113cd5760405162461bcd60e51b815260206004820152601960248201527f50726976617465206d696e74206973206e6f74206f70656e2e0000000000000060448201526064016107ae565b806114125760405162461bcd60e51b815260206004820152601560248201527426b4b73a1034b9903737ba1030b8383937bb32b21760591b60448201526064016107ae565b80600354146114735760405162461bcd60e51b815260206004820152602760248201527f436f6e747261637420617265206e6f7420696e2074686973206d696e74696e67604482015266103937bab7321760c91b60648201526084016107ae565b61147b610711565b82611484610ead565b61148e9190611d4c565b106114c95760405162461bcd60e51b815260206004820152600b60248201526a4f76657220737570706c7960a81b60448201526064016107ae565b33600090815260066020908152604080832084845290915290205460ff161561152e5760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016107ae565b6002546040516355138f0d60e11b81523060048201526001600160a01b039091169063aa271e1a90602401602060405180830381865afa158015611576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159a9190611cf7565b6115e65760405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374204d696e74206973206e6f7420617070726f7665642e000060448201526064016107ae565b611669848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506004546040516bffffffffffffffffffffffff193360601b16602082015260348101889052605481018790529092506074019050604051602081830303815290604052805190602001206118aa565b6116c35760405162461bcd60e51b815260206004820152602560248201527f556e617574686f72697a65642057686974656c6973744d696e742054686973206044820152642ab9b2b91760d91b60648201526084016107ae565b3360008181526006602090815260408083208584528252808320805460ff19166001179055928252600781528282208483529052908120805484929061170a908490611d4c565b9091555050600254604051632851206560e21b8152336004820152602481018490526001600160a01b039091169063a144819490604401600060405180830381600087803b15801561175b57600080fd5b505af115801561176f573d6000803e3d6000fd5b5050604080518581524260208201523393507fe9e607753e80542a9021d5149990f18919907f0136fad424eaac3d15056ccf6e92500160405180910390a25050600180555050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c016106b1565b6000546001600160a01b0316331461181c5760405162461bcd60e51b81526004016107ae90611cc2565b600380549082905560408051828152602081018490527f521ec96875ca228cd2fc1dbd4c927a34328c9ce1a83bcb8c1f633f012c90d785910161093a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000826118b785846118c0565b14949350505050565b600081815b845181101561192c5760008582815181106118e2576118e2611d64565b602002602001015190508083116119085760008381526020829052604090209250611919565b600081815260208490526040902092505b508061192481611d7a565b9150506118c5565b509392505050565b6001600160a01b038116811461131757600080fd5b60006020828403121561195b57600080fd5b813561196681611934565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261199457600080fd5b813567ffffffffffffffff808211156119af576119af61196d565b604051601f8301601f19908116603f011681019082821181831017156119d7576119d761196d565b816040528381528660208588010111156119f057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611a2557600080fd5b8335611a3081611934565b92506020840135611a4081611934565b9150604084013567ffffffffffffffff811115611a5c57600080fd5b611a6886828701611983565b9150509250925092565b600060208284031215611a8457600080fd5b5035919050565b60008060408385031215611a9e57600080fd5b8235611aa981611934565b91506020830135611ab981611934565b809150509250929050565b60008060408385031215611ad757600080fd5b82359150602083013567ffffffffffffffff811115611af557600080fd5b611b0185828601611983565b9150509250929050565b600060208284031215611b1d57600080fd5b813567ffffffffffffffff811115611b3457600080fd5b611b4084828501611983565b949350505050565b60008060408385031215611b5b57600080fd5b8235611b6681611934565b946020939093013593505050565b600080600060608486031215611b8957600080fd5b8335611b9481611934565b92506020840135611ba481611934565b929592945050506040919091013590565b60008060208385031215611bc857600080fd5b823567ffffffffffffffff80821115611be057600080fd5b818501915085601f830112611bf457600080fd5b813581811115611c0357600080fd5b866020828501011115611c1557600080fd5b60209290920196919550909350505050565b60008060008060608587031215611c3d57600080fd5b843567ffffffffffffffff80821115611c5557600080fd5b818701915087601f830112611c6957600080fd5b813581811115611c7857600080fd5b8860208260051b8501011115611c8d57600080fd5b6020928301999098509187013596604001359550909350505050565b600060208284031215611cbb57600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611d0957600080fd5b8151801515811461196657600080fd5b600060208284031215611d2b57600080fd5b815161196681611934565b634e487b7160e01b600052601160045260246000fd5b60008219821115611d5f57611d5f611d36565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201611d8c57611d8c611d36565b506001019056fea26469706673582212206818e59282e4a16d5d14784e075d3c8dd60cd412976fc22011751158cfcd0de164736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4435DFD GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xEF5FE79F GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF6B48E55 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF6B48E55 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xFF05FE4A EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0xFFDC6129 EQ PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEF5FE79F EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xF055C7A9 EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0xF500CDFC EQ PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4E41B22 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0xDE6892C8 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0xDF4E5881 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0xE02023A1 EQ PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA4435DFD EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0xB5ABAFA1 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xBFF863EC EQ PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C19E783 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x8907F3FA GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x8907F3FA EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x9E6C8855 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x8407ECC4 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB4A7AB GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x4C0F38C2 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA25DEA9 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x24C37A85 EQ PUSH2 0x26E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x256 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH32 0xB3C595E55271590809F54E2F4FC3A582754F45B104DD3C41666E2AD310493DB3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x711 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x946 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH2 0x3EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC4 JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2D8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0B JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x207 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x4C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x31D PUSH2 0x4EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0xEF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH32 0x5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0x579 CALLDATASIZE PUSH1 0x4 PUSH2 0x1949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x5B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x127F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH32 0x68E7D51FDB912CB107DDA2E59B053D87FCCA666DD0EF5339CD3474CCB5276BBA DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x5F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0x131A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x619 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x17B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x17F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0x659 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6DA DUP5 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6E7 DUP3 PUSH2 0x17B7 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6FD DUP3 DUP7 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5ABEB01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD5ABEB01 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP1 PUSH2 0x7FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x84E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x85C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH3 0x10000 DUP2 DUP2 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH32 0xEEB293E1F8F3A9DB91ADE748726387ED1352CA78F5430C5F06FE3D1E1AD50579 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x970 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x97A PUSH1 0x0 PUSH2 0x185A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE SWAP2 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB35 SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xB818A975F91276DF8BA59329BECBC23C793DF0D503C19AC296C3C372A1FA0461 SWAP1 PUSH1 0x80 ADD PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xB93 DUP6 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 SWAP2 PUSH32 0xABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973 SWAP2 ADD PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0xCDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD92 SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E4964206973206E6F74206F776E656420627920636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x127A8D3F57942833F6930572BCE52AD882683E36EEB5830D199D3FA4BFA9467 SWAP3 POP PUSH1 0x80 ADD SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xF49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C6963206D696E74206973206E6F74206F70656E2E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0xFF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6861686120436F6E74726163742063616E27742063616C6C206D650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x55138F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAA271E1A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x109A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10BE SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x110A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x1160 PUSH1 0x5 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x6CE SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A6564205075626C69634D696E74205468697320557365 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x28512065 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1448194 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1238 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP PUSH32 0xC1A73B31B32801EBBB4CAE30B73EAE4345BE9F2915EA60306383C245EF8FAC44 SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x130E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x1317 DUP2 PUSH2 0x185A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x136C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x13CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726976617465206D696E74206973206E6F74206F70656E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST DUP1 PUSH2 0x1412 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x26B4B73A1034B9903737BA1030B8383937BB32B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST DUP1 PUSH1 0x3 SLOAD EQ PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420617265206E6F7420696E2074686973206D696E74696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x103937BAB73217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x147B PUSH2 0x711 JUMP JUMPDEST DUP3 PUSH2 0x1484 PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x148E SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST LT PUSH2 0x14C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4F76657220737570706C79 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x152E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x55138F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAA271E1A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1576 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x159A SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x15E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x1669 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH1 0x74 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0x16C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642057686974656C6973744D696E74205468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2AB9B2B917 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x170A SWAP1 DUP5 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x28512065 PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1448194 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x175B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x176F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP PUSH32 0xE9E607753E80542A9021D5149990F18919907F0136FAD424EAAC3D15056CCF6E SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x181C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x521EC96875CA228CD2FC1DBD4C927A34328C9CE1A83BCB8C1F633F012C90D785 SWAP2 ADD PUSH2 0x93A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18B7 DUP6 DUP5 PUSH2 0x18C0 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x192C JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x18E2 JUMPI PUSH2 0x18E2 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x1908 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x1924 DUP2 PUSH2 0x1D7A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18C5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1966 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19AF JUMPI PUSH2 0x19AF PUSH2 0x196D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x19D7 JUMPI PUSH2 0x19D7 PUSH2 0x196D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x19F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1A30 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1A40 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A68 DUP7 DUP3 DUP8 ADD PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1AA9 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1AB9 DUP2 PUSH2 0x1934 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B01 DUP6 DUP3 DUP7 ADD PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B40 DUP5 DUP3 DUP6 ADD PUSH2 0x1983 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B66 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1B94 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1BA4 DUP2 PUSH2 0x1934 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1C15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP10 SWAP1 SWAP9 POP SWAP2 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x40 ADD CALLDATALOAD SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1966 DUP2 PUSH2 0x1934 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D5F JUMPI PUSH2 0x1D5F PUSH2 0x1D36 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D8C JUMPI PUSH2 0x1D8C PUSH2 0x1D36 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x18E59282E4A16D5D14 PUSH25 0x4E075D3C8DD60CD412976FC22011751158CFCD0DE164736F6C PUSH4 0x4300080F STOP CALLER ",
							"sourceMap": "428:6458:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;826:100;;;;;;;;;;-1:-1:-1;826:100:8;860:66;826:100;;;;;160:25:13;;;148:2;133:18;826:100:8;;;;;;;;99:160:9;;;;;;;;;;-1:-1:-1;99:160:9;;;;;:::i;:::-;;:::i;1213:21:8:-;;;;;;;;;;-1:-1:-1;1213:21:8;;;;;;;-1:-1:-1;;;;;1213:21:8;;;;;;-1:-1:-1;;;;;748:32:13;;;730:51;;718:2;703:18;1213:21:8;584:203:13;661:84:8;;;;;;;;;;;;710:35;661:84;;1090:25;;;;;;;;;;;;;;;;769:350:9;;;;;;;;;;-1:-1:-1;769:350:9;;;;;:::i;:::-;;:::i;:::-;;;2413:14:13;;2406:22;2388:41;;2376:2;2361:18;769:350:9;2248:187:13;6774:107:8;;;;;;;;;;;;;:::i;5282:338::-;;;;;;;;;;-1:-1:-1;5282:338:8;;;;;:::i;:::-;;:::i;:::-;;2916:184;;;;;;;;;;-1:-1:-1;2916:184:8;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;3108:220:8:-;;;;;;;;;;-1:-1:-1;3108:220:8;;;;;:::i;:::-;;:::i;5628:377::-;;;;;;;;;;-1:-1:-1;5628:377:8;;;;;:::i;:::-;;:::i;1167:37::-;;;;;;;;;;-1:-1:-1;1167:37:8;;;;;;;;;;;1036:85:0;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;1127:274:9;;;;;;;;;;-1:-1:-1;1127:274:9;;;;;:::i;:::-;;:::i;2415:288:8:-;;;;;;;;;;-1:-1:-1;2415:288:8;;;;;:::i;:::-;;:::i;1124:36::-;;;;;;;;;;-1:-1:-1;1124:36:8;;;;;;;;1409:891:9;;;;;;;;;;-1:-1:-1;1409:891:9;;;;;:::i;:::-;;:::i;:::-;;;;4384:25:13;;;4440:2;4425:18;;4418:34;;;;4500:4;4488:17;4468:18;;;4461:45;4372:2;4357:18;1409:891:9;4186:326:13;6504:143:8;;;;;;;;;;-1:-1:-1;6504:143:8;;;;;:::i;:::-;-1:-1:-1;;;;;6607:24:8;;;;6580:7;6607:24;;;:17;:24;;;;;;;;:32;;;;;;;;;6504:143;6013:343;;;;;;;;;;-1:-1:-1;6013:343:8;;;;;:::i;:::-;;:::i;6655:111::-;;;;;;;;;;;;;:::i;4339:815::-;;;;;;:::i;:::-;;:::i;1014:31::-;;;;;;;;;;-1:-1:-1;1014:31:8;;;;-1:-1:-1;;;;;1014:31:8;;;939:66;;;;;;;;;;;;979:26;939:66;;1052:31;;;;;;;;;;;;;;;;5162:112;;;;;;;;;;-1:-1:-1;5162:112:8;;;;;:::i;:::-;-1:-1:-1;;;;;5244:22:8;5221:4;5244:22;;;:15;:22;;;;;;;;;5162:112;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;504:80:8:-;;;;;;;;;;;;551:33;504:80;;3336:995;;;;;;:::i;:::-;;:::i;267:494:9:-;;;;;;;;;;-1:-1:-1;267:494:9;;;;;:::i;:::-;;:::i;2711:197:8:-;;;;;;;;;;-1:-1:-1;2711:197:8;;;;;:::i;:::-;;:::i;6364:132::-;;;;;;;;;;-1:-1:-1;6364:132:8;;;;;:::i;:::-;-1:-1:-1;;;;;6460:20:8;;;;6436:4;6460:20;;;:13;:20;;;;;;;;:28;;;;;;;;;;;6364:132;99:160:9;212:38;;-1:-1:-1;;7107:2:13;7103:15;;;7099:24;;212:38:9;;;7087:37:13;244:4:9;7158:15:13;;7154:24;7140:12;;;7133:46;175:7:9;;7195:12:13;;212:38:9;;;;;;;;;;;;;202:49;;;;;;195:56;;99:160;;;:::o;769:350::-;896:4;913:19;935:21;950:5;935:14;:21::i;:::-;913:43;;967:28;998:36;1022:11;998:23;:36::i;:::-;967:67;;1104:7;-1:-1:-1;;;;;1054:57:9;:46;1068:20;1090:9;1054:13;:46::i;:::-;-1:-1:-1;;;;;1054:57:9;;;769:350;-1:-1:-1;;;;;;769:350:9:o;6774:107:8:-;6846:15;;:27;;;-1:-1:-1;;;6846:27:8;;;;6819:7;;-1:-1:-1;;;;;6846:15:8;;:25;;:27;;;;;;;;;;;;;;:15;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6839:34;;6774:107;:::o;5282:338::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;5366:21:8::1;5406::::0;5398:54:::1;;;::::0;-1:-1:-1;;;5398:54:8;;7970:2:13;5398:54:8::1;::::0;::::1;7952:21:13::0;8009:2;7989:18;;;7982:30;-1:-1:-1;;;8028:18:13;;;8021:50;8088:18;;5398:54:8::1;7768:344:13::0;5398:54:8::1;5464:11;5480:3;-1:-1:-1::0;;;;;5480:8:8::1;5496:17;5480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5463:56;;;5538:6;5530:15;;;::::0;::::1;;5563:49;::::0;;-1:-1:-1;;;;;8547:32:13;;8529:51;;8611:2;8596:18;;8589:34;;;5596:15:8::1;8639:18:13::0;;;8632:34;;;;5563:49:8::1;::::0;8517:2:13;8502:18;5563:49:8::1;;;;;;;;5330:290;;5282:338:::0;:::o;2916:184::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3004:6:8::1;::::0;;-1:-1:-1;;;;;3021:16:8;;::::1;3004:6:::0;3021:16;;::::1;-1:-1:-1::0;;;;;;3021:16:8;::::1;;::::0;;;3055:37:::1;::::0;;3004:6;;;::::1;::::0;;::::1;8889:34:13::0;;;8954:2;8939:18;;8932:43;;;;3004:6:8;3055:37:::1;::::0;8824:18:13;3055:37:8::1;;;;;;;;2969:131;2916:184:::0;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3108:220:8:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3208:10:8::1;::::0;;3229:24;;;;3271:49:::1;::::0;;9160:25:13;;;9216:2;9201:18;;9194:34;;;3271:49:8::1;::::0;9133:18:13;3271:49:8::1;8986:248:13::0;5628:377:8;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5738:42:8::1;::::0;-1:-1:-1;;;5738:42:8;;5774:4:::1;5738:42;::::0;::::1;730:51:13::0;5713:22:8::1;::::0;-1:-1:-1;;;;;5738:27:8;::::1;::::0;::::1;::::0;703:18:13;;5738:42:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5713:67;;5819:1;5799:17;:21;5791:54;;;::::0;-1:-1:-1;;;5791:54:8;;7970:2:13;5791:54:8::1;::::0;::::1;7952:21:13::0;8009:2;7989:18;;;7982:30;-1:-1:-1;;;8028:18:13;;;8021:50;8088:18;;5791:54:8::1;7768:344:13::0;5791:54:8::1;5856:50;::::0;-1:-1:-1;;;5856:50:8;;-1:-1:-1;;;;;9431:32:13;;;5856:50:8::1;::::0;::::1;9413:51:13::0;9480:18;;;9473:34;;;5856:26:8;::::1;::::0;::::1;::::0;9386:18:13;;5856:50:8::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5932:65:8::1;::::0;;-1:-1:-1;;;;;10087:15:13;;;10069:34;;10139:15;;10134:2;10119:18;;10112:43;10171:18;;;10164:34;;;5981:15:8::1;10229:2:13::0;10214:18;;10207:34;5932:65:8::1;::::0;10018:3:13;10003:19;5932:65:8::1;9800:447:13::0;1127:274:9;1252:7;1273:9;1284;1295:7;1306:26;1321:10;1306:14;:26::i;:::-;1352:41;;;;;;;;;;;;10479:25:13;;;10552:4;10540:17;;10520:18;;;10513:45;;;;10574:18;;;10567:34;;;10617:18;;;10610:34;;;1272:60:9;;-1:-1:-1;1272:60:9;;-1:-1:-1;1272:60:9;-1:-1:-1;1352:41:9;;10451:19:13;;1352:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1352:41:9;;-1:-1:-1;;1352:41:9;;;1127:274;-1:-1:-1;;;;;;;1127:274:9:o;2415:288:8:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2522:15:8::1;::::0;;-1:-1:-1;;;;;2549:26:8;;::::1;-1:-1:-1::0;;;;;;2549:26:8;::::1;::::0;::::1;::::0;;;2644:51:::1;::::0;;2522:15;;;::::1;8889:34:13::0;;;8954:2;8939:18;;8932:43;;;;2549:26:8;;2644:51:::1;::::0;8824:18:13;2644:51:8::1;8677:304:13::0;1409:891:9;1513:9;1537;1561:7;1604:3;:10;1618:2;1604:16;1596:53;;;;-1:-1:-1;;;1596:53:9;;10857:2:13;1596:53:9;;;10839:21:13;10896:2;10876:18;;;10869:30;10935:26;10915:18;;;10908:54;10979:18;;1596:53:9;10655:348:13;1596:53:9;-1:-1:-1;;;2058:2:9;2049:12;;2043:19;2128:2;2119:12;;2113:19;2235:2;2226:12;;;2220:19;2043;;2217:1;2212:28;;;;;1409:891::o;6013:343:8:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6113:31:8::1;::::0;-1:-1:-1;;;6113:31:8;;::::1;::::0;::::1;160:25:13::0;;;6156:4:8::1;::::0;-1:-1:-1;;;;;6113:21:8;::::1;::::0;::::1;::::0;133:18:13;;6113:31:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6113:48:8::1;;6105:98;;;::::0;-1:-1:-1;;;6105:98:8;;11466:2:13;6105:98:8::1;::::0;::::1;11448:21:13::0;11505:2;11485:18;;;11478:30;11544:34;11524:18;;;11517:62;-1:-1:-1;;;11595:18:13;;;11588:35;11640:19;;6105:98:8::1;11264:401:13::0;6105:98:8::1;6216:60;::::0;-1:-1:-1;;;6216:60:8;;6255:4:::1;6216:60;::::0;::::1;11910:34:13::0;-1:-1:-1;;;;;11980:15:13;;;11960:18;;;11953:43;12012:18;;;12005:34;;;6216:30:8;::::1;::::0;::::1;::::0;11845:18:13;;6216:60:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6302:46:8::1;::::0;;-1:-1:-1;;;;;10087:15:13;;;10069:34;;10139:15;;10134:2;10119:18;;10112:43;10171:18;;;10164:34;;;6332:15:8::1;10229:2:13::0;10214:18;;10207:34;6302:46:8::1;::::0;-1:-1:-1;10018:3:13;10003:19;;-1:-1:-1;6302:46:8::1;9800:447:13::0;6655:111:8;6729:15;;:29;;;-1:-1:-1;;;6729:29:8;;;;6702:7;;-1:-1:-1;;;;;6729:15:8;;:27;;:29;;;;;;;;;;;;;;:15;:29;;;;;;;;;;;;;;4339:815;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;12252:2:13;2317:63:1;;;12234:21:13;12291:2;12271:18;;;12264:30;12330:33;12310:18;;;12303:61;12381:18;;2317:63:1;12050:355:13;2317:63:1;1744:1;2455:7;:18;;;4429:16:8::1;::::0;::::1;;:24;;;4421:61;;;::::0;-1:-1:-1;;;4421:61:8;;12612:2:13;4421:61:8::1;::::0;::::1;12594:21:13::0;12651:2;12631:18;;;12624:30;12690:26;12670:18;;;12663:54;12734:18;;4421:61:8::1;12410:348:13::0;4421:61:8::1;4501:9;4514:10;4501:23;4493:63;;;::::0;-1:-1:-1;;;4493:63:8;;12965:2:13;4493:63:8::1;::::0;::::1;12947:21:13::0;13004:2;12984:18;;;12977:30;13043:29;13023:18;;;13016:57;13090:18;;4493:63:8::1;12763:351:13::0;4493:63:8::1;4590:10;5221:4:::0;5244:22;;;:15;:22;;;;;;;;4575:34:::1;;4605:4;4575:34:::0;4567:70:::1;;;::::0;-1:-1:-1;;;4567:70:8;;13321:2:13;4567:70:8::1;::::0;::::1;13303:21:13::0;13360:2;13340:18;;;13333:30;-1:-1:-1;;;13379:18:13;;;13372:53;13442:18;;4567:70:8::1;13119:347:13::0;4567:70:8::1;4727:15;::::0;:39:::1;::::0;-1:-1:-1;;;4727:39:8;;4760:4:::1;4727:39;::::0;::::1;730:51:13::0;-1:-1:-1;;;;;4727:15:8;;::::1;::::0;:24:::1;::::0;703:18:13;;4727:39:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4719:82;;;::::0;-1:-1:-1;;;4719:82:8;;13673:2:13;4719:82:8::1;::::0;::::1;13655:21:13::0;13712:2;13692:18;;;13685:30;13751:32;13731:18;;;13724:60;13801:18;;4719:82:8::1;13471:354:13::0;4719:82:8::1;4820:30;4827:6;;;;;;;;;-1:-1:-1::0;;;;;4827:6:8::1;4834:10;4845:4;;4820:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;4820:6:8::1;::::0;-1:-1:-1;;;4820:30:8:i:1;:::-;4812:77;;;::::0;-1:-1:-1;;;4812:77:8;;14032:2:13;4812:77:8::1;::::0;::::1;14014:21:13::0;14071:2;14051:18;;;14044:30;14110:34;14090:18;;;14083:62;-1:-1:-1;;;14161:18:13;;;14154:32;14203:19;;4812:77:8::1;13830:398:13::0;4812:77:8::1;4997:10;4948:15;4981:27:::0;;;:15:::1;:27;::::0;;;;;;:34;;-1:-1:-1;;4981:34:8::1;4966:1;4981:34:::0;;::::1;::::0;;;5026:15:::1;::::0;:44;;-1:-1:-1;;;5026:44:8;;::::1;::::0;::::1;9413:51:13::0;;;;9480:18;;;9473:34;;;4966:1:8;-1:-1:-1;;;;;5026:15:8;;::::1;::::0;:24:::1;::::0;9386:18:13;;5026:44:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5096:48:8::1;::::0;;9160:25:13;;;5128:15:8::1;9216:2:13::0;9201:18;;9194:34;5109:10:8::1;::::0;-1:-1:-1;5096:48:8::1;::::0;-1:-1:-1;9133:18:13;5096:48:8::1;;;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;4339:815:8:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;14688:2:13;1998:73:0::1;::::0;::::1;14670:21:13::0;14727:2;14707:18;;;14700:30;14766:34;14746:18;;;14739:62;-1:-1:-1;;;14817:18:13;;;14810:36;14863:19;;1998:73:0::1;14486:402:13::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;3336:995:8:-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;12252:2:13;2317:63:1;;;12234:21:13;12291:2;12271:18;;;12264:30;12330:33;12310:18;;;12303:61;12381:18;;2317:63:1;12050:355:13;2317:63:1;1744:1;2455:7;:18;;;3466:17:8::1;::::0;::::1;::::0;::::1;;;:25;;;3458:62;;;::::0;-1:-1:-1;;;3458:62:8;;15095:2:13;3458:62:8::1;::::0;::::1;15077:21:13::0;15134:2;15114:18;;;15107:30;15173:27;15153:18;;;15146:55;15218:18;;3458:62:8::1;14893:349:13::0;3458:62:8::1;3539:6:::0;3531:50:::1;;;::::0;-1:-1:-1;;;3531:50:8;;15449:2:13;3531:50:8::1;::::0;::::1;15431:21:13::0;15488:2;15468:18;;;15461:30;-1:-1:-1;;;15507:18:13;;;15500:51;15568:18;;3531:50:8::1;15247:345:13::0;3531:50:8::1;3620:6;3600:16;;:26;3592:78;;;::::0;-1:-1:-1;;;3592:78:8;;15799:2:13;3592:78:8::1;::::0;::::1;15781:21:13::0;15838:2;15818:18;;;15811:30;15877:34;15857:18;;;15850:62;-1:-1:-1;;;15928:18:13;;;15921:37;15975:19;;3592:78:8::1;15597:403:13::0;3592:78:8::1;3718:14;:12;:14::i;:::-;3708:7;3689:16;:14;:16::i;:::-;:26;;;;:::i;:::-;:43;3681:67;;;::::0;-1:-1:-1;;;3681:67:8;;16472:2:13;3681:67:8::1;::::0;::::1;16454:21:13::0;16511:2;16491:18;;;16484:30;-1:-1:-1;;;16530:18:13;;;16523:41;16581:18;;3681:67:8::1;16270:335:13::0;3681:67:8::1;3780:10;6436:4:::0;6460:20;;;:13;:20;;;;;;;;:28;;;;;;;;;;;3767:40:::1;3759:76;;;::::0;-1:-1:-1;;;3759:76:8;;13321:2:13;3759:76:8::1;::::0;::::1;13303:21:13::0;13360:2;13340:18;;;13333:30;-1:-1:-1;;;13379:18:13;;;13372:53;13442:18;;3759:76:8::1;13119:347:13::0;3759:76:8::1;3854:15;::::0;:39:::1;::::0;-1:-1:-1;;;3854:39:8;;3887:4:::1;3854:39;::::0;::::1;730:51:13::0;-1:-1:-1;;;;;3854:15:8;;::::1;::::0;:24:::1;::::0;703:18:13;;3854:39:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3846:82;;;::::0;-1:-1:-1;;;3846:82:8;;13673:2:13;3846:82:8::1;::::0;::::1;13655:21:13::0;13712:2;13692:18;;;13685:30;13751:32;13731:18;;;13724:60;13801:18;;3846:82:8::1;13471:354:13::0;3846:82:8::1;3947:96;3966:6;;3947:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;3974:10:8::1;::::0;3996:45:::1;::::0;-1:-1:-1;;4013:10:8::1;16815:2:13::0;16811:15;16807:53;3996:45:8::1;::::0;::::1;16795:66:13::0;16877:12;;;16870:28;;;16914:12;;;16907:28;;;3974:10:8;;-1:-1:-1;16951:12:13;;;-1:-1:-1;3996:45:8::1;;;;;;;;;;;;3986:56;;;;;;3947:18;:96::i;:::-;3939:146;;;::::0;-1:-1:-1;;;3939:146:8;;17176:2:13;3939:146:8::1;::::0;::::1;17158:21:13::0;17215:2;17195:18;;;17188:30;17254:34;17234:18;;;17227:62;-1:-1:-1;;;17305:18:13;;;17298:35;17350:19;;3939:146:8::1;16974:401:13::0;3939:146:8::1;4112:10;4098:25;::::0;;;:13:::1;:25;::::0;;;;;;;:33;;;;;;;;:40;;-1:-1:-1;;4098:40:8::1;4134:4;4098:40;::::0;;4149:29;;;:17:::1;:29:::0;;;;;:37;;;;;;;;:48;;4190:7;;4098:25;4149:48:::1;::::0;4190:7;;4149:48:::1;:::i;:::-;::::0;;;-1:-1:-1;;4210:15:8::1;::::0;:44:::1;::::0;-1:-1:-1;;;4210:44:8;;4235:10:::1;4210:44;::::0;::::1;9413:51:13::0;9480:18;;;9473:34;;;-1:-1:-1;;;;;4210:15:8;;::::1;::::0;:24:::1;::::0;9386:18:13;;4210:44:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4272:51:8::1;::::0;;9160:25:13;;;4307:15:8::1;9216:2:13::0;9201:18;;9194:34;4286:10:8::1;::::0;-1:-1:-1;4272:51:8::1;::::0;-1:-1:-1;9133:18:13;4272:51:8::1;;;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;;3336:995:8:o;267:494:9:-;611:127;;17622:66:13;611:127:9;;;17610:79:13;17705:12;;;17698:28;;;370:7:9;;17742:12:13;;611:127:9;17380:380:13;2711:197:8;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2796:16:8::1;::::0;;2823:25;;;;2866:34:::1;::::0;;9160:25:13;;;9216:2;9201:18;;9194:34;;;2866::8::1;::::0;9133:18:13;2866:34:8::1;8986:248:13::0;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1154:184:5:-;1275:4;1327;1298:25;1311:5;1318:4;1298:12;:25::i;:::-;:33;;1154:184;-1:-1:-1;;;;1154:184:5:o;1689:662::-;1772:7;1814:4;1772:7;1828:488;1852:5;:12;1848:1;:16;1828:488;;;1885:20;1908:5;1914:1;1908:8;;;;;;;;:::i;:::-;;;;;;;1885:31;;1950:12;1934;:28;1930:376;;2425:13;2473:15;;;2508:4;2501:15;;;2554:4;2538:21;;2060:57;;1930:376;;;2425:13;2473:15;;;2508:4;2501:15;;;2554:4;2538:21;;2234:57;;1930:376;-1:-1:-1;1866:3:5;;;;:::i;:::-;;;;1828:488;;;-1:-1:-1;2332:12:5;1689:662;-1:-1:-1;;;1689:662:5:o;196:131:13:-;-1:-1:-1;;;;;271:31:13;;261:42;;251:70;;317:1;314;307:12;332:247;391:6;444:2;432:9;423:7;419:23;415:32;412:52;;;460:1;457;450:12;412:52;499:9;486:23;518:31;543:5;518:31;:::i;:::-;568:5;332:247;-1:-1:-1;;;332:247:13:o;792:127::-;853:10;848:3;844:20;841:1;834:31;884:4;881:1;874:15;908:4;905:1;898:15;924:718;966:5;1019:3;1012:4;1004:6;1000:17;996:27;986:55;;1037:1;1034;1027:12;986:55;1073:6;1060:20;1099:18;1136:2;1132;1129:10;1126:36;;;1142:18;;:::i;:::-;1217:2;1211:9;1185:2;1271:13;;-1:-1:-1;;1267:22:13;;;1291:2;1263:31;1259:40;1247:53;;;1315:18;;;1335:22;;;1312:46;1309:72;;;1361:18;;:::i;:::-;1401:10;1397:2;1390:22;1436:2;1428:6;1421:18;1482:3;1475:4;1470:2;1462:6;1458:15;1454:26;1451:35;1448:55;;;1499:1;1496;1489:12;1448:55;1563:2;1556:4;1548:6;1544:17;1537:4;1529:6;1525:17;1512:54;1610:1;1603:4;1598:2;1590:6;1586:15;1582:26;1575:37;1630:6;1621:15;;;;;;924:718;;;;:::o;1647:596::-;1733:6;1741;1749;1802:2;1790:9;1781:7;1777:23;1773:32;1770:52;;;1818:1;1815;1808:12;1770:52;1857:9;1844:23;1876:31;1901:5;1876:31;:::i;:::-;1926:5;-1:-1:-1;1983:2:13;1968:18;;1955:32;1996:33;1955:32;1996:33;:::i;:::-;2048:7;-1:-1:-1;2106:2:13;2091:18;;2078:32;2133:18;2122:30;;2119:50;;;2165:1;2162;2155:12;2119:50;2188:49;2229:7;2220:6;2209:9;2205:22;2188:49;:::i;:::-;2178:59;;;1647:596;;;;;:::o;2622:180::-;2681:6;2734:2;2722:9;2713:7;2709:23;2705:32;2702:52;;;2750:1;2747;2740:12;2702:52;-1:-1:-1;2773:23:13;;2622:180;-1:-1:-1;2622:180:13:o;2807:388::-;2875:6;2883;2936:2;2924:9;2915:7;2911:23;2907:32;2904:52;;;2952:1;2949;2942:12;2904:52;2991:9;2978:23;3010:31;3035:5;3010:31;:::i;:::-;3060:5;-1:-1:-1;3117:2:13;3102:18;;3089:32;3130:33;3089:32;3130:33;:::i;:::-;3182:7;3172:17;;;2807:388;;;;;:::o;3200:::-;3277:6;3285;3338:2;3326:9;3317:7;3313:23;3309:32;3306:52;;;3354:1;3351;3344:12;3306:52;3390:9;3377:23;3367:33;;3451:2;3440:9;3436:18;3423:32;3478:18;3470:6;3467:30;3464:50;;;3510:1;3507;3500:12;3464:50;3533:49;3574:7;3565:6;3554:9;3550:22;3533:49;:::i;:::-;3523:59;;;3200:388;;;;;:::o;3861:320::-;3929:6;3982:2;3970:9;3961:7;3957:23;3953:32;3950:52;;;3998:1;3995;3988:12;3950:52;4038:9;4025:23;4071:18;4063:6;4060:30;4057:50;;;4103:1;4100;4093:12;4057:50;4126:49;4167:7;4158:6;4147:9;4143:22;4126:49;:::i;:::-;4116:59;3861:320;-1:-1:-1;;;;3861:320:13:o;4517:315::-;4585:6;4593;4646:2;4634:9;4625:7;4621:23;4617:32;4614:52;;;4662:1;4659;4652:12;4614:52;4701:9;4688:23;4720:31;4745:5;4720:31;:::i;:::-;4770:5;4822:2;4807:18;;;;4794:32;;-1:-1:-1;;;4517:315:13:o;4837:456::-;4914:6;4922;4930;4983:2;4971:9;4962:7;4958:23;4954:32;4951:52;;;4999:1;4996;4989:12;4951:52;5038:9;5025:23;5057:31;5082:5;5057:31;:::i;:::-;5107:5;-1:-1:-1;5164:2:13;5149:18;;5136:32;5177:33;5136:32;5177:33;:::i;:::-;4837:456;;5229:7;;-1:-1:-1;;;5283:2:13;5268:18;;;;5255:32;;4837:456::o;5298:591::-;5368:6;5376;5429:2;5417:9;5408:7;5404:23;5400:32;5397:52;;;5445:1;5442;5435:12;5397:52;5485:9;5472:23;5514:18;5555:2;5547:6;5544:14;5541:34;;;5571:1;5568;5561:12;5541:34;5609:6;5598:9;5594:22;5584:32;;5654:7;5647:4;5643:2;5639:13;5635:27;5625:55;;5676:1;5673;5666:12;5625:55;5716:2;5703:16;5742:2;5734:6;5731:14;5728:34;;;5758:1;5755;5748:12;5728:34;5803:7;5798:2;5789:6;5785:2;5781:15;5777:24;5774:37;5771:57;;;5824:1;5821;5814:12;5771:57;5855:2;5847:11;;;;;5877:6;;-1:-1:-1;5298:591:13;;-1:-1:-1;;;;5298:591:13:o;6118:757::-;6222:6;6230;6238;6246;6299:2;6287:9;6278:7;6274:23;6270:32;6267:52;;;6315:1;6312;6305:12;6267:52;6355:9;6342:23;6384:18;6425:2;6417:6;6414:14;6411:34;;;6441:1;6438;6431:12;6411:34;6479:6;6468:9;6464:22;6454:32;;6524:7;6517:4;6513:2;6509:13;6505:27;6495:55;;6546:1;6543;6536:12;6495:55;6586:2;6573:16;6612:2;6604:6;6601:14;6598:34;;;6628:1;6625;6618:12;6598:34;6683:7;6676:4;6666:6;6663:1;6659:14;6655:2;6651:23;6647:34;6644:47;6641:67;;;6704:1;6701;6694:12;6641:67;6735:4;6727:13;;;;6759:6;;-1:-1:-1;6797:20:13;;;6784:34;;6865:2;6850:18;6837:32;;-1:-1:-1;6118:757:13;;-1:-1:-1;;;;6118:757:13:o;7218:184::-;7288:6;7341:2;7329:9;7320:7;7316:23;7312:32;7309:52;;;7357:1;7354;7347:12;7309:52;-1:-1:-1;7380:16:13;;7218:184;-1:-1:-1;7218:184:13:o;7407:356::-;7609:2;7591:21;;;7628:18;;;7621:30;7687:34;7682:2;7667:18;;7660:62;7754:2;7739:18;;7407:356::o;9518:277::-;9585:6;9638:2;9626:9;9617:7;9613:23;9609:32;9606:52;;;9654:1;9651;9644:12;9606:52;9686:9;9680:16;9739:5;9732:13;9725:21;9718:5;9715:32;9705:60;;9761:1;9758;9751:12;11008:251;11078:6;11131:2;11119:9;11110:7;11106:23;11102:32;11099:52;;;11147:1;11144;11137:12;11099:52;11179:9;11173:16;11198:31;11223:5;11198:31;:::i;16005:127::-;16066:10;16061:3;16057:20;16054:1;16047:31;16097:4;16094:1;16087:15;16121:4;16118:1;16111:15;16137:128;16177:3;16208:1;16204:6;16201:1;16198:13;16195:39;;;16214:18;;:::i;:::-;-1:-1:-1;16250:9:13;;16137:128::o;17765:127::-;17826:10;17821:3;17817:20;17814:1;17807:31;17857:4;17854:1;17847:15;17881:4;17878:1;17871:15;17897:135;17936:3;17957:17;;;17954:43;;17977:18;;:::i;:::-;-1:-1:-1;18024:1:13;18013:13;;17897:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1525000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT()": "231",
								"NAGA_HOLDER_MINT_ROUND()": "297",
								"WHITELIST_MINT_ROUND()": "295",
								"WITHDRAW_ROLE()": "295",
								"allowlistMint(bytes32[],uint256,bytes32)": "infinite",
								"currentMintRound()": "2329",
								"getEthSignedMessageHash(bytes32)": "511",
								"getMaxSupply()": "infinite",
								"getMessageHash(address)": "604",
								"getTotalSupply()": "infinite",
								"isPrivateMintOpen()": "2366",
								"isPublicMintOpen()": "2356",
								"isPublicMinted(address)": "2610",
								"isUserMinted(address,bytes32)": "2752",
								"merkleRoot()": "2330",
								"nagaKidContract()": "2426",
								"owner()": "2398",
								"publicMint(bytes)": "infinite",
								"recoverSigner(bytes32,bytes)": "infinite",
								"renounceOwnership()": "28182",
								"setMerkleRoot(bytes32)": "28016",
								"setNagaKidContract(address)": "28186",
								"setRound(bytes32)": "28014",
								"setSigner(address)": "28127",
								"signer()": "2439",
								"splitSignature(bytes)": "infinite",
								"transferOwnership(address)": "infinite",
								"userMintedAmount(address,bytes32)": "2709",
								"verify(address,address,bytes)": "infinite",
								"withdraw(address)": "infinite",
								"withdrawCurrency(address,address)": "infinite",
								"withdrawNFT(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 428,
									"end": 6886,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 428,
									"end": 6886,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 6886,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1124,
									"end": 1160,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1124,
									"end": 1160,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1124,
									"end": 1160,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1167,
									"end": 1204,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1204,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1204,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2198,
									"end": 2407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2295,
									"end": 2331,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2314,
									"end": 2330,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2295,
									"end": 2313,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 2295,
									"end": 2331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2295,
									"end": 2331,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2295,
									"end": 2331,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2342,
									"end": 2368,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2356,
									"end": 2367,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2342,
									"end": 2355,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 2342,
									"end": 2368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2342,
									"end": 2368,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2342,
									"end": 2368,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2379,
									"end": 2397,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 2389,
									"end": 2396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2379,
									"end": 2388,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 2379,
									"end": 2397,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2379,
									"end": 2397,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 2379,
									"end": 2397,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2407,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 428,
									"end": 6886,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 428,
									"end": 6886,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2415,
									"end": 2703,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 2415,
									"end": 2703,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1248,
									"end": 1271,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 849,
									"end": 851,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 831,
									"end": 852,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 831,
									"end": 852,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 831,
									"end": 852,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 868,
									"end": 886,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 868,
									"end": 886,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 861,
									"end": 891,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 907,
									"end": 925,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 907,
									"end": 925,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 900,
									"end": 962,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 979,
									"end": 997,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 979,
									"end": 997,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2522,
									"end": 2537,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2522,
									"end": 2537,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2522,
									"end": 2537,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2549,
									"end": 2575,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2549,
									"end": 2575,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2549,
									"end": 2575,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2549,
									"end": 2575,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2549,
									"end": 2575,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2549,
									"end": 2575,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2549,
									"end": 2575,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2549,
									"end": 2575,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2549,
									"end": 2575,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2549,
									"end": 2575,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2644,
									"end": 2695,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2644,
									"end": 2695,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2644,
									"end": 2695,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2522,
									"end": 2537,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2522,
									"end": 2537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2522,
									"end": 2537,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2522,
									"end": 2537,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1254,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1220,
									"end": 1254,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1220,
									"end": 1254,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1285,
									"end": 1287,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2549,
									"end": 2575,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2549,
									"end": 2575,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2644,
									"end": 2695,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "ABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973"
								},
								{
									"begin": 2644,
									"end": 2695,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1173,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2644,
									"end": 2695,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2644,
									"end": 2695,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2644,
									"end": 2695,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2644,
									"end": 2695,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2644,
									"end": 2695,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2644,
									"end": 2695,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2644,
									"end": 2695,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 8
								},
								{
									"begin": 2479,
									"end": 2703,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2479,
									"end": 2703,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2415,
									"end": 2703,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2415,
									"end": 2703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3108,
									"end": 3328,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 3108,
									"end": 3328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1248,
									"end": 1271,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 849,
									"end": 851,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 831,
									"end": 852,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 831,
									"end": 852,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 831,
									"end": 852,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 868,
									"end": 886,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 868,
									"end": 886,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 861,
									"end": 891,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 907,
									"end": 925,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 907,
									"end": 925,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 900,
									"end": 962,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 979,
									"end": 997,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 979,
									"end": 997,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 647,
									"end": 1003,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3208,
									"end": 3218,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3208,
									"end": 3218,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3208,
									"end": 3218,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3229,
									"end": 3253,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3229,
									"end": 3253,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3229,
									"end": 3253,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3229,
									"end": 3253,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3271,
									"end": 3320,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3271,
									"end": 3320,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3271,
									"end": 3320,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1491,
									"end": 1516,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1491,
									"end": 1516,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1491,
									"end": 1516,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1547,
									"end": 1549,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 1550,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1532,
									"end": 1550,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1525,
									"end": 1559,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1525,
									"end": 1559,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1525,
									"end": 1559,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3271,
									"end": 3320,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE"
								},
								{
									"begin": 3271,
									"end": 3320,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1464,
									"end": 1482,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3271,
									"end": 3320,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 3271,
									"end": 3320,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3271,
									"end": 3320,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3271,
									"end": 3320,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3271,
									"end": 3320,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3271,
									"end": 3320,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3271,
									"end": 3320,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3271,
									"end": 3320,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3271,
									"end": 3320,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 8
								},
								{
									"begin": 3169,
									"end": 3328,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3108,
									"end": 3328,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3108,
									"end": 3328,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2916,
									"end": 3100,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 2916,
									"end": 3100,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1248,
									"end": 1271,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 849,
									"end": 851,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 831,
									"end": 852,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 831,
									"end": 852,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 831,
									"end": 852,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 868,
									"end": 886,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 868,
									"end": 886,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 861,
									"end": 891,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 907,
									"end": 925,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 907,
									"end": 925,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 900,
									"end": 962,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 979,
									"end": 997,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 979,
									"end": 997,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 647,
									"end": 1003,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3021,
									"end": 3037,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3021,
									"end": 3037,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3021,
									"end": 3037,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 8,
									"value": "10000"
								},
								{
									"begin": 3021,
									"end": 3037,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3021,
									"end": 3037,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3021,
									"end": 3037,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "10000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3021,
									"end": 3037,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3021,
									"end": 3037,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3021,
									"end": 3037,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3021,
									"end": 3037,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3021,
									"end": 3037,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3021,
									"end": 3037,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3055,
									"end": 3092,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3055,
									"end": 3092,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3055,
									"end": 3092,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3010,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3010,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1254,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1220,
									"end": 1254,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1220,
									"end": 1254,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1285,
									"end": 1287,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3055,
									"end": 3092,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "EEB293E1F8F3A9DB91ADE748726387ED1352CA78F5430C5F06FE3D1E1AD50579"
								},
								{
									"begin": 3055,
									"end": 3092,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1173,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3055,
									"end": 3092,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1008,
									"end": 1312,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 155,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 14,
									"end": 155,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 99,
									"end": 130,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 99,
									"end": 130,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 89,
									"end": 131,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 89,
									"end": 131,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 79,
									"end": 149,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 79,
									"end": 149,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 145,
									"end": 146,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 143,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 135,
									"end": 147,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 79,
									"end": 149,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 79,
									"end": 149,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 14,
									"end": 155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 160,
									"end": 642,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 264,
									"end": 270,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 278,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 280,
									"end": 286,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 333,
									"end": 335,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 321,
									"end": 330,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 312,
									"end": 319,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 308,
									"end": 331,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 304,
									"end": 336,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 301,
									"end": 353,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 301,
									"end": 353,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 301,
									"end": 353,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 349,
									"end": 350,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 346,
									"end": 347,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 339,
									"end": 351,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 301,
									"end": 353,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 301,
									"end": 353,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 381,
									"end": 390,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 375,
									"end": 391,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 400,
									"end": 441,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 435,
									"end": 440,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 400,
									"end": 441,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 400,
									"end": 441,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 400,
									"end": 441,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 400,
									"end": 441,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 510,
									"end": 512,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 495,
									"end": 513,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 489,
									"end": 514,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 460,
									"end": 465,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 460,
									"end": 465,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 523,
									"end": 566,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 489,
									"end": 514,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 523,
									"end": 566,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 523,
									"end": 566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 523,
									"end": 566,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 523,
									"end": 566,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 585,
									"end": 592,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 575,
									"end": 592,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 575,
									"end": 592,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 575,
									"end": 592,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 632,
									"end": 634,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 630,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 617,
									"end": 635,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 611,
									"end": 636,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 601,
									"end": 636,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 601,
									"end": 636,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1317,
									"end": 1565,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 1317,
									"end": 1565,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 428,
									"end": 6886,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 428,
									"end": 6886,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 428,
									"end": 6886,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 428,
									"end": 6886,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 6886,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 428,
									"end": 6886,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 6886,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206818e59282e4a16d5d14784e075d3c8dd60cd412976fc22011751158cfcd0de164736f6c634300080f0033",
									".code": [
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "A4435DFD"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "EF5FE79F"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "F6B48E55"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "F6B48E55"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "FA540801"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "FF05FE4A"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "FFDC6129"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "EF5FE79F"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "F055C7A9"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "F500CDFC"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "C4E41B22"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "C4E41B22"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "DE6892C8"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "DF4E5881"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "E02023A1"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "A4435DFD"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "A7BB5803"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "B5ABAFA1"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "BFF863EC"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "6C19E783"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "8907F3FA"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "8907F3FA"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "97ABA7F9"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "9E6C8855"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "6C19E783"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "7CB64759"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "8407ECC4"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "2EB4A7AB"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "2EB4A7AB"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "42920A46"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "4C0F38C2"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "51CFF8D9"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "A25DEA9"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "1F5AC1B2"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "238AC933"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "24C37A85"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6886,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 826,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 860,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 826,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 8,
											"value": "10000"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 748,
											"end": 780,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 748,
											"end": 780,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 748,
											"end": 780,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 730,
											"end": 781,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 730,
											"end": 781,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 718,
											"end": 720,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 584,
											"end": 787,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 661,
											"end": 745,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 661,
											"end": 745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 661,
											"end": 745,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 661,
											"end": 745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 710,
											"end": 745,
											"name": "PUSH",
											"source": 8,
											"value": "B3C595E55271590809F54E2F4FC3A582754F45B104DD3C41666E2AD310493DB3"
										},
										{
											"begin": 661,
											"end": 745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2427,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2413,
											"end": 2427,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2406,
											"end": 2428,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2378,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2248,
											"end": 2435,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 6774,
											"end": 6881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 5282,
											"end": 5620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5282,
											"end": 5620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2916,
											"end": 3100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2916,
											"end": 3100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3108,
											"end": 3328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 3108,
											"end": 3328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 5628,
											"end": 6005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5628,
											"end": 6005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2415,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2415,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4409,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4409,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4409,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4442,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4425,
											"end": 4443,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4425,
											"end": 4443,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4418,
											"end": 4452,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4418,
											"end": 4452,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4418,
											"end": 4452,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4418,
											"end": 4452,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4500,
											"end": 4504,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4488,
											"end": 4505,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4468,
											"end": 4486,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4468,
											"end": 4486,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4468,
											"end": 4486,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4461,
											"end": 4506,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4372,
											"end": 4374,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4357,
											"end": 4375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4186,
											"end": 4512,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 6504,
											"end": 6647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6580,
											"end": 6587,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6624,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6647,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6013,
											"end": 6356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 6013,
											"end": 6356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6655,
											"end": 6766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4339,
											"end": 5154,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 4339,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4339,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 4339,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 4339,
											"end": 5154,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4339,
											"end": 5154,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4339,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 4339,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4339,
											"end": 5154,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 4339,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4339,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 4339,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 979,
											"end": 1005,
											"name": "PUSH",
											"source": 8,
											"value": "5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC"
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 5162,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5221,
											"end": 5225,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5259,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 504,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 504,
											"end": 584,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 504,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 551,
											"end": 584,
											"name": "PUSH",
											"source": 8,
											"value": "68E7D51FDB912CB107DDA2E59B053D87FCCA666DD0EF5339CD3474CCB5276BBA"
										},
										{
											"begin": 504,
											"end": 584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 4331,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3336,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3336,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 3336,
											"end": 4331,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 4331,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3336,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3336,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 4331,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 3336,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3336,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2711,
											"end": 2908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2711,
											"end": 2908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 6364,
											"end": 6496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6436,
											"end": 6440,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6473,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6496,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7107,
											"end": 7109,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7103,
											"end": 7118,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7118,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7118,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7123,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7123,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7124,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 244,
											"end": 248,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7154,
											"end": 7178,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7140,
											"end": 7152,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 7140,
											"end": 7152,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7140,
											"end": 7152,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7179,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 175,
											"end": 182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7207,
											"name": "PUSH",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 7195,
											"end": 7207,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 202,
											"end": 251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 195,
											"end": 251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 195,
											"end": 251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 896,
											"end": 900,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 935,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 935,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 935,
											"end": 956,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 913,
											"end": 956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 913,
											"end": 956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 967,
											"end": 995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1022,
											"end": 1033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 998,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1054,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6861,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6846,
											"end": 6861,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D5ABEB01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6819,
											"end": 6826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6826,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6846,
											"end": 6861,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6861,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6871,
											"name": "PUSH",
											"source": 8,
											"value": "D5ABEB01"
										},
										{
											"begin": 6846,
											"end": 6871,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6861,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 6846,
											"end": 6873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6839,
											"end": 6873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6839,
											"end": 6873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5366,
											"end": 5387,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 5406,
											"end": 5427,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5398,
											"end": 5452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 5398,
											"end": 5452,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5398,
											"end": 5452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7970,
											"end": 7972,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5398,
											"end": 5452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5398,
											"end": 5452,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7952,
											"end": 7973,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8009,
											"end": 8011,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7982,
											"end": 8012,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742042616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8028,
											"end": 8046,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8028,
											"end": 8046,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8028,
											"end": 8046,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8021,
											"end": 8071,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8106,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8088,
											"end": 8106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5398,
											"end": 5452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 7768,
											"end": 8112,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5398,
											"end": 5452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 5398,
											"end": 5452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5483,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5480,
											"end": 5488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5513,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5463,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5463,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5463,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5544,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5530,
											"end": 5545,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5530,
											"end": 5545,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5545,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5530,
											"end": 5545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5563,
											"end": 5612,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5612,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8547,
											"end": 8579,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8547,
											"end": 8579,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8529,
											"end": 8580,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8529,
											"end": 8580,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8611,
											"end": 8613,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8589,
											"end": 8623,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8589,
											"end": 8623,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8589,
											"end": 8623,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5596,
											"end": 5611,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 8639,
											"end": 8657,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8639,
											"end": 8657,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8639,
											"end": 8657,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 8666,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 8666,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 8666,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 8666,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 5563,
											"end": 5612,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8517,
											"end": 8519,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8502,
											"end": 8520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5563,
											"end": 5612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5563,
											"end": 5612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5563,
											"end": 5612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5612,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5612,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5612,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5620,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5620,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3021,
											"end": 3037,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 8,
											"value": "10000"
										},
										{
											"begin": 3021,
											"end": 3037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3021,
											"end": 3037,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3037,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3037,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3037,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3092,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3092,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3010,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 8923,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8889,
											"end": 8923,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8889,
											"end": 8923,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8954,
											"end": 8956,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8932,
											"end": 8975,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8932,
											"end": 8975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8932,
											"end": 8975,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8932,
											"end": 8975,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "EEB293E1F8F3A9DB91ADE748726387ED1352CA78F5430C5F06FE3D1E1AD50579"
										},
										{
											"begin": 3055,
											"end": 3092,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3092,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3055,
											"end": 3092,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3092,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3092,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3092,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3100,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 3100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1759,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1732,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 3108,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3208,
											"end": 3218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3208,
											"end": 3218,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3253,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3271,
											"end": 3320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3320,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3271,
											"end": 3320,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9216,
											"end": 9218,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9228,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9228,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3271,
											"end": 3320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE"
										},
										{
											"begin": 3271,
											"end": 3320,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9133,
											"end": 9151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3271,
											"end": 3320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 8986,
											"end": 9234,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5628,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5738,
											"end": 5780,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5738,
											"end": 5780,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 5778,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5738,
											"end": 5780,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 730,
											"end": 781,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5713,
											"end": 5735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5738,
											"end": 5765,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 5738,
											"end": 5765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 703,
											"end": 721,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 703,
											"end": 721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5780,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 5738,
											"end": 5780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 5738,
											"end": 5780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5819,
											"end": 5820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5816,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5799,
											"end": 5820,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5791,
											"end": 5845,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5845,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5791,
											"end": 5845,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5845,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7970,
											"end": 7972,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5791,
											"end": 5845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5791,
											"end": 5845,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5845,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7952,
											"end": 7973,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8009,
											"end": 8011,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7982,
											"end": 8012,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742042616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8028,
											"end": 8046,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8028,
											"end": 8046,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8028,
											"end": 8046,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8021,
											"end": 8071,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8106,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8088,
											"end": 8106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 7768,
											"end": 8112,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5791,
											"end": 5845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5856,
											"end": 5906,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5856,
											"end": 5906,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9431,
											"end": 9463,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9431,
											"end": 9463,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9431,
											"end": 9463,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5856,
											"end": 5906,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9413,
											"end": 9464,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9507,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9507,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9507,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5856,
											"end": 5882,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5882,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 5856,
											"end": 5882,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9386,
											"end": 9404,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9386,
											"end": 9404,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5906,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 5856,
											"end": 5906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5856,
											"end": 5906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5932,
											"end": 5997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5932,
											"end": 5997,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5932,
											"end": 5997,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10087,
											"end": 10102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10087,
											"end": 10102,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10087,
											"end": 10102,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10069,
											"end": 10103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10069,
											"end": 10103,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10139,
											"end": 10154,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10139,
											"end": 10154,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10134,
											"end": 10136,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10112,
											"end": 10155,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10171,
											"end": 10189,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10171,
											"end": 10189,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10171,
											"end": 10189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5981,
											"end": 5996,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 10229,
											"end": 10231,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10214,
											"end": 10232,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10214,
											"end": 10232,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10207,
											"end": 10241,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5932,
											"end": 5997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B818A975F91276DF8BA59329BECBC23C793DF0D503C19AC296C3C372A1FA0461"
										},
										{
											"begin": 5932,
											"end": 5997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10018,
											"end": 10021,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10003,
											"end": 10022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5932,
											"end": 5997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 9800,
											"end": 10247,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1284,
											"end": 1293,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1302,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 1321,
											"end": 1331,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1306,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10479,
											"end": 10504,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 10479,
											"end": 10504,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10479,
											"end": 10504,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10552,
											"end": 10556,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10540,
											"end": 10557,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10540,
											"end": 10557,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10520,
											"end": 10538,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10520,
											"end": 10538,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10520,
											"end": 10538,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10513,
											"end": 10558,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10513,
											"end": 10558,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10513,
											"end": 10558,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10513,
											"end": 10558,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10574,
											"end": 10592,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10574,
											"end": 10592,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10574,
											"end": 10592,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10567,
											"end": 10601,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10567,
											"end": 10601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10567,
											"end": 10601,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10617,
											"end": 10635,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10617,
											"end": 10635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10617,
											"end": 10635,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10610,
											"end": 10644,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10610,
											"end": 10644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10610,
											"end": 10644,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10451,
											"end": 10470,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 10451,
											"end": 10470,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2415,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2575,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2644,
											"end": 2695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2695,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2537,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 8923,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8889,
											"end": 8923,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8889,
											"end": 8923,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8954,
											"end": 8956,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8932,
											"end": 8975,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8932,
											"end": 8975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8932,
											"end": 8975,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8932,
											"end": 8975,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "ABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973"
										},
										{
											"begin": 2644,
											"end": 2695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2644,
											"end": 2695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 8677,
											"end": 8981,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1604,
											"end": 1614,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1604,
											"end": 1620,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10857,
											"end": 10859,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10839,
											"end": 10860,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10896,
											"end": 10898,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10869,
											"end": 10899,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10935,
											"end": 10961,
											"name": "PUSH",
											"source": 13,
											"value": "696E76616C6964207369676E6174757265206C656E6774680000000000000000"
										},
										{
											"begin": 10915,
											"end": 10933,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10915,
											"end": 10933,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10915,
											"end": 10933,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10908,
											"end": 10962,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 10655,
											"end": 11003,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2132,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 6013,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6113,
											"end": 6144,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6113,
											"end": 6144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6113,
											"end": 6144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6156,
											"end": 6160,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6156,
											"end": 6160,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6113,
											"end": 6134,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6134,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6134,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 6113,
											"end": 6134,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 6113,
											"end": 6144,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 6113,
											"end": 6144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6113,
											"end": 6161,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6161,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6105,
											"end": 6203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 6105,
											"end": 6203,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6105,
											"end": 6203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6105,
											"end": 6203,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6105,
											"end": 6203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6105,
											"end": 6203,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11466,
											"end": 11468,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6105,
											"end": 6203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6105,
											"end": 6203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6105,
											"end": 6203,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11469,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11505,
											"end": 11507,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 11485,
											"end": 11503,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11485,
											"end": 11503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11485,
											"end": 11503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11478,
											"end": 11508,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11544,
											"end": 11578,
											"name": "PUSH",
											"source": 13,
											"value": "5468697320746F6B656E4964206973206E6F74206F776E656420627920636F6E"
										},
										{
											"begin": 11524,
											"end": 11542,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11524,
											"end": 11542,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11524,
											"end": 11542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11517,
											"end": 11579,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11588,
											"end": 11623,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11640,
											"end": 11659,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 11640,
											"end": 11659,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6105,
											"end": 6203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 11264,
											"end": 11665,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6105,
											"end": 6203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 6105,
											"end": 6203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6216,
											"end": 6276,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6216,
											"end": 6276,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6255,
											"end": 6259,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6216,
											"end": 6276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11910,
											"end": 11944,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11980,
											"end": 11995,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11980,
											"end": 11995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11980,
											"end": 11995,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11996,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12012,
											"end": 12030,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12012,
											"end": 12030,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12012,
											"end": 12030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12005,
											"end": 12039,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12005,
											"end": 12039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12005,
											"end": 12039,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6216,
											"end": 6246,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6246,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 6216,
											"end": 6246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11845,
											"end": 11863,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11845,
											"end": 11863,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6216,
											"end": 6276,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6216,
											"end": 6276,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 6216,
											"end": 6276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6302,
											"end": 6348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6302,
											"end": 6348,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6302,
											"end": 6348,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10087,
											"end": 10102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10087,
											"end": 10102,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10087,
											"end": 10102,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10069,
											"end": 10103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10069,
											"end": 10103,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10139,
											"end": 10154,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10139,
											"end": 10154,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10134,
											"end": 10136,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10112,
											"end": 10155,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10171,
											"end": 10189,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10171,
											"end": 10189,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10171,
											"end": 10189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6332,
											"end": 6347,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 10229,
											"end": 10231,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10214,
											"end": 10232,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10214,
											"end": 10232,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10207,
											"end": 10241,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6302,
											"end": 6348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "127A8D3F57942833F6930572BCE52AD882683E36EEB5830D199D3FA4BFA9467"
										},
										{
											"begin": 6302,
											"end": 6348,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10018,
											"end": 10021,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10003,
											"end": 10022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10003,
											"end": 10022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6302,
											"end": 6348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 9800,
											"end": 10247,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6655,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6744,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6729,
											"end": 6744,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18160DDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6702,
											"end": 6709,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6729,
											"end": 6744,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6744,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 6729,
											"end": 6756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6744,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4339,
											"end": 5154,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 4339,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12291,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12330,
											"end": 12363,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12303,
											"end": 12364,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12381,
											"end": 12399,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12381,
											"end": 12399,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 12050,
											"end": 12405,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4429,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4429,
											"end": 4445,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4429,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4429,
											"end": 4445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4429,
											"end": 4453,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4429,
											"end": 4453,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4429,
											"end": 4453,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4421,
											"end": 4482,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4482,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4421,
											"end": 4482,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4482,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12612,
											"end": 12614,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4421,
											"end": 4482,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4482,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12615,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12651,
											"end": 12653,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 12631,
											"end": 12649,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12631,
											"end": 12649,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12631,
											"end": 12649,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12690,
											"end": 12716,
											"name": "PUSH",
											"source": 13,
											"value": "5075626C6963206D696E74206973206E6F74206F70656E2E0000000000000000"
										},
										{
											"begin": 12670,
											"end": 12688,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12670,
											"end": 12688,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12670,
											"end": 12688,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12663,
											"end": 12717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 12410,
											"end": 12758,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4421,
											"end": 4482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4501,
											"end": 4510,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4524,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4501,
											"end": 4524,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4493,
											"end": 4556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4493,
											"end": 4556,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4493,
											"end": 4556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4493,
											"end": 4556,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4493,
											"end": 4556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4493,
											"end": 4556,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12965,
											"end": 12967,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4493,
											"end": 4556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4493,
											"end": 4556,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4493,
											"end": 4556,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12947,
											"end": 12968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13004,
											"end": 13006,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 12984,
											"end": 13002,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12984,
											"end": 13002,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12984,
											"end": 13002,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12977,
											"end": 13007,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13043,
											"end": 13072,
											"name": "PUSH",
											"source": 13,
											"value": "6861686120436F6E74726163742063616E27742063616C6C206D650000000000"
										},
										{
											"begin": 13023,
											"end": 13041,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13023,
											"end": 13041,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13023,
											"end": 13041,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13016,
											"end": 13073,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13090,
											"end": 13108,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13090,
											"end": 13108,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4493,
											"end": 4556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 12763,
											"end": 13114,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4493,
											"end": 4556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4493,
											"end": 4556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4590,
											"end": 4600,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5221,
											"end": 5225,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5259,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5244,
											"end": 5266,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4609,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4609,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 4609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4575,
											"end": 4609,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4567,
											"end": 4637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 4567,
											"end": 4637,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4567,
											"end": 4637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4567,
											"end": 4637,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4567,
											"end": 4637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4567,
											"end": 4637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13321,
											"end": 13323,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4567,
											"end": 4637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4567,
											"end": 4637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4567,
											"end": 4637,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13303,
											"end": 13324,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13360,
											"end": 13362,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 13340,
											"end": 13358,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13340,
											"end": 13358,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13340,
											"end": 13358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13333,
											"end": 13363,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13379,
											"end": 13397,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13379,
											"end": 13397,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13379,
											"end": 13397,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13372,
											"end": 13425,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13442,
											"end": 13460,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13442,
											"end": 13460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4567,
											"end": 4637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 13119,
											"end": 13466,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4567,
											"end": 4637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 4567,
											"end": 4637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4727,
											"end": 4742,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4766,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55138F0D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4727,
											"end": 4766,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4764,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4727,
											"end": 4766,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 730,
											"end": 781,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4727,
											"end": 4742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "AA271E1A"
										},
										{
											"begin": 4727,
											"end": 4751,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 703,
											"end": 721,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 703,
											"end": 721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4727,
											"end": 4766,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 4801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 4719,
											"end": 4801,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 4801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4801,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4719,
											"end": 4801,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 4801,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13673,
											"end": 13675,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4719,
											"end": 4801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 4801,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13655,
											"end": 13676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13712,
											"end": 13714,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 13692,
											"end": 13710,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13692,
											"end": 13710,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13692,
											"end": 13710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13685,
											"end": 13715,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13751,
											"end": 13783,
											"name": "PUSH",
											"source": 13,
											"value": "436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000"
										},
										{
											"begin": 13731,
											"end": 13749,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13731,
											"end": 13749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13731,
											"end": 13749,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13724,
											"end": 13784,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13801,
											"end": 13819,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13801,
											"end": 13819,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4719,
											"end": 4801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 13471,
											"end": 13825,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4719,
											"end": 4801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 4719,
											"end": 4801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4827,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4827,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4827,
											"end": 4833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4833,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4827,
											"end": 4833,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4833,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4827,
											"end": 4833,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4834,
											"end": 4844,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4849,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4849,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4820,
											"end": 4850,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4820,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4820,
											"end": 4826,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4820,
											"end": 4850,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4820,
											"end": 4850,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4812,
											"end": 4889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 4812,
											"end": 4889,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4812,
											"end": 4889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4812,
											"end": 4889,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4812,
											"end": 4889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4812,
											"end": 4889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14032,
											"end": 14034,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4812,
											"end": 4889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4812,
											"end": 4889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4812,
											"end": 4889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14014,
											"end": 14035,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14071,
											"end": 14073,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 14051,
											"end": 14069,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14051,
											"end": 14069,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14051,
											"end": 14069,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14044,
											"end": 14074,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14110,
											"end": 14144,
											"name": "PUSH",
											"source": 13,
											"value": "556E617574686F72697A6564205075626C69634D696E74205468697320557365"
										},
										{
											"begin": 14090,
											"end": 14108,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14090,
											"end": 14108,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14090,
											"end": 14108,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14083,
											"end": 14145,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14154,
											"end": 14186,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14203,
											"end": 14222,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 14203,
											"end": 14222,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4812,
											"end": 4889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 13830,
											"end": 14228,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4812,
											"end": 4889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 4812,
											"end": 4889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5007,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4948,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 5008,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5008,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5008,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 4996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4981,
											"end": 5008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4981,
											"end": 5008,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5008,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4981,
											"end": 5008,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5008,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5008,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5008,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5015,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5015,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4981,
											"end": 5015,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4966,
											"end": 4967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4981,
											"end": 5015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5015,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5015,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5015,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5015,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5026,
											"end": 5041,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "28512065"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5026,
											"end": 5070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5026,
											"end": 5070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9413,
											"end": 9464,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9413,
											"end": 9464,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9413,
											"end": 9464,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9413,
											"end": 9464,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9507,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9507,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9507,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5026,
											"end": 5041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5041,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5041,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A1448194"
										},
										{
											"begin": 5026,
											"end": 5050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9386,
											"end": 9404,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9386,
											"end": 9404,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5070,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5070,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 5026,
											"end": 5070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5096,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5096,
											"end": 5144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5144,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5128,
											"end": 5143,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 9216,
											"end": 9218,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9228,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5109,
											"end": 5119,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5119,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5096,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C1A73B31B32801EBBB4CAE30B73EAE4345BE9F2915EA60306383C245EF8FAC44"
										},
										{
											"begin": 5096,
											"end": 5144,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9133,
											"end": 9151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5096,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5096,
											"end": 5144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5144,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5144,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5144,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5144,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4339,
											"end": 5154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14688,
											"end": 14690,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14670,
											"end": 14691,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14727,
											"end": 14729,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 14707,
											"end": 14725,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14707,
											"end": 14725,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14707,
											"end": 14725,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14700,
											"end": 14730,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14766,
											"end": 14800,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14764,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14739,
											"end": 14801,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14817,
											"end": 14835,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14817,
											"end": 14835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14817,
											"end": 14835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14810,
											"end": 14846,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14863,
											"end": 14882,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 14863,
											"end": 14882,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 14486,
											"end": 14888,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 2100,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2081,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 4331,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3336,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12291,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12330,
											"end": 12363,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12303,
											"end": 12364,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12381,
											"end": 12399,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12381,
											"end": 12399,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 12050,
											"end": 12405,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3466,
											"end": 3483,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3466,
											"end": 3483,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3483,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3466,
											"end": 3483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3491,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3491,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3491,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3458,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3458,
											"end": 3520,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3458,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3520,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3458,
											"end": 3520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3458,
											"end": 3520,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15095,
											"end": 15097,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3458,
											"end": 3520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3458,
											"end": 3520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15077,
											"end": 15098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15134,
											"end": 15136,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 15114,
											"end": 15132,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15114,
											"end": 15132,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15114,
											"end": 15132,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15107,
											"end": 15137,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15173,
											"end": 15200,
											"name": "PUSH",
											"source": 13,
											"value": "50726976617465206D696E74206973206E6F74206F70656E2E00000000000000"
										},
										{
											"begin": 15153,
											"end": 15171,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15153,
											"end": 15171,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15153,
											"end": 15171,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15146,
											"end": 15201,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15218,
											"end": 15236,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15218,
											"end": 15236,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 14893,
											"end": 15242,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3458,
											"end": 3520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3545,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3531,
											"end": 3581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 3531,
											"end": 3581,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3531,
											"end": 3581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3581,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3531,
											"end": 3581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3531,
											"end": 3581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15449,
											"end": 15451,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3531,
											"end": 3581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3531,
											"end": 3581,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3531,
											"end": 3581,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15431,
											"end": 15452,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15488,
											"end": 15490,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 15468,
											"end": 15486,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15468,
											"end": 15486,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15468,
											"end": 15486,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15461,
											"end": 15491,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26B4B73A1034B9903737BA1030B8383937BB32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15507,
											"end": 15525,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15507,
											"end": 15525,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15507,
											"end": 15525,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15500,
											"end": 15551,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15568,
											"end": 15586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3531,
											"end": 3581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 15247,
											"end": 15592,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3531,
											"end": 3581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 3531,
											"end": 3581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 3626,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3600,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3600,
											"end": 3626,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3592,
											"end": 3670,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3670,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3592,
											"end": 3670,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3670,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15799,
											"end": 15801,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3592,
											"end": 3670,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15781,
											"end": 15802,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15838,
											"end": 15840,
											"name": "PUSH",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 15818,
											"end": 15836,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15818,
											"end": 15836,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15818,
											"end": 15836,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15811,
											"end": 15841,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15877,
											"end": 15911,
											"name": "PUSH",
											"source": 13,
											"value": "436F6E747261637420617265206E6F7420696E2074686973206D696E74696E67"
										},
										{
											"begin": 15857,
											"end": 15875,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15857,
											"end": 15875,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15857,
											"end": 15875,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15850,
											"end": 15912,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937BAB73217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15928,
											"end": 15946,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15928,
											"end": 15946,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15928,
											"end": 15946,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15921,
											"end": 15958,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15975,
											"end": 15994,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 15975,
											"end": 15994,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3592,
											"end": 3670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 15597,
											"end": 16000,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3592,
											"end": 3670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3592,
											"end": 3670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3718,
											"end": 3732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 3718,
											"end": 3730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 3718,
											"end": 3732,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3718,
											"end": 3732,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 3718,
											"end": 3732,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3715,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3689,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3689,
											"end": 3705,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3689,
											"end": 3705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 3689,
											"end": 3715,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3689,
											"end": 3715,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 3689,
											"end": 3715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3732,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3681,
											"end": 3748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 3681,
											"end": 3748,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3681,
											"end": 3748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3681,
											"end": 3748,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3748,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3681,
											"end": 3748,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16472,
											"end": 16474,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3681,
											"end": 3748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3681,
											"end": 3748,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3681,
											"end": 3748,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16454,
											"end": 16475,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16511,
											"end": 16513,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 16491,
											"end": 16509,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16491,
											"end": 16509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16509,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16484,
											"end": 16514,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F76657220737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16530,
											"end": 16548,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16530,
											"end": 16548,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16530,
											"end": 16548,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16523,
											"end": 16564,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16581,
											"end": 16599,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16581,
											"end": 16599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3681,
											"end": 3748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 16270,
											"end": 16605,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3681,
											"end": 3748,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 3681,
											"end": 3748,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3790,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6436,
											"end": 6440,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6473,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6480,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6460,
											"end": 6488,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3807,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3759,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 3759,
											"end": 3835,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3759,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3759,
											"end": 3835,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3759,
											"end": 3835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3759,
											"end": 3835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13321,
											"end": 13323,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3759,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3759,
											"end": 3835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3759,
											"end": 3835,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13303,
											"end": 13324,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13360,
											"end": 13362,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 13340,
											"end": 13358,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13340,
											"end": 13358,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13340,
											"end": 13358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13333,
											"end": 13363,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13379,
											"end": 13397,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13379,
											"end": 13397,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13379,
											"end": 13397,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13372,
											"end": 13425,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13442,
											"end": 13460,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13442,
											"end": 13460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 13119,
											"end": 13466,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 3835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 3759,
											"end": 3835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3854,
											"end": 3869,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3854,
											"end": 3893,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55138F0D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3854,
											"end": 3893,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3887,
											"end": 3891,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3854,
											"end": 3893,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 730,
											"end": 781,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3854,
											"end": 3869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3869,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "AA271E1A"
										},
										{
											"begin": 3854,
											"end": 3878,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 703,
											"end": 721,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 703,
											"end": 721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3893,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3854,
											"end": 3893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 3854,
											"end": 3893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3846,
											"end": 3928,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3928,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3846,
											"end": 3928,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3928,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13673,
											"end": 13675,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3928,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3928,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13655,
											"end": 13676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13712,
											"end": 13714,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 13692,
											"end": 13710,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13692,
											"end": 13710,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13692,
											"end": 13710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13685,
											"end": 13715,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13751,
											"end": 13783,
											"name": "PUSH",
											"source": 13,
											"value": "436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000"
										},
										{
											"begin": 13731,
											"end": 13749,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13731,
											"end": 13749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13731,
											"end": 13749,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13724,
											"end": 13784,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13801,
											"end": 13819,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13801,
											"end": 13819,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 13471,
											"end": 13825,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3846,
											"end": 3928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3966,
											"end": 3972,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3972,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 4043,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3974,
											"end": 3984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 3984,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3996,
											"end": 4041,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4013,
											"end": 4023,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 16815,
											"end": 16817,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 16811,
											"end": 16826,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 16807,
											"end": 16860,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3996,
											"end": 4041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16795,
											"end": 16861,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16877,
											"end": 16889,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 16877,
											"end": 16889,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16877,
											"end": 16889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16870,
											"end": 16898,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16870,
											"end": 16898,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16870,
											"end": 16898,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16914,
											"end": 16926,
											"name": "PUSH",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 16914,
											"end": 16926,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16914,
											"end": 16926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16907,
											"end": 16935,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 16907,
											"end": 16935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16907,
											"end": 16935,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3974,
											"end": 3984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 3984,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16951,
											"end": 16963,
											"name": "PUSH",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 16951,
											"end": 16963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16951,
											"end": 16963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3996,
											"end": 4041,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 4042,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 4042,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 4042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 4042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4042,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 4042,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 3965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 3947,
											"end": 4043,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3947,
											"end": 4043,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 4085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 3939,
											"end": 4085,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 4085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3939,
											"end": 4085,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3939,
											"end": 4085,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 4085,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17176,
											"end": 17178,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3939,
											"end": 4085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3939,
											"end": 4085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 4085,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17158,
											"end": 17179,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17215,
											"end": 17217,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 17195,
											"end": 17213,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17195,
											"end": 17213,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17195,
											"end": 17213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17188,
											"end": 17218,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17254,
											"end": 17288,
											"name": "PUSH",
											"source": 13,
											"value": "556E617574686F72697A65642057686974656C6973744D696E74205468697320"
										},
										{
											"begin": 17234,
											"end": 17252,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17234,
											"end": 17252,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17234,
											"end": 17252,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17227,
											"end": 17289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2AB9B2B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17305,
											"end": 17323,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 17305,
											"end": 17323,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17305,
											"end": 17323,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17298,
											"end": 17333,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17350,
											"end": 17369,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 17350,
											"end": 17369,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3939,
											"end": 4085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 16974,
											"end": 17375,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3939,
											"end": 4085,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 3939,
											"end": 4085,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4122,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4098,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4131,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4131,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4131,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4131,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4138,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4138,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4098,
											"end": 4138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4134,
											"end": 4138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4098,
											"end": 4138,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4138,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4186,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4186,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4186,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4186,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4186,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4186,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4186,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4186,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4197,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4197,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4190,
											"end": 4197,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4190,
											"end": 4197,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 4149,
											"end": 4197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4190,
											"end": 4197,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4190,
											"end": 4197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 4149,
											"end": 4197,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4197,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 4149,
											"end": 4197,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4197,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4197,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4210,
											"end": 4225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4210,
											"end": 4225,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4210,
											"end": 4254,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "28512065"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4210,
											"end": 4254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4235,
											"end": 4245,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4210,
											"end": 4254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9413,
											"end": 9464,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9507,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9507,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9507,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4210,
											"end": 4225,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4225,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A1448194"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9386,
											"end": 9404,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9386,
											"end": 9404,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 4254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 4254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4210,
											"end": 4254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4272,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4272,
											"end": 4323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4307,
											"end": 4322,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 9216,
											"end": 9218,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9228,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4296,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4272,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E9E607753E80542A9021D5149990F18919907F0136FAD424EAAC3D15056CCF6E"
										},
										{
											"begin": 4272,
											"end": 4323,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9133,
											"end": 9151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4272,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4272,
											"end": 4323,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4323,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4323,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4323,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4323,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3336,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17622,
											"end": 17688,
											"name": "PUSH",
											"source": 13,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 611,
											"end": 738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17610,
											"end": 17689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17705,
											"end": 17717,
											"name": "PUSH",
											"source": 13,
											"value": "3C"
										},
										{
											"begin": 17705,
											"end": 17717,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17705,
											"end": 17717,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17698,
											"end": 17726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17698,
											"end": 17726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17698,
											"end": 17726,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17742,
											"end": 17754,
											"name": "PUSH",
											"source": 13,
											"value": "5C"
										},
										{
											"begin": 17742,
											"end": 17754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 17380,
											"end": 17760,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2711,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2812,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 2848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 2848,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 2848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 2848,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2866,
											"end": 2900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2866,
											"end": 2900,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2866,
											"end": 2900,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9216,
											"end": 9218,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9228,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9228,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2866,
											"end": 2900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "521EC96875CA228CD2FC1DBD4C927A34328C9CE1A83BCB8C1F633F012C90D785"
										},
										{
											"begin": 2866,
											"end": 2900,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9133,
											"end": 9151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2866,
											"end": 2900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 8986,
											"end": 9234,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1331,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1322,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 1298,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1331,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1331,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1154,
											"end": 1338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1818,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "tag",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1852,
											"end": 1864,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1864,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 1908,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1962,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1946,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1962,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2558,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2117,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2558,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 1866,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "tag",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 196,
											"end": 327,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 196,
											"end": 327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 271,
											"end": 302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 271,
											"end": 302,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 261,
											"end": 303,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 261,
											"end": 303,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 251,
											"end": 321,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 332,
											"end": 579,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 332,
											"end": 579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 391,
											"end": 397,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 446,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 432,
											"end": 441,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 423,
											"end": 430,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 419,
											"end": 442,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 415,
											"end": 447,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 412,
											"end": 464,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 412,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 412,
											"end": 464,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 460,
											"end": 461,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 458,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 450,
											"end": 462,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 412,
											"end": 464,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 412,
											"end": 464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 499,
											"end": 508,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 486,
											"end": 509,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 518,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 543,
											"end": 548,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 518,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 518,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 518,
											"end": 549,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 518,
											"end": 549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 573,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 332,
											"end": 579,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 332,
											"end": 579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 792,
											"end": 919,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 792,
											"end": 919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 848,
											"end": 851,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 844,
											"end": 864,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 841,
											"end": 842,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 865,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 884,
											"end": 888,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 874,
											"end": 889,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 908,
											"end": 912,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 905,
											"end": 906,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 913,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1642,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 924,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 966,
											"end": 971,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1022,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1012,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1000,
											"end": 1017,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 996,
											"end": 1023,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1037,
											"end": 1038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1035,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1079,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1060,
											"end": 1080,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1138,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1139,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1126,
											"end": 1162,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1126,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 1126,
											"end": 1162,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1142,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 1142,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 1142,
											"end": 1160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1142,
											"end": 1160,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 1142,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1220,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1185,
											"end": 1187,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1267,
											"end": 1289,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1267,
											"end": 1289,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1267,
											"end": 1289,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1291,
											"end": 1293,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 1263,
											"end": 1294,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1299,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1247,
											"end": 1300,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1247,
											"end": 1300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1247,
											"end": 1300,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1335,
											"end": 1357,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1335,
											"end": 1357,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1335,
											"end": 1357,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1312,
											"end": 1358,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1309,
											"end": 1381,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1309,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 1309,
											"end": 1381,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 1361,
											"end": 1379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1401,
											"end": 1411,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1397,
											"end": 1399,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1412,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1438,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1485,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1475,
											"end": 1479,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1470,
											"end": 1472,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1462,
											"end": 1468,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1458,
											"end": 1473,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1503,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 1448,
											"end": 1503,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1499,
											"end": 1500,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1497,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1489,
											"end": 1501,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1503,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 1448,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1563,
											"end": 1565,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1560,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1554,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1544,
											"end": 1561,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1525,
											"end": 1542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1512,
											"end": 1566,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1607,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1600,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1596,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1586,
											"end": 1601,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1582,
											"end": 1608,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1612,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1621,
											"end": 1636,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1621,
											"end": 1636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1621,
											"end": 1636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1621,
											"end": 1636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1621,
											"end": 1636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1621,
											"end": 1636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1642,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1642,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 2243,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1647,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1749,
											"end": 1755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1804,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1788,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1777,
											"end": 1800,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1773,
											"end": 1805,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1770,
											"end": 1822,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1770,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 1770,
											"end": 1822,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 1819,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1820,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1770,
											"end": 1822,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 1770,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1866,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 1901,
											"end": 1906,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 1876,
											"end": 1907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1907,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 1876,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1983,
											"end": 1985,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1986,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1986,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1955,
											"end": 1987,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1996,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 1955,
											"end": 1987,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1996,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 1996,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1996,
											"end": 2029,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 1996,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2048,
											"end": 2055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2106,
											"end": 2108,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2109,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2109,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2110,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2152,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2152,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2119,
											"end": 2169,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2119,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 2119,
											"end": 2169,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2155,
											"end": 2167,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2119,
											"end": 2169,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 2119,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2209,
											"end": 2218,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2205,
											"end": 2227,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 2188,
											"end": 2237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2237,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 2188,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2237,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 2243,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 2243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 2243,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 2243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 2243,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 2243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2802,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 2622,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2731,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2720,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2737,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2754,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 2702,
											"end": 2754,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2740,
											"end": 2752,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2754,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 2702,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2773,
											"end": 2796,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2773,
											"end": 2796,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2802,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2622,
											"end": 2802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 3195,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 2807,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2875,
											"end": 2881,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2936,
											"end": 2938,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2924,
											"end": 2933,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2922,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2934,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2939,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2904,
											"end": 2956,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2904,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 2904,
											"end": 2956,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2952,
											"end": 2953,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2949,
											"end": 2950,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2904,
											"end": 2956,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 2904,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2991,
											"end": 3000,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2978,
											"end": 3001,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3010,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 3035,
											"end": 3040,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3010,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 3010,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3010,
											"end": 3041,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 3010,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3065,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3117,
											"end": 3119,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3102,
											"end": 3120,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3120,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3089,
											"end": 3121,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 3089,
											"end": 3121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 3130,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3163,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 3130,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3182,
											"end": 3189,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3172,
											"end": 3189,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3172,
											"end": 3189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3172,
											"end": 3189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 3195,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 3195,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 3195,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 3195,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 3195,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 3195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3588,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3200,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3291,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3338,
											"end": 3340,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3317,
											"end": 3324,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3336,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3309,
											"end": 3341,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3358,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 3306,
											"end": 3358,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3354,
											"end": 3355,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3352,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3358,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 3306,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3377,
											"end": 3400,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3400,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3451,
											"end": 3453,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3440,
											"end": 3449,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3436,
											"end": 3454,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3478,
											"end": 3496,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3470,
											"end": 3476,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3497,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3464,
											"end": 3514,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3464,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 3464,
											"end": 3514,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3510,
											"end": 3511,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3508,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3500,
											"end": 3512,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3464,
											"end": 3514,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 3464,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3563,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3550,
											"end": 3572,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 3533,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3582,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 3533,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3582,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3588,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3588,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 4181,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 3861,
											"end": 4181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3929,
											"end": 3935,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3970,
											"end": 3979,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 3968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3957,
											"end": 3980,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3953,
											"end": 3985,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3950,
											"end": 4002,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3950,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 3950,
											"end": 4002,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3998,
											"end": 3999,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 3996,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3950,
											"end": 4002,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 3950,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4038,
											"end": 4047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4025,
											"end": 4048,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4063,
											"end": 4069,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4057,
											"end": 4107,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4057,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 4057,
											"end": 4107,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4104,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4101,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4093,
											"end": 4105,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4057,
											"end": 4107,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 4057,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 4167,
											"end": 4174,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4147,
											"end": 4156,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4143,
											"end": 4165,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 4126,
											"end": 4175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4175,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 4126,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4116,
											"end": 4175,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 4181,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 4181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4517,
											"end": 4832,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 4517,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4585,
											"end": 4591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4646,
											"end": 4648,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4634,
											"end": 4643,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 4632,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4621,
											"end": 4644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4617,
											"end": 4649,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4614,
											"end": 4666,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4614,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 4614,
											"end": 4666,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4663,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4659,
											"end": 4660,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4652,
											"end": 4664,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4614,
											"end": 4666,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 4614,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4701,
											"end": 4710,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4711,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 4745,
											"end": 4750,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 4720,
											"end": 4751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4751,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 4720,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4770,
											"end": 4775,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4822,
											"end": 4824,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4807,
											"end": 4825,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4807,
											"end": 4825,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4807,
											"end": 4825,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4807,
											"end": 4825,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4826,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4826,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4517,
											"end": 4832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 5293,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 4837,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 4928,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4930,
											"end": 4936,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 4985,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4971,
											"end": 4980,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 4969,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4958,
											"end": 4981,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 4986,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 5003,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 4951,
											"end": 5003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5001,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 5003,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 4951,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5047,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5025,
											"end": 5048,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 5082,
											"end": 5087,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 5057,
											"end": 5088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5088,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 5057,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5107,
											"end": 5112,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5164,
											"end": 5166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5149,
											"end": 5167,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5167,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5136,
											"end": 5168,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5177,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 5136,
											"end": 5168,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5177,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 5177,
											"end": 5210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5177,
											"end": 5210,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 5177,
											"end": 5210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 5293,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 5293,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5283,
											"end": 5285,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5255,
											"end": 5287,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5255,
											"end": 5287,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 5293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5298,
											"end": 5889,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 5298,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5431,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5417,
											"end": 5426,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5400,
											"end": 5432,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5445,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5443,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5435,
											"end": 5447,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 5397,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5472,
											"end": 5495,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5514,
											"end": 5532,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5555,
											"end": 5557,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5553,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5558,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5541,
											"end": 5575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5541,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 5541,
											"end": 5575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5571,
											"end": 5572,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5569,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5561,
											"end": 5573,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5541,
											"end": 5575,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 5541,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5598,
											"end": 5607,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5594,
											"end": 5616,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5584,
											"end": 5616,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5584,
											"end": 5616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5654,
											"end": 5661,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5647,
											"end": 5651,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5639,
											"end": 5652,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5635,
											"end": 5662,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5625,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 5625,
											"end": 5680,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5677,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5674,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5625,
											"end": 5680,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 5625,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5718,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5703,
											"end": 5719,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5742,
											"end": 5744,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5740,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5731,
											"end": 5745,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5728,
											"end": 5762,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5728,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 5728,
											"end": 5762,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5758,
											"end": 5759,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5748,
											"end": 5760,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5728,
											"end": 5762,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 5728,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5803,
											"end": 5810,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5798,
											"end": 5800,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5789,
											"end": 5795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 5787,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5796,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5801,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5774,
											"end": 5811,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5771,
											"end": 5828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5771,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 5771,
											"end": 5828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5824,
											"end": 5825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5822,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5814,
											"end": 5826,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5771,
											"end": 5828,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 5771,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5857,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5847,
											"end": 5858,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5847,
											"end": 5858,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5847,
											"end": 5858,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5847,
											"end": 5858,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5847,
											"end": 5858,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5877,
											"end": 5883,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5877,
											"end": 5883,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5298,
											"end": 5889,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5298,
											"end": 5889,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5298,
											"end": 5889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6118,
											"end": 6875,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 6118,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6222,
											"end": 6228,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6236,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6238,
											"end": 6244,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6252,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6301,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6287,
											"end": 6296,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6278,
											"end": 6285,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6274,
											"end": 6297,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6302,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6319,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 6267,
											"end": 6319,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6315,
											"end": 6316,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6313,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6305,
											"end": 6317,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6319,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 6267,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 6364,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6342,
											"end": 6365,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6384,
											"end": 6402,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6425,
											"end": 6427,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6414,
											"end": 6428,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6411,
											"end": 6445,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6411,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 6411,
											"end": 6445,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6442,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6438,
											"end": 6439,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6431,
											"end": 6443,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6411,
											"end": 6445,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 6411,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6479,
											"end": 6485,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6468,
											"end": 6477,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6454,
											"end": 6486,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6454,
											"end": 6486,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6524,
											"end": 6531,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6517,
											"end": 6521,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6509,
											"end": 6522,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6505,
											"end": 6532,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 6495,
											"end": 6550,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6546,
											"end": 6547,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6543,
											"end": 6544,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6536,
											"end": 6548,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6550,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 6495,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6586,
											"end": 6588,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6573,
											"end": 6589,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6612,
											"end": 6614,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6610,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6601,
											"end": 6615,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6598,
											"end": 6632,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6598,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 6598,
											"end": 6632,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6629,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6598,
											"end": 6632,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 6598,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6690,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 6680,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6663,
											"end": 6664,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 6659,
											"end": 6673,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6655,
											"end": 6657,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6651,
											"end": 6674,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6647,
											"end": 6681,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6644,
											"end": 6691,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6708,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 6641,
											"end": 6708,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6702,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6694,
											"end": 6706,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6708,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 6641,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6735,
											"end": 6739,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6740,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6727,
											"end": 6740,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6727,
											"end": 6740,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6727,
											"end": 6740,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6797,
											"end": 6817,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6817,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6817,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6784,
											"end": 6818,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6784,
											"end": 6818,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 6865,
											"end": 6867,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6850,
											"end": 6868,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6837,
											"end": 6869,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6837,
											"end": 6869,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6118,
											"end": 6875,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6118,
											"end": 6875,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6118,
											"end": 6875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7218,
											"end": 7402,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 7218,
											"end": 7402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7288,
											"end": 7294,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7341,
											"end": 7343,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7316,
											"end": 7339,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7312,
											"end": 7344,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7309,
											"end": 7361,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7309,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 7309,
											"end": 7361,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7355,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7309,
											"end": 7361,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 7309,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7218,
											"end": 7402,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7218,
											"end": 7402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7407,
											"end": 7763,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 7407,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7611,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7591,
											"end": 7612,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7591,
											"end": 7612,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7591,
											"end": 7612,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7621,
											"end": 7651,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7687,
											"end": 7721,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7682,
											"end": 7684,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7667,
											"end": 7685,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7667,
											"end": 7685,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7660,
											"end": 7722,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7754,
											"end": 7756,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7407,
											"end": 7763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9518,
											"end": 9795,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 9518,
											"end": 9795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9585,
											"end": 9591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9638,
											"end": 9640,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9626,
											"end": 9635,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9624,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9613,
											"end": 9636,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9609,
											"end": 9641,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9606,
											"end": 9658,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9606,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 9606,
											"end": 9658,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9654,
											"end": 9655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9651,
											"end": 9652,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9644,
											"end": 9656,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9606,
											"end": 9658,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 9606,
											"end": 9658,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9680,
											"end": 9696,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9739,
											"end": 9744,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9732,
											"end": 9745,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9725,
											"end": 9746,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9718,
											"end": 9723,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9715,
											"end": 9747,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 9705,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 9705,
											"end": 9765,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9761,
											"end": 9762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9758,
											"end": 9759,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9751,
											"end": 9763,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11008,
											"end": 11259,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 11008,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11078,
											"end": 11084,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11131,
											"end": 11133,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11119,
											"end": 11128,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11110,
											"end": 11117,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11106,
											"end": 11129,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11102,
											"end": 11134,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11099,
											"end": 11151,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11099,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 11099,
											"end": 11151,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11147,
											"end": 11148,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 11145,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11149,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11099,
											"end": 11151,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 11099,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11179,
											"end": 11188,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11198,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 11223,
											"end": 11228,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11198,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 11198,
											"end": 11229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16005,
											"end": 16132,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 16005,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16066,
											"end": 16076,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 16061,
											"end": 16064,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 16057,
											"end": 16077,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 16054,
											"end": 16055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16047,
											"end": 16078,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16097,
											"end": 16101,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 16094,
											"end": 16095,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16087,
											"end": 16102,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16121,
											"end": 16125,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16118,
											"end": 16119,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16111,
											"end": 16126,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16137,
											"end": 16265,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 16137,
											"end": 16265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16177,
											"end": 16180,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16208,
											"end": 16209,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16204,
											"end": 16210,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 16201,
											"end": 16202,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16198,
											"end": 16211,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16195,
											"end": 16234,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16195,
											"end": 16234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 16195,
											"end": 16234,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16214,
											"end": 16232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 16214,
											"end": 16232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 16214,
											"end": 16232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16214,
											"end": 16232,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 16214,
											"end": 16232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16250,
											"end": 16259,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16250,
											"end": 16259,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16137,
											"end": 16265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17765,
											"end": 17892,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 17765,
											"end": 17892,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17826,
											"end": 17836,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 17821,
											"end": 17824,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 17817,
											"end": 17837,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 17814,
											"end": 17815,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17807,
											"end": 17838,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17857,
											"end": 17861,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 17854,
											"end": 17855,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 17847,
											"end": 17862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17881,
											"end": 17885,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17878,
											"end": 17879,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17897,
											"end": 18032,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 17897,
											"end": 18032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17936,
											"end": 17939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17957,
											"end": 17974,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17957,
											"end": 17974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17957,
											"end": 17974,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17954,
											"end": 17997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 17954,
											"end": 17997,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 17977,
											"end": 17995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18024,
											"end": 18025,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 18013,
											"end": 18026,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18013,
											"end": 18026,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17897,
											"end": 18032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								},
								"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ERC721A/INagaKid.sol",
								"ERC721A/MintNagaKids.sol",
								"ERC721A/VerifySignature.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721AQueryable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT()": "0a25dea9",
							"NAGA_HOLDER_MINT_ROUND()": "24c37a85",
							"WHITELIST_MINT_ROUND()": "f500cdfc",
							"WITHDRAW_ROLE()": "e02023a1",
							"allowlistMint(bytes32[],uint256,bytes32)": "f6b48e55",
							"currentMintRound()": "ef5fe79f",
							"getEthSignedMessageHash(bytes32)": "fa540801",
							"getMaxSupply()": "4c0f38c2",
							"getMessageHash(address)": "1f5ac1b2",
							"getTotalSupply()": "c4e41b22",
							"isPrivateMintOpen()": "8907f3fa",
							"isPublicMintOpen()": "a4435dfd",
							"isPublicMinted(address)": "f055c7a9",
							"isUserMinted(address,bytes32)": "ffdc6129",
							"merkleRoot()": "2eb4a7ab",
							"nagaKidContract()": "df4e5881",
							"owner()": "8da5cb5b",
							"publicMint(bytes)": "de6892c8",
							"recoverSigner(bytes32,bytes)": "97aba7f9",
							"renounceOwnership()": "715018a6",
							"setMerkleRoot(bytes32)": "7cb64759",
							"setNagaKidContract(address)": "9e6c8855",
							"setRound(bytes32)": "ff05fe4a",
							"setSigner(address)": "6c19e783",
							"signer()": "238ac933",
							"splitSignature(bytes)": "a7bb5803",
							"transferOwnership(address)": "f2fde38b",
							"userMintedAmount(address,bytes32)": "b5abafa1",
							"verify(address,address,bytes)": "42920a46",
							"withdraw(address)": "51cff8d9",
							"withdrawCurrency(address,address)": "8407ecc4",
							"withdrawNFT(address,address,uint256)": "bff863ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract INagaKid\",\"name\":\"_nagaKidContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRootBefore\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRootAfter\",\"type\":\"bytes32\"}],\"name\":\"MerkleRootChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nagaKidBefore\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nagaKidAfter\",\"type\":\"address\"}],\"name\":\"NagaKidContractChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PrivateMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PublicMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"roundBefore\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"roundAfter\",\"type\":\"bytes32\"}],\"name\":\"RoundChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signerBefore\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signerAfter\",\"type\":\"address\"}],\"name\":\"SignerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceOFContract\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceOfContract\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WithdrawCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"NFT\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WithdrawNFT\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAGA_HOLDER_MINT_ROUND\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WHITELIST_MINT_ROUND\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_round\",\"type\":\"bytes32\"}],\"name\":\"allowlistMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMintRound\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPrivateMintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPublicMintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isPublicMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_round\",\"type\":\"bytes32\"}],\"name\":\"isUserMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nagaKidContract\",\"outputs\":[{\"internalType\":\"contract INagaKid\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"publicMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INagaKid\",\"name\":\"_nagaKid\",\"type\":\"address\"}],\"name\":\"setNagaKidContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_round\",\"type\":\"bytes32\"}],\"name\":\"setRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_round\",\"type\":\"bytes32\"}],\"name\":\"userMintedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"withdrawCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721A/MintNagaKids.sol\":\"MintNagaKids\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"ERC721A/INagaKid.sol\":{\"keccak256\":\"0x6d40b0cc478b970043e5567d209eda8b52325f1d271022e638f43e4aefb4e595\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c6f40836e74cc2739a624d11dd24565c4b63fcbe5a06481566e73c1512dfe63\",\"dweb:/ipfs/QmbJKRZNVHk55PV6fEjbE5kgNGLaTJzu8eAvwk2derkhnq\"]},\"ERC721A/MintNagaKids.sol\":{\"keccak256\":\"0x3959c8f6e6ff31cf372d083f0c725d743bddf8d9f434018081b7153e0d364c77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c09de2cad11515a753cc8d7ba7f271fa653f67660ce579ae994cb02664fc012\",\"dweb:/ipfs/QmY1PYqaG1eUu9TXM5hkJNMvEcL5JF2e7pYBV4kJGNHpAy\"]},\"ERC721A/VerifySignature.sol\":{\"keccak256\":\"0x7b595fba7b304df2d793814bf6f1ead1687b6de712cdbf02113e57ba478df9b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1c72776be7d04ed5cf7f224d796db5ec4a48c9523c1367cc513c6476e7db1d\",\"dweb:/ipfs/QmanAvNztLiKWauT1Usjmfzm8kvs3iMgYBx1Q8JEZLg1ej\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]},\"erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x55e6863d273b676d65797fee7aac1b520848a0e31c0dd2e5a29887457043b7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8477b7c9788e36787f79ef9b1580c46bdadc13da4c8ef85ce82d42a754743\",\"dweb:/ipfs/QmQvqKtF8YyJKqpEiNh1KkeC1Q5JmvEkQmP2ZCPYSW72BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 115,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 530,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "nagaKidContract",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(INagaKid)494"
							},
							{
								"astId": 532,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "currentMintRound",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 534,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "merkleRoot",
								"offset": 0,
								"slot": "4",
								"type": "t_bytes32"
							},
							{
								"astId": 537,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "isPublicMintOpen",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 540,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "isPrivateMintOpen",
								"offset": 1,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 542,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "signer",
								"offset": 2,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 548,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_isUserMinted",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))"
							},
							{
								"astId": 554,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_userMintedAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
							},
							{
								"astId": 558,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_isPublicMinted",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(INagaKid)494": {
								"encoding": "inplace",
								"label": "contract INagaKid",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(bytes32 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes32,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(bytes32 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes32,t_uint256)"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721A/VerifySignature.sol": {
				"VerifySignature": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_messageHash",
									"type": "bytes32"
								}
							],
							"name": "getEthSignedMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_ethSignedMessageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "recoverSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "splitSignature",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC721A/VerifySignature.sol\":61:2303  contract VerifySignature {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC721A/VerifySignature.sol\":61:2303  contract VerifySignature {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1f5ac1b2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x42920a46\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97aba7f9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa7bb5803\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfa540801\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n    tag_4:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n        /* \"#utility.yul\":2058:2072   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2051:2073   */\n      iszero\n        /* \"#utility.yul\":2033:2074   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2021:2023   */\n      0x20\n        /* \"#utility.yul\":2006:2024   */\n      add\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n      tag_12\n        /* \"#utility.yul\":1893:2080   */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_5:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2642:2674   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2624:2675   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2612:2614   */\n      0x20\n        /* \"#utility.yul\":2597:2615   */\n      add\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n      tag_12\n        /* \"#utility.yul\":2478:2681   */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_6:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3209:3234   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":3265:3267   */\n      0x20\n        /* \"#utility.yul\":3250:3268   */\n      dup5\n      add\n        /* \"#utility.yul\":3243:3277   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3325:3329   */\n      0xff\n        /* \"#utility.yul\":3313:3330   */\n      and\n        /* \"#utility.yul\":3293:3311   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3286:3331   */\n      mstore\n        /* \"#utility.yul\":3197:3199   */\n      0x60\n        /* \"#utility.yul\":3182:3200   */\n      add\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      tag_12\n        /* \"#utility.yul\":3011:3337   */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_7:\n      tag_8\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_11:\n        /* \"ERC721A/VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":3754:3756   */\n      0x60\n        /* \"#utility.yul\":3750:3765   */\n      dup4\n      dup2\n      shl\n        /* \"#utility.yul\":3746:3770   */\n      dup3\n      and\n        /* \"ERC721A/VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      0x20\n      dup5\n      add\n        /* \"#utility.yul\":3734:3771   */\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":244:248  this */\n      address\n        /* \"#utility.yul\":3805:3820   */\n      swap1\n      shl\n        /* \"#utility.yul\":3801:3825   */\n      and\n        /* \"#utility.yul\":3787:3799   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":3780:3826   */\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":175:182  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":3842:3854   */\n      0x48\n      add\n        /* \"ERC721A/VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n    tag_38:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":202:251  keccak256(abi.encodePacked(_user, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"ERC721A/VerifySignature.sol\":195:251  return keccak256(abi.encodePacked(_user, address(this))) */\n      swap1\n      pop\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n    tag_17:\n        /* \"ERC721A/VerifySignature.sol\":896:900  bool */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":913:932  bytes32 messageHash */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":935:956  getMessageHash(_user) */\n      tag_41\n        /* \"ERC721A/VerifySignature.sol\":950:955  _user */\n      dup5\n        /* \"ERC721A/VerifySignature.sol\":935:949  getMessageHash */\n      tag_11\n        /* \"ERC721A/VerifySignature.sol\":935:956  getMessageHash(_user) */\n      jump\t// in\n    tag_41:\n        /* \"ERC721A/VerifySignature.sol\":913:956  bytes32 messageHash = getMessageHash(_user) */\n      swap1\n      pop\n        /* \"ERC721A/VerifySignature.sol\":967:995  bytes32 ethSignedMessageHash */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      tag_42\n        /* \"ERC721A/VerifySignature.sol\":1022:1033  messageHash */\n      dup3\n        /* \"ERC721A/VerifySignature.sol\":998:1021  getEthSignedMessageHash */\n      tag_35\n        /* \"ERC721A/VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      jump\t// in\n    tag_42:\n        /* \"ERC721A/VerifySignature.sol\":967:1034  bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash) */\n      swap1\n      pop\n        /* \"ERC721A/VerifySignature.sol\":1104:1111  _signer */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n        /* \"ERC721A/VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      tag_43\n        /* \"ERC721A/VerifySignature.sol\":1068:1088  ethSignedMessageHash */\n      dup3\n        /* \"ERC721A/VerifySignature.sol\":1090:1099  signature */\n      dup7\n        /* \"ERC721A/VerifySignature.sol\":1054:1067  recoverSigner */\n      tag_23\n        /* \"ERC721A/VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n      eq\n      swap7\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_23:\n        /* \"ERC721A/VerifySignature.sol\":1252:1259  address */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1273:1282  bytes32 r */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":1284:1293  bytes32 s */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1295:1302  uint8 v */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      tag_45\n        /* \"ERC721A/VerifySignature.sol\":1321:1331  _signature */\n      dup6\n        /* \"ERC721A/VerifySignature.sol\":1306:1320  splitSignature */\n      tag_29\n        /* \"ERC721A/VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      jump\t// in\n    tag_45:\n        /* \"ERC721A/VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x40\n      dup1\n      mload\n      0x00\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":4092:4117   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":4165:4169   */\n      0xff\n        /* \"#utility.yul\":4153:4170   */\n      dup4\n      and\n        /* \"#utility.yul\":4133:4151   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":4126:4171   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4187:4205   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":4180:4214   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":4230:4248   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":4223:4257   */\n      dup4\n      swap1\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":1272:1332  (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature) */\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n        /* \"ERC721A/VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":4064:4083   */\n      0xa0\n      add\n        /* \"ERC721A/VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap8\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_29:\n        /* \"ERC721A/VerifySignature.sol\":1513:1522  bytes32 r */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1537:1546  bytes32 s */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":1561:1568  uint8 v */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1604:1607  sig */\n      dup4\n        /* \"ERC721A/VerifySignature.sol\":1604:1614  sig.length */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":1618:1620  65 */\n      0x41\n        /* \"ERC721A/VerifySignature.sol\":1604:1620  sig.length == 65 */\n      eq\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4470:4472   */\n      0x20\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4452:4473   */\n      mstore\n        /* \"#utility.yul\":4509:4511   */\n      0x18\n        /* \"#utility.yul\":4489:4507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4482:4512   */\n      mstore\n        /* \"#utility.yul\":4548:4574   */\n      0x696e76616c6964207369676e6174757265206c656e6774680000000000000000\n        /* \"#utility.yul\":4528:4546   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4521:4575   */\n      mstore\n        /* \"#utility.yul\":4592:4610   */\n      0x64\n      add\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n      pop\n      pop\n      pop\n        /* \"ERC721A/VerifySignature.sol\":2058:2060  32 */\n      0x20\n        /* \"ERC721A/VerifySignature.sol\":2049:2061  add(sig, 32) */\n      dup2\n      add\n        /* \"ERC721A/VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":2128:2130  64 */\n      0x40\n        /* \"ERC721A/VerifySignature.sol\":2119:2131  add(sig, 64) */\n      dup3\n      add\n        /* \"ERC721A/VerifySignature.sol\":2113:2132  mload(add(sig, 64)) */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":2235:2237  96 */\n      0x60\n        /* \"ERC721A/VerifySignature.sol\":2226:2238  add(sig, 96) */\n      swap1\n      swap3\n      add\n        /* \"ERC721A/VerifySignature.sol\":2220:2239  mload(add(sig, 96)) */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      swap1\n      swap3\n        /* \"ERC721A/VerifySignature.sol\":2217:2218  0 */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":2212:2240  byte(0, mload(add(sig, 96))) */\n      swap2\n      swap1\n      swap2\n      byte\n      swap1\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_35:\n        /* \"ERC721A/VerifySignature.sol\":611:738  abi.encodePacked(... */\n      mload(0x40)\n        /* \"#utility.yul\":4863:4929   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"ERC721A/VerifySignature.sol\":611:738  abi.encodePacked(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":4851:4930   */\n      mstore\n        /* \"#utility.yul\":4946:4958   */\n      0x3c\n      dup2\n      add\n        /* \"#utility.yul\":4939:4967   */\n      dup3\n      swap1\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":370:377  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":4983:4995   */\n      0x5c\n      add\n        /* \"ERC721A/VerifySignature.sol\":611:738  abi.encodePacked(... */\n      tag_38\n        /* \"#utility.yul\":4621:5001   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_57:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_62:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_10:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_64:\n        /* \"#utility.yul\":343:372   */\n      tag_65\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_57\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:692   */\n    tag_58:\n        /* \"#utility.yul\":626:636   */\n      0x4e487b71\n        /* \"#utility.yul\":621:624   */\n      0xe0\n        /* \"#utility.yul\":617:637   */\n      shl\n        /* \"#utility.yul\":614:615   */\n      0x00\n        /* \"#utility.yul\":607:638   */\n      mstore\n        /* \"#utility.yul\":657:661   */\n      0x41\n        /* \"#utility.yul\":654:655   */\n      0x04\n        /* \"#utility.yul\":647:662   */\n      mstore\n        /* \"#utility.yul\":681:685   */\n      0x24\n        /* \"#utility.yul\":678:679   */\n      0x00\n        /* \"#utility.yul\":671:686   */\n      revert\n        /* \"#utility.yul\":697:1415   */\n    tag_59:\n        /* \"#utility.yul\":739:744   */\n      0x00\n        /* \"#utility.yul\":792:795   */\n      dup3\n        /* \"#utility.yul\":785:789   */\n      0x1f\n        /* \"#utility.yul\":777:783   */\n      dup4\n        /* \"#utility.yul\":773:790   */\n      add\n        /* \"#utility.yul\":769:796   */\n      slt\n        /* \"#utility.yul\":759:814   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":759:814   */\n    tag_69:\n        /* \"#utility.yul\":846:852   */\n      dup2\n        /* \"#utility.yul\":833:853   */\n      calldataload\n        /* \"#utility.yul\":872:890   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":909:911   */\n      dup1\n        /* \"#utility.yul\":905:907   */\n      dup3\n        /* \"#utility.yul\":902:912   */\n      gt\n        /* \"#utility.yul\":899:935   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":915:933   */\n      tag_71\n      tag_58\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":990:992   */\n      0x40\n        /* \"#utility.yul\":984:993   */\n      mload\n        /* \"#utility.yul\":958:960   */\n      0x1f\n        /* \"#utility.yul\":1044:1057   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1040:1062   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1064:1066   */\n      0x3f\n        /* \"#utility.yul\":1036:1067   */\n      add\n        /* \"#utility.yul\":1032:1072   */\n      and\n        /* \"#utility.yul\":1020:1073   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1088:1106   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":1108:1130   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1085:1131   */\n      or\n        /* \"#utility.yul\":1082:1154   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1134:1152   */\n      tag_73\n      tag_58\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1174:1184   */\n      dup2\n        /* \"#utility.yul\":1170:1172   */\n      0x40\n        /* \"#utility.yul\":1163:1185   */\n      mstore\n        /* \"#utility.yul\":1209:1211   */\n      dup4\n        /* \"#utility.yul\":1201:1207   */\n      dup2\n        /* \"#utility.yul\":1194:1212   */\n      mstore\n        /* \"#utility.yul\":1255:1258   */\n      dup7\n        /* \"#utility.yul\":1248:1252   */\n      0x20\n        /* \"#utility.yul\":1243:1245   */\n      dup6\n        /* \"#utility.yul\":1235:1241   */\n      dup9\n        /* \"#utility.yul\":1231:1246   */\n      add\n        /* \"#utility.yul\":1227:1253   */\n      add\n        /* \"#utility.yul\":1224:1259   */\n      gt\n        /* \"#utility.yul\":1221:1276   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1272:1273   */\n      0x00\n        /* \"#utility.yul\":1269:1270   */\n      dup1\n        /* \"#utility.yul\":1262:1274   */\n      revert\n        /* \"#utility.yul\":1221:1276   */\n    tag_74:\n        /* \"#utility.yul\":1336:1338   */\n      dup4\n        /* \"#utility.yul\":1329:1333   */\n      0x20\n        /* \"#utility.yul\":1321:1327   */\n      dup8\n        /* \"#utility.yul\":1317:1334   */\n      add\n        /* \"#utility.yul\":1310:1314   */\n      0x20\n        /* \"#utility.yul\":1302:1308   */\n      dup4\n        /* \"#utility.yul\":1298:1315   */\n      add\n        /* \"#utility.yul\":1285:1339   */\n      calldatacopy\n        /* \"#utility.yul\":1383:1384   */\n      0x00\n        /* \"#utility.yul\":1376:1380   */\n      0x20\n        /* \"#utility.yul\":1371:1373   */\n      dup6\n        /* \"#utility.yul\":1363:1369   */\n      dup4\n        /* \"#utility.yul\":1359:1374   */\n      add\n        /* \"#utility.yul\":1355:1381   */\n      add\n        /* \"#utility.yul\":1348:1385   */\n      mstore\n        /* \"#utility.yul\":1403:1409   */\n      dup1\n        /* \"#utility.yul\":1394:1409   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":697:1415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1420:1888   */\n    tag_16:\n        /* \"#utility.yul\":1506:1512   */\n      0x00\n        /* \"#utility.yul\":1514:1520   */\n      dup1\n        /* \"#utility.yul\":1522:1528   */\n      0x00\n        /* \"#utility.yul\":1575:1577   */\n      0x60\n        /* \"#utility.yul\":1563:1572   */\n      dup5\n        /* \"#utility.yul\":1554:1561   */\n      dup7\n        /* \"#utility.yul\":1550:1573   */\n      sub\n        /* \"#utility.yul\":1546:1578   */\n      slt\n        /* \"#utility.yul\":1543:1595   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":1591:1592   */\n      0x00\n        /* \"#utility.yul\":1588:1589   */\n      dup1\n        /* \"#utility.yul\":1581:1593   */\n      revert\n        /* \"#utility.yul\":1543:1595   */\n    tag_76:\n        /* \"#utility.yul\":1614:1643   */\n      tag_77\n        /* \"#utility.yul\":1633:1642   */\n      dup5\n        /* \"#utility.yul\":1614:1643   */\n      tag_57\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1604:1643   */\n      swap3\n      pop\n        /* \"#utility.yul\":1662:1700   */\n      tag_78\n        /* \"#utility.yul\":1696:1698   */\n      0x20\n        /* \"#utility.yul\":1685:1694   */\n      dup6\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1662:1700   */\n      tag_57\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1652:1700   */\n      swap2\n      pop\n        /* \"#utility.yul\":1751:1753   */\n      0x40\n        /* \"#utility.yul\":1740:1749   */\n      dup5\n        /* \"#utility.yul\":1736:1754   */\n      add\n        /* \"#utility.yul\":1723:1755   */\n      calldataload\n        /* \"#utility.yul\":1778:1796   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1770:1776   */\n      dup2\n        /* \"#utility.yul\":1767:1797   */\n      gt\n        /* \"#utility.yul\":1764:1814   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":1810:1811   */\n      0x00\n        /* \"#utility.yul\":1807:1808   */\n      dup1\n        /* \"#utility.yul\":1800:1812   */\n      revert\n        /* \"#utility.yul\":1764:1814   */\n    tag_79:\n        /* \"#utility.yul\":1833:1882   */\n      tag_80\n        /* \"#utility.yul\":1874:1881   */\n      dup7\n        /* \"#utility.yul\":1865:1871   */\n      dup3\n        /* \"#utility.yul\":1854:1863   */\n      dup8\n        /* \"#utility.yul\":1850:1872   */\n      add\n        /* \"#utility.yul\":1833:1882   */\n      tag_59\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1823:1882   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1420:1888   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2085:2473   */\n    tag_22:\n        /* \"#utility.yul\":2162:2168   */\n      0x00\n        /* \"#utility.yul\":2170:2176   */\n      dup1\n        /* \"#utility.yul\":2223:2225   */\n      0x40\n        /* \"#utility.yul\":2211:2220   */\n      dup4\n        /* \"#utility.yul\":2202:2209   */\n      dup6\n        /* \"#utility.yul\":2198:2221   */\n      sub\n        /* \"#utility.yul\":2194:2226   */\n      slt\n        /* \"#utility.yul\":2191:2243   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2239:2240   */\n      0x00\n        /* \"#utility.yul\":2236:2237   */\n      dup1\n        /* \"#utility.yul\":2229:2241   */\n      revert\n        /* \"#utility.yul\":2191:2243   */\n    tag_83:\n        /* \"#utility.yul\":2275:2284   */\n      dup3\n        /* \"#utility.yul\":2262:2285   */\n      calldataload\n        /* \"#utility.yul\":2252:2285   */\n      swap2\n      pop\n        /* \"#utility.yul\":2336:2338   */\n      0x20\n        /* \"#utility.yul\":2325:2334   */\n      dup4\n        /* \"#utility.yul\":2321:2339   */\n      add\n        /* \"#utility.yul\":2308:2340   */\n      calldataload\n        /* \"#utility.yul\":2363:2381   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2355:2361   */\n      dup2\n        /* \"#utility.yul\":2352:2382   */\n      gt\n        /* \"#utility.yul\":2349:2399   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2395:2396   */\n      0x00\n        /* \"#utility.yul\":2392:2393   */\n      dup1\n        /* \"#utility.yul\":2385:2397   */\n      revert\n        /* \"#utility.yul\":2349:2399   */\n    tag_84:\n        /* \"#utility.yul\":2418:2467   */\n      tag_85\n        /* \"#utility.yul\":2459:2466   */\n      dup6\n        /* \"#utility.yul\":2450:2456   */\n      dup3\n        /* \"#utility.yul\":2439:2448   */\n      dup7\n        /* \"#utility.yul\":2435:2457   */\n      add\n        /* \"#utility.yul\":2418:2467   */\n      tag_59\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2408:2467   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2085:2473   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:3006   */\n    tag_28:\n        /* \"#utility.yul\":2754:2760   */\n      0x00\n        /* \"#utility.yul\":2807:2809   */\n      0x20\n        /* \"#utility.yul\":2795:2804   */\n      dup3\n        /* \"#utility.yul\":2786:2793   */\n      dup5\n        /* \"#utility.yul\":2782:2805   */\n      sub\n        /* \"#utility.yul\":2778:2810   */\n      slt\n        /* \"#utility.yul\":2775:2827   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":2823:2824   */\n      0x00\n        /* \"#utility.yul\":2820:2821   */\n      dup1\n        /* \"#utility.yul\":2813:2825   */\n      revert\n        /* \"#utility.yul\":2775:2827   */\n    tag_88:\n        /* \"#utility.yul\":2863:2872   */\n      dup2\n        /* \"#utility.yul\":2850:2873   */\n      calldataload\n        /* \"#utility.yul\":2896:2914   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2888:2894   */\n      dup2\n        /* \"#utility.yul\":2885:2915   */\n      gt\n        /* \"#utility.yul\":2882:2932   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2928:2929   */\n      0x00\n        /* \"#utility.yul\":2925:2926   */\n      dup1\n        /* \"#utility.yul\":2918:2930   */\n      revert\n        /* \"#utility.yul\":2882:2932   */\n    tag_89:\n        /* \"#utility.yul\":2951:3000   */\n      tag_90\n        /* \"#utility.yul\":2992:2999   */\n      dup5\n        /* \"#utility.yul\":2983:2989   */\n      dup3\n        /* \"#utility.yul\":2972:2981   */\n      dup6\n        /* \"#utility.yul\":2968:2990   */\n      add\n        /* \"#utility.yul\":2951:3000   */\n      tag_59\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2941:3000   */\n      swap5\n        /* \"#utility.yul\":2686:3006   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3342:3522   */\n    tag_34:\n        /* \"#utility.yul\":3401:3407   */\n      0x00\n        /* \"#utility.yul\":3454:3456   */\n      0x20\n        /* \"#utility.yul\":3442:3451   */\n      dup3\n        /* \"#utility.yul\":3433:3440   */\n      dup5\n        /* \"#utility.yul\":3429:3452   */\n      sub\n        /* \"#utility.yul\":3425:3457   */\n      slt\n        /* \"#utility.yul\":3422:3474   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3470:3471   */\n      0x00\n        /* \"#utility.yul\":3467:3468   */\n      dup1\n        /* \"#utility.yul\":3460:3472   */\n      revert\n        /* \"#utility.yul\":3422:3474   */\n    tag_93:\n      pop\n        /* \"#utility.yul\":3493:3516   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3342:3522   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204bd3a502567a1edbd5ebf7012501299fc763cc387d434dd37975771b1f7d6b4764736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506104e5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631f5ac1b21461005c57806342920a461461008257806397aba7f9146100a5578063a7bb5803146100d0578063fa54080114610101575b600080fd5b61006f61006a3660046102ef565b610114565b6040519081526020015b60405180910390f35b6100956100903660046103b4565b61015e565b6040519015158152602001610079565b6100b86100b3366004610412565b6101a1565b6040516001600160a01b039091168152602001610079565b6100e36100de366004610459565b610220565b60408051938452602084019290925260ff1690820152606001610079565b61006f61010f366004610496565b610298565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60008061016a84610114565b9050600061017782610298565b9050856001600160a01b031661018d82866101a1565b6001600160a01b0316149695505050505050565b6000806000806101b085610220565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa15801561020b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461027a5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640160405180910390fd5b50505060208101516040820151606090920151909260009190911a90565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610141565b80356001600160a01b03811681146102ea57600080fd5b919050565b60006020828403121561030157600080fd5b61030a826102d3565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261033857600080fd5b813567ffffffffffffffff8082111561035357610353610311565b604051601f8301601f19908116603f0116810190828211818310171561037b5761037b610311565b8160405283815286602085880101111561039457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156103c957600080fd5b6103d2846102d3565b92506103e0602085016102d3565b9150604084013567ffffffffffffffff8111156103fc57600080fd5b61040886828701610327565b9150509250925092565b6000806040838503121561042557600080fd5b82359150602083013567ffffffffffffffff81111561044357600080fd5b61044f85828601610327565b9150509250929050565b60006020828403121561046b57600080fd5b813567ffffffffffffffff81111561048257600080fd5b61048e84828501610327565b949350505050565b6000602082840312156104a857600080fd5b503591905056fea26469706673582212204bd3a502567a1edbd5ebf7012501299fc763cc387d434dd37975771b1f7d6b4764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x101 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x412 JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16A DUP5 PUSH2 0x114 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x177 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18D DUP3 DUP7 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1B0 DUP6 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x141 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A DUP3 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x353 JUMPI PUSH2 0x353 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x37B JUMPI PUSH2 0x37B PUSH2 0x311 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D2 DUP5 PUSH2 0x2D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x3E0 PUSH1 0x20 DUP6 ADD PUSH2 0x2D3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x408 DUP7 DUP3 DUP8 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44F DUP6 DUP3 DUP7 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48E DUP5 DUP3 DUP6 ADD PUSH2 0x327 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xD3 0xA5 MUL JUMP PUSH27 0x1EDBD5EBF7012501299FC763CC387D434DD37975771B1F7D6B4764 PUSH20 0x6F6C634300080F00330000000000000000000000 ",
							"sourceMap": "61:2242:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getEthSignedMessageHash_1182": {
									"entryPoint": 664,
									"id": 1182,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMessageHash_1166": {
									"entryPoint": 276,
									"id": 1166,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@recoverSigner_1240": {
									"entryPoint": 417,
									"id": 1240,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@splitSignature_1261": {
									"entryPoint": 544,
									"id": 1261,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@verify_1213": {
									"entryPoint": 350,
									"id": 1213,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5003:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:13"
															},
															"nodeType": "YulIf",
															"src": "111:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "14:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:13"
															},
															"nodeType": "YulIf",
															"src": "272:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:13",
														"type": ""
													}
												],
												"src": "192:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:13",
														"type": ""
													}
												],
												"src": "383:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "614:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "621:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "626:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "617:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "617:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "607:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "654:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "657:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "647:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "647:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "678:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "681:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "671:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "671:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "671:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "565:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:666:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "777:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "785:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "773:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "773:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "792:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:35:13"
															},
															"nodeType": "YulIf",
															"src": "759:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "823:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "846:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "833:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "827:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "862:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "872:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "866:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "913:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "915:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "915:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "915:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "905:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "909:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "902:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "902:10:13"
															},
															"nodeType": "YulIf",
															"src": "899:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "944:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "954:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "948:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "970:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "990:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "984:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "974:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1002:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1024:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "1048:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1052:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1044:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1059:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1040:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1040:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1064:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1069:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1032:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1032:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1020:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1006:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1134:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1134:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1134:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1091:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1103:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1088:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1088:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1111:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1123:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1108:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1085:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:46:13"
															},
															"nodeType": "YulIf",
															"src": "1082:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1170:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1174:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1163:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1163:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1201:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1209:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1260:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1269:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1272:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1262:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1262:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1262:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1243:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1231:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1231:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1248:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1227:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1255:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1224:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1224:35:13"
															},
															"nodeType": "YulIf",
															"src": "1221:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1302:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1310:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1317:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1317:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1336:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1285:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1285:54:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1363:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1371:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1359:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1359:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1376:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:26:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1348:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1348:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1394:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1403:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1394:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "723:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "731:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "739:5:13",
														"type": ""
													}
												],
												"src": "697:718:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1533:355:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1579:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1588:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1591:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1581:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1581:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1581:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1554:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1563:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1550:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1550:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:32:13"
															},
															"nodeType": "YulIf",
															"src": "1543:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1604:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1633:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1614:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1614:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1604:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1652:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1662:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1709:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1740:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1751:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1736:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1736:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1723:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1713:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1798:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1800:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1800:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1770:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1778:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1767:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:30:13"
															},
															"nodeType": "YulIf",
															"src": "1764:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1823:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1854:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1865:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1850:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1850:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1874:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1833:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:49:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1483:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1494:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1514:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1522:6:13",
														"type": ""
													}
												],
												"src": "1420:468:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1988:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1998:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2010:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2021:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2006:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2006:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1998:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2040:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2065:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2058:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2058:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2051:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2051:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2033:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2033:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1957:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1968:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1979:4:13",
														"type": ""
													}
												],
												"src": "1893:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2181:292:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2227:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2239:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2229:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2229:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2229:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2202:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2211:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2198:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2198:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2223:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2194:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2194:32:13"
															},
															"nodeType": "YulIf",
															"src": "2191:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2252:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2275:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2262:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2252:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2294:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2325:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2336:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2321:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2321:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2308:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2298:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2383:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2392:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2395:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2385:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2385:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2385:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2355:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2352:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:30:13"
															},
															"nodeType": "YulIf",
															"src": "2349:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2408:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2439:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2450:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2459:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2418:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2408:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2139:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2150:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2162:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2170:6:13",
														"type": ""
													}
												],
												"src": "2085:388:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2579:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2589:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2601:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2612:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2597:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2589:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2631:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2646:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2662:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2667:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2658:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2658:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2671:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2654:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2654:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2642:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2642:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2624:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2548:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2559:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2570:4:13",
														"type": ""
													}
												],
												"src": "2478:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2765:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2811:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2820:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2823:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2813:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2813:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2813:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2786:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2795:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2782:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2782:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2807:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2778:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:32:13"
															},
															"nodeType": "YulIf",
															"src": "2775:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2836:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2850:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2850:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2840:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2916:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2925:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2928:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2918:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2918:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2918:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2888:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2885:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2885:30:13"
															},
															"nodeType": "YulIf",
															"src": "2882:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2941:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2983:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2968:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2968:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2992:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2951:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:49:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2941:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2731:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2742:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2754:6:13",
														"type": ""
													}
												],
												"src": "2686:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3164:173:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3174:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3186:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3197:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3182:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3174:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3216:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3227:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3209:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3209:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3209:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3254:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3265:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3250:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3250:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3270:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3243:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3243:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3297:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3308:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3293:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3317:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3325:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3286:45:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3117:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3128:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3136:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3144:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3155:4:13",
														"type": ""
													}
												],
												"src": "3011:326:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3412:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3458:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3467:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3470:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3460:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3460:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3460:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3433:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3442:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3454:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3425:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3425:32:13"
															},
															"nodeType": "YulIf",
															"src": "3422:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3483:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3506:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3493:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3483:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3378:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3389:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3401:6:13",
														"type": ""
													}
												],
												"src": "3342:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3674:186:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3684:41:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3698:26:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3694:31:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3688:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3741:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3754:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3758:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3750:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3750:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3767:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3746:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3746:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3734:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3734:37:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3791:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3796:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3787:12:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3809:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "3813:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3805:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3805:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3822:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3801:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3801:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3780:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3835:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3846:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3842:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3835:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3642:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3647:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3655:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3666:3:13",
														"type": ""
													}
												],
												"src": "3527:333:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4046:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4056:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4068:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4079:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4064:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4056:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4099:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4110:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4092:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4092:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4092:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4137:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4148:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4133:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4133:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4157:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4165:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4153:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4153:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4126:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4126:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4191:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4202:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4187:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4187:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4207:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4180:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4180:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4180:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4234:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4245:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4230:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4230:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4250:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4223:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4223:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4223:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3991:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4002:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4010:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4018:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4026:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4037:4:13",
														"type": ""
													}
												],
												"src": "3865:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4442:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4459:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4470:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4452:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4452:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4452:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4493:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4504:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4489:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4489:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4482:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4482:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4482:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4532:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4543:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4528:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4528:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4548:26:13",
																		"type": "",
																		"value": "invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4521:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4521:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4521:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4584:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4596:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4607:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4592:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4592:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4584:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4419:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4433:4:13",
														"type": ""
													}
												],
												"src": "4268:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4841:160:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4858:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4863:66:13",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4851:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4851:79:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4950:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4955:2:13",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4946:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4946:12:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4960:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4939:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4939:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4976:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4987:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4992:2:13",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4983:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4983:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4976:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4817:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4822:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4833:3:13",
														"type": ""
													}
												],
												"src": "4621:380:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631f5ac1b21461005c57806342920a461461008257806397aba7f9146100a5578063a7bb5803146100d0578063fa54080114610101575b600080fd5b61006f61006a3660046102ef565b610114565b6040519081526020015b60405180910390f35b6100956100903660046103b4565b61015e565b6040519015158152602001610079565b6100b86100b3366004610412565b6101a1565b6040516001600160a01b039091168152602001610079565b6100e36100de366004610459565b610220565b60408051938452602084019290925260ff1690820152606001610079565b61006f61010f366004610496565b610298565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60008061016a84610114565b9050600061017782610298565b9050856001600160a01b031661018d82866101a1565b6001600160a01b0316149695505050505050565b6000806000806101b085610220565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa15801561020b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461027a5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640160405180910390fd5b50505060208101516040820151606090920151909260009190911a90565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610141565b80356001600160a01b03811681146102ea57600080fd5b919050565b60006020828403121561030157600080fd5b61030a826102d3565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261033857600080fd5b813567ffffffffffffffff8082111561035357610353610311565b604051601f8301601f19908116603f0116810190828211818310171561037b5761037b610311565b8160405283815286602085880101111561039457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156103c957600080fd5b6103d2846102d3565b92506103e0602085016102d3565b9150604084013567ffffffffffffffff8111156103fc57600080fd5b61040886828701610327565b9150509250925092565b6000806040838503121561042557600080fd5b82359150602083013567ffffffffffffffff81111561044357600080fd5b61044f85828601610327565b9150509250929050565b60006020828403121561046b57600080fd5b813567ffffffffffffffff81111561048257600080fd5b61048e84828501610327565b949350505050565b6000602082840312156104a857600080fd5b503591905056fea26469706673582212204bd3a502567a1edbd5ebf7012501299fc763cc387d434dd37975771b1f7d6b4764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x101 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x412 JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16A DUP5 PUSH2 0x114 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x177 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18D DUP3 DUP7 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1B0 DUP6 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x141 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A DUP3 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x353 JUMPI PUSH2 0x353 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x37B JUMPI PUSH2 0x37B PUSH2 0x311 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D2 DUP5 PUSH2 0x2D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x3E0 PUSH1 0x20 DUP6 ADD PUSH2 0x2D3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x408 DUP7 DUP3 DUP8 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44F DUP6 DUP3 DUP7 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48E DUP5 DUP3 DUP6 ADD PUSH2 0x327 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xD3 0xA5 MUL JUMP PUSH27 0x1EDBD5EBF7012501299FC763CC387D434DD37975771B1F7D6B4764 PUSH20 0x6F6C634300080F00330000000000000000000000 ",
							"sourceMap": "61:2242:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;99:160;;;;;;:::i;:::-;;:::i;:::-;;;529:25:13;;;517:2;502:18;99:160:9;;;;;;;;769:350;;;;;;:::i;:::-;;:::i;:::-;;;2058:14:13;;2051:22;2033:41;;2021:2;2006:18;769:350:9;1893:187:13;1127:274:9;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2642:32:13;;;2624:51;;2612:2;2597:18;1127:274:9;2478:203:13;1409:891:9;;;;;;:::i;:::-;;:::i;:::-;;;;3209:25:13;;;3265:2;3250:18;;3243:34;;;;3325:4;3313:17;3293:18;;;3286:45;3197:2;3182:18;1409:891:9;3011:326:13;267:494:9;;;;;;:::i;:::-;;:::i;99:160::-;212:38;;-1:-1:-1;;3754:2:13;3750:15;;;3746:24;;212:38:9;;;3734:37:13;244:4:9;3805:15:13;;3801:24;3787:12;;;3780:46;175:7:9;;3842:12:13;;212:38:9;;;;;;;;;;;;;202:49;;;;;;195:56;;99:160;;;:::o;769:350::-;896:4;913:19;935:21;950:5;935:14;:21::i;:::-;913:43;;967:28;998:36;1022:11;998:23;:36::i;:::-;967:67;;1104:7;-1:-1:-1;;;;;1054:57:9;:46;1068:20;1090:9;1054:13;:46::i;:::-;-1:-1:-1;;;;;1054:57:9;;;769:350;-1:-1:-1;;;;;;769:350:9:o;1127:274::-;1252:7;1273:9;1284;1295:7;1306:26;1321:10;1306:14;:26::i;:::-;1352:41;;;;;;;;;;;;4092:25:13;;;4165:4;4153:17;;4133:18;;;4126:45;;;;4187:18;;;4180:34;;;4230:18;;;4223:34;;;1272:60:9;;-1:-1:-1;1272:60:9;;-1:-1:-1;1272:60:9;-1:-1:-1;1352:41:9;;4064:19:13;;1352:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1352:41:9;;-1:-1:-1;;1352:41:9;;;1127:274;-1:-1:-1;;;;;;;1127:274:9:o;1409:891::-;1513:9;1537;1561:7;1604:3;:10;1618:2;1604:16;1596:53;;;;-1:-1:-1;;;1596:53:9;;4470:2:13;1596:53:9;;;4452:21:13;4509:2;4489:18;;;4482:30;4548:26;4528:18;;;4521:54;4592:18;;1596:53:9;;;;;;;;-1:-1:-1;;;2058:2:9;2049:12;;2043:19;2128:2;2119:12;;2113:19;2235:2;2226:12;;;2220:19;2043;;2217:1;2212:28;;;;;1409:891::o;267:494::-;611:127;;4863:66:13;611:127:9;;;4851:79:13;4946:12;;;4939:28;;;370:7:9;;4983:12:13;;611:127:9;4621:380:13;14:173;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:13:o;565:127::-;626:10;621:3;617:20;614:1;607:31;657:4;654:1;647:15;681:4;678:1;671:15;697:718;739:5;792:3;785:4;777:6;773:17;769:27;759:55;;810:1;807;800:12;759:55;846:6;833:20;872:18;909:2;905;902:10;899:36;;;915:18;;:::i;:::-;990:2;984:9;958:2;1044:13;;-1:-1:-1;;1040:22:13;;;1064:2;1036:31;1032:40;1020:53;;;1088:18;;;1108:22;;;1085:46;1082:72;;;1134:18;;:::i;:::-;1174:10;1170:2;1163:22;1209:2;1201:6;1194:18;1255:3;1248:4;1243:2;1235:6;1231:15;1227:26;1224:35;1221:55;;;1272:1;1269;1262:12;1221:55;1336:2;1329:4;1321:6;1317:17;1310:4;1302:6;1298:17;1285:54;1383:1;1376:4;1371:2;1363:6;1359:15;1355:26;1348:37;1403:6;1394:15;;;;;;697:718;;;;:::o;1420:468::-;1506:6;1514;1522;1575:2;1563:9;1554:7;1550:23;1546:32;1543:52;;;1591:1;1588;1581:12;1543:52;1614:29;1633:9;1614:29;:::i;:::-;1604:39;;1662:38;1696:2;1685:9;1681:18;1662:38;:::i;:::-;1652:48;;1751:2;1740:9;1736:18;1723:32;1778:18;1770:6;1767:30;1764:50;;;1810:1;1807;1800:12;1764:50;1833:49;1874:7;1865:6;1854:9;1850:22;1833:49;:::i;:::-;1823:59;;;1420:468;;;;;:::o;2085:388::-;2162:6;2170;2223:2;2211:9;2202:7;2198:23;2194:32;2191:52;;;2239:1;2236;2229:12;2191:52;2275:9;2262:23;2252:33;;2336:2;2325:9;2321:18;2308:32;2363:18;2355:6;2352:30;2349:50;;;2395:1;2392;2385:12;2349:50;2418:49;2459:7;2450:6;2439:9;2435:22;2418:49;:::i;:::-;2408:59;;;2085:388;;;;;:::o;2686:320::-;2754:6;2807:2;2795:9;2786:7;2782:23;2778:32;2775:52;;;2823:1;2820;2813:12;2775:52;2863:9;2850:23;2896:18;2888:6;2885:30;2882:50;;;2928:1;2925;2918:12;2882:50;2951:49;2992:7;2983:6;2972:9;2968:22;2951:49;:::i;:::-;2941:59;2686:320;-1:-1:-1;;;;2686:320:13:o;3342:180::-;3401:6;3454:2;3442:9;3433:7;3429:23;3425:32;3422:52;;;3470:1;3467;3460:12;3422:52;-1:-1:-1;3493:23:13;;3342:180;-1:-1:-1;3342:180:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "250600",
								"executionCost": "294",
								"totalCost": "250894"
							},
							"external": {
								"getEthSignedMessageHash(bytes32)": "511",
								"getMessageHash(address)": "519",
								"recoverSigner(bytes32,bytes)": "infinite",
								"splitSignature(bytes)": "infinite",
								"verify(address,address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204bd3a502567a1edbd5ebf7012501299fc763cc387d434dd37975771b1f7d6b4764736f6c634300080f0033",
									".code": [
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "1F5AC1B2"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "42920A46"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "97ABA7F9"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "A7BB5803"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "FA540801"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2074,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2023,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2024,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1893,
											"end": 2080,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2614,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2597,
											"end": 2615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 2478,
											"end": 2681,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3267,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3268,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3250,
											"end": 3268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3325,
											"end": 3329,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3313,
											"end": 3330,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3286,
											"end": 3331,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3199,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 3011,
											"end": 3337,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3734,
											"end": 3771,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 244,
											"end": 248,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3826,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 175,
											"end": 182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "PUSH",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 202,
											"end": 251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 195,
											"end": 251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 195,
											"end": 251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 896,
											"end": 900,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 935,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 935,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 935,
											"end": 956,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 913,
											"end": 956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 913,
											"end": 956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 967,
											"end": 995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1022,
											"end": 1033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 998,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1054,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1284,
											"end": 1293,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1302,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1321,
											"end": 1331,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1306,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4165,
											"end": 4169,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4153,
											"end": 4170,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4170,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4064,
											"end": 4083,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 4064,
											"end": 4083,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1604,
											"end": 1614,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1604,
											"end": 1620,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4470,
											"end": 4472,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4452,
											"end": 4473,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4482,
											"end": 4512,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "PUSH",
											"source": 13,
											"value": "696E76616C6964207369676E6174757265206C656E6774680000000000000000"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2132,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4929,
											"name": "PUSH",
											"source": 13,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 611,
											"end": 738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4851,
											"end": 4930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "PUSH",
											"source": 13,
											"value": "3C"
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4967,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4967,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 4995,
											"name": "PUSH",
											"source": 13,
											"value": "5C"
										},
										{
											"begin": 4983,
											"end": 4995,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4621,
											"end": 5001,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 565,
											"end": 692,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 565,
											"end": 692,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 626,
											"end": 636,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 621,
											"end": 624,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 617,
											"end": 637,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 614,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 657,
											"end": 661,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 654,
											"end": 655,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 681,
											"end": 685,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 678,
											"end": 679,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 686,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 739,
											"end": 744,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 785,
											"end": 789,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 773,
											"end": 790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 769,
											"end": 796,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 759,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 759,
											"end": 814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 759,
											"end": 814,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 759,
											"end": 814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 846,
											"end": 852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 833,
											"end": 853,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 872,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 911,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 905,
											"end": 907,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 902,
											"end": 912,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 899,
											"end": 935,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 899,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 899,
											"end": 935,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 915,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 915,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 915,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 915,
											"end": 933,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 915,
											"end": 933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 1036,
											"end": 1067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1072,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1073,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1131,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1154,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1082,
											"end": 1154,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1134,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1174,
											"end": 1184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1209,
											"end": 1211,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1258,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1248,
											"end": 1252,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1245,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1231,
											"end": 1246,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1253,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1224,
											"end": 1259,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1274,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1336,
											"end": 1338,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1329,
											"end": 1333,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1317,
											"end": 1334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1310,
											"end": 1314,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1308,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1298,
											"end": 1315,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1380,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1373,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1369,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1359,
											"end": 1374,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 1381,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1385,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1409,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1563,
											"end": 1572,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1550,
											"end": 1573,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1546,
											"end": 1578,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1592,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1581,
											"end": 1593,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1614,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1643,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1662,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1652,
											"end": 1700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1652,
											"end": 1700,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1749,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1755,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1800,
											"end": 1812,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1874,
											"end": 1881,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1865,
											"end": 1871,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1833,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1882,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2162,
											"end": 2168,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2221,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2226,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2239,
											"end": 2240,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2229,
											"end": 2241,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2275,
											"end": 2284,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2285,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2338,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2352,
											"end": 2382,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2385,
											"end": 2397,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2435,
											"end": 2457,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2418,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2467,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2686,
											"end": 3006,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 2686,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2760,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2809,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2804,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2793,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2782,
											"end": 2805,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2810,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2821,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2813,
											"end": 2825,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2850,
											"end": 2873,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2896,
											"end": 2914,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2888,
											"end": 2894,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2915,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2983,
											"end": 2989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2951,
											"end": 3000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2941,
											"end": 3000,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2686,
											"end": 3006,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2686,
											"end": 3006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3433,
											"end": 3440,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3472,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 3516,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3516,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ERC721A/INagaKid.sol",
								"ERC721A/MintNagaKids.sol",
								"ERC721A/VerifySignature.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721AQueryable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getEthSignedMessageHash(bytes32)": "fa540801",
							"getMessageHash(address)": "1f5ac1b2",
							"recoverSigner(bytes32,bytes)": "97aba7f9",
							"splitSignature(bytes)": "a7bb5803",
							"verify(address,address,bytes)": "42920a46"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721A/VerifySignature.sol\":\"VerifySignature\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC721A/VerifySignature.sol\":{\"keccak256\":\"0x7b595fba7b304df2d793814bf6f1ead1687b6de712cdbf02113e57ba478df9b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1c72776be7d04ed5cf7f224d796db5ec4a48c9523c1367cc513c6476e7db1d\",\"dweb:/ipfs/QmanAvNztLiKWauT1Usjmfzm8kvs3iMgYBx1Q8JEZLg1ej\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"IERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721ABurnable compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721ABurnable compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/IERC721ABurnable.sol\":\"IERC721ABurnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"IERC721AQueryable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721AQueryable compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`"
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"explicitOwnershipOf(uint256)": "c23dc68f",
							"explicitOwnershipsOf(uint256[])": "5bbb2177",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokensOfOwner(address)": "8462151c",
							"tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721AQueryable compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/IERC721AQueryable.sol\":\"IERC721AQueryable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x55e6863d273b676d65797fee7aac1b520848a0e31c0dd2e5a29887457043b7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8477b7c9788e36787f79ef9b1580c46bdadc13da4c8ef85ce82d42a754743\",\"dweb:/ipfs/QmQvqKtF8YyJKqpEiNh1KkeC1Q5JmvEkQmP2ZCPYSW72BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							360
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 361,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 360,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								360
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							144
						]
					},
					"id": 145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 110,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 113,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 144,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 128,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 133,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 134,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 143,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 145,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							222
						]
					},
					"id": 223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 222,
							"linearizedBaseContracts": [
								222
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 156,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 165,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 222,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 222,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 222,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 222,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 222,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 222,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 223,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							465
						],
						"IERC721": [
							338
						]
					},
					"id": 339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 339,
							"sourceUnit": 466,
							"src": "133:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 227,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 465,
										"src": "271:7:3"
									},
									"id": 228,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 338,
							"linearizedBaseContracts": [
								338,
								465
							],
							"name": "IERC721",
							"nameLocation": "260:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 237,
									"name": "Transfer",
									"nameLocation": "384:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "393:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "415:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "435:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:3"
									},
									"src": "378:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 246,
									"name": "Approval",
									"nameLocation": "571:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "580:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "603:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "629:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:3"
									},
									"src": "565:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 255,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "803:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "826:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "852:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:3"
									},
									"src": "782:85:3"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "973:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:3"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:3"
									},
									"scope": 338,
									"src": "954:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1187:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:3"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1227:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:3"
									},
									"scope": 338,
									"src": "1170:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1844:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1866:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1911:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:3"
									},
									"scope": 338,
									"src": "1809:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2682:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2704:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2724:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:3"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:3"
									},
									"scope": 338,
									"src": "2647:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3301:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3323:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3343:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:3"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 338,
									"src": "3270:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3854:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3866:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:3"
									},
									"scope": 338,
									"src": "3837:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4239:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4257:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:3"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:3"
									},
									"scope": 338,
									"src": "4212:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4453:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:3"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4493:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:3"
									},
									"scope": 338,
									"src": "4432:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "4686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "4701:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "4742:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:3"
									},
									"scope": 338,
									"src": "4660:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 339,
							"src": "250:4500:3",
							"usedErrors": []
						}
					],
					"src": "108:4643:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							360
						]
					},
					"id": 361,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 341,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 360,
							"linearizedBaseContracts": [
								360
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 346,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 345,
												"id": 348,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 360,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 355,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 354,
												"id": 357,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 352,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 360,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 361,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
					"exportedSymbols": {
						"MerkleProof": [
							453
						]
					},
					"id": 454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 362,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MerkleProof",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 363,
								"nodeType": "StructuredDocumentation",
								"src": "143:656:5",
								"text": " @dev These functions deal with verification of Merkle Trees proofs.\n The proofs can be generated using the JavaScript library\n https://github.com/miguelmota/merkletreejs[merkletreejs].\n Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value."
							},
							"fullyImplemented": true,
							"id": 453,
							"linearizedBaseContracts": [
								453
							],
							"name": "MerkleProof",
							"nameLocation": "808:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "1281:57:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 377,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "1311:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															{
																"id": 378,
																"name": "leaf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "1318:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 376,
															"name": "processProof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "1298:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32[] memory,bytes32) pure returns (bytes32)"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1298:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 380,
														"name": "root",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "1327:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1298:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 375,
												"id": 382,
												"nodeType": "Return",
												"src": "1291:40:5"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "826:323:5",
										"text": " @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "1163:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1196:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1179:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 365,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1179:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 366,
													"nodeType": "ArrayTypeName",
													"src": "1179:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "1219:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1211:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "1241:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1233:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 370,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:82:5"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1275:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1275:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:6:5"
									},
									"scope": 453,
									"src": "1154:184:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "1781:570:5",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "computedHash",
														"nameLocation": "1799:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "1791:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 395,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1791:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 398,
												"initialValue": {
													"id": 397,
													"name": "leaf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 390,
													"src": "1814:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1791:27:5"
											},
											{
												"body": {
													"id": 436,
													"nodeType": "Block",
													"src": "1871:445:5",
													"statements": [
														{
															"assignments": [
																411
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 411,
																	"mutability": "mutable",
																	"name": "proofElement",
																	"nameLocation": "1893:12:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 436,
																	"src": "1885:20:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 410,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1885:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 415,
															"initialValue": {
																"baseExpression": {
																	"id": 412,
																	"name": "proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "1908:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																},
																"id": 414,
																"indexExpression": {
																	"id": 413,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "1914:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1908:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1885:31:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 416,
																	"name": "computedHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "1934:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 417,
																	"name": "proofElement",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1950:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1934:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 434,
																"nodeType": "Block",
																"src": "2138:168:5",
																"statements": [
																	{
																		"expression": {
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 427,
																				"name": "computedHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "2234:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 429,
																						"name": "proofElement",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 411,
																						"src": "2264:12:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 430,
																						"name": "computedHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 396,
																						"src": "2278:12:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 428,
																					"name": "_efficientHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "2249:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																						"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																					}
																				},
																				"id": 431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2249:42:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2234:57:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 433,
																		"nodeType": "ExpressionStatement",
																		"src": "2234:57:5"
																	}
																]
															},
															"id": 435,
															"nodeType": "IfStatement",
															"src": "1930:376:5",
															"trueBody": {
																"id": 426,
																"nodeType": "Block",
																"src": "1964:168:5",
																"statements": [
																	{
																		"expression": {
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 419,
																				"name": "computedHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "2060:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 421,
																						"name": "computedHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 396,
																						"src": "2090:12:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 422,
																						"name": "proofElement",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 411,
																						"src": "2104:12:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 420,
																					"name": "_efficientHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "2075:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																						"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																					}
																				},
																				"id": 423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2075:42:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2060:57:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 425,
																		"nodeType": "ExpressionStatement",
																		"src": "2060:57:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 403,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "1848:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 404,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "1852:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1852:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1848:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"initializationExpression": {
													"assignments": [
														400
													],
													"declarations": [
														{
															"constant": false,
															"id": 400,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1841:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 437,
															"src": "1833:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 399,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1833:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 402,
													"initialValue": {
														"hexValue": "30",
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1845:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1833:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1866:3:5",
														"subExpression": {
															"id": 407,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "1866:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 409,
													"nodeType": "ExpressionStatement",
													"src": "1866:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1828:488:5"
											},
											{
												"expression": {
													"id": 438,
													"name": "computedHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 396,
													"src": "2332:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 394,
												"id": 439,
												"nodeType": "Return",
												"src": "2325:19:5"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1344:340:5",
										"text": " @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "processProof",
									"nameLocation": "1698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1728:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1711:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 386,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1711:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 387,
													"nodeType": "ArrayTypeName",
													"src": "1711:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "1743:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1735:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 389,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:38:5"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1772:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:9:5"
									},
									"scope": 453,
									"src": "1689:662:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "2440:135:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2459:110:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2480:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2486:1:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2473:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2508:4:5",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "2514:1:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2501:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2501:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2501:15:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2529:30:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2548:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2554:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2538:9:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:21:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2529:5:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": false,
														"src": "2486:1:5",
														"valueSize": 1
													},
													{
														"declaration": 445,
														"isOffset": false,
														"isSlot": false,
														"src": "2514:1:5",
														"valueSize": 1
													},
													{
														"declaration": 448,
														"isOffset": false,
														"isSlot": false,
														"src": "2529:5:5",
														"valueSize": 1
													}
												],
												"id": 450,
												"nodeType": "InlineAssembly",
												"src": "2450:119:5"
											}
										]
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_efficientHash",
									"nameLocation": "2366:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2389:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2381:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 442,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2400:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2392:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 444,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2380:22:5"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2425:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 447,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:5"
									},
									"scope": 453,
									"src": "2357:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 454,
							"src": "800:1777:5",
							"usedErrors": []
						}
					],
					"src": "118:2460:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							465
						]
					},
					"id": 466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 455,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 456,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 465,
							"linearizedBaseContracts": [
								465
							],
							"name": "IERC165",
							"nameLocation": "415:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "801:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 458,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:6"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "844:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 461,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:6"
									},
									"scope": 465,
									"src": "774:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 466,
							"src": "405:447:6",
							"usedErrors": []
						}
					],
					"src": "100:753:6"
				},
				"id": 6
			},
			"ERC721A/INagaKid.sol": {
				"ast": {
					"absolutePath": "ERC721A/INagaKid.sol",
					"exportedSymbols": {
						"IERC721A": [
							1471
						],
						"IERC721ABurnable": [
							1484
						],
						"IERC721AQueryable": [
							1536
						],
						"INagaKid": [
							494
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 467,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "erc721a/contracts/IERC721A.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 1472,
							"src": "61:40:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/extensions/IERC721ABurnable.sol",
							"file": "erc721a/contracts/extensions/IERC721ABurnable.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 1485,
							"src": "103:59:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/extensions/IERC721AQueryable.sol",
							"file": "erc721a/contracts/extensions/IERC721AQueryable.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 1537,
							"src": "164:60:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 471,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1471,
										"src": "252:8:7"
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "252:8:7"
								},
								{
									"baseName": {
										"id": 473,
										"name": "IERC721AQueryable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1536,
										"src": "261:17:7"
									},
									"id": 474,
									"nodeType": "InheritanceSpecifier",
									"src": "261:17:7"
								}
							],
							"canonicalName": "INagaKid",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 494,
							"linearizedBaseContracts": [
								494,
								1536,
								1471
							],
							"name": "INagaKid",
							"nameLocation": "240:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d5abeb01",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "297:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:2:7"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "332:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:9:7"
									},
									"scope": 494,
									"src": "288:53:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa271e1a",
									"id": 486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isMinter",
									"nameLocation": "356:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "373:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "365:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "364:16:7"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "403:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "403:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:6:7"
									},
									"scope": 494,
									"src": "347:62:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a1448194",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "424:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "433:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "449:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "444:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:24:7"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:0:7"
									},
									"scope": 494,
									"src": "415:51:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 495,
							"src": "230:245:7",
							"usedErrors": [
								1268,
								1271,
								1274,
								1277,
								1280,
								1283,
								1286,
								1289,
								1292,
								1295,
								1298,
								1301,
								1304,
								1307,
								1493
							]
						}
					],
					"src": "33:444:7"
				},
				"id": 7
			},
			"ERC721A/MintNagaKids.sol": {
				"ast": {
					"absolutePath": "ERC721A/MintNagaKids.sol",
					"exportedSymbols": {
						"Context": [
							360
						],
						"IERC165": [
							465
						],
						"IERC20": [
							222
						],
						"IERC721": [
							338
						],
						"IERC721A": [
							1471
						],
						"IERC721ABurnable": [
							1484
						],
						"IERC721AQueryable": [
							1536
						],
						"INagaKid": [
							494
						],
						"MerkleProof": [
							453
						],
						"MintNagaKids": [
							1145
						],
						"Ownable": [
							104
						],
						"ReentrancyGuard": [
							144
						],
						"VerifySignature": [
							1262
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 223,
							"src": "61:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 339,
							"src": "119:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
							"id": 499,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 454,
							"src": "179:68:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 145,
							"src": "249:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 501,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 105,
							"src": "313:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC721A/INagaKid.sol",
							"file": "./INagaKid.sol",
							"id": 502,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 495,
							"src": "367:24:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC721A/VerifySignature.sol",
							"file": "./VerifySignature.sol",
							"id": 503,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1263,
							"src": "393:31:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 504,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "453:7:8"
									},
									"id": 505,
									"nodeType": "InheritanceSpecifier",
									"src": "453:7:8"
								},
								{
									"baseName": {
										"id": 506,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 144,
										"src": "462:15:8"
									},
									"id": 507,
									"nodeType": "InheritanceSpecifier",
									"src": "462:15:8"
								},
								{
									"baseName": {
										"id": 508,
										"name": "VerifySignature",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "479:15:8"
									},
									"id": 509,
									"nodeType": "InheritanceSpecifier",
									"src": "479:15:8"
								}
							],
							"canonicalName": "MintNagaKids",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1145,
							"linearizedBaseContracts": [
								1145,
								1262,
								144,
								104,
								360
							],
							"name": "MintNagaKids",
							"nameLocation": "437:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "f500cdfc",
									"id": 514,
									"mutability": "constant",
									"name": "WHITELIST_MINT_ROUND",
									"nameLocation": "528:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "504:80:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 510,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "504:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "57484954454c4953545f4d494e545f524f554e44",
												"id": 512,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "561:22:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba",
													"typeString": "literal_string \"WHITELIST_MINT_ROUND\""
												},
												"value": "WHITELIST_MINT_ROUND"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba",
													"typeString": "literal_string \"WHITELIST_MINT_ROUND\""
												}
											],
											"id": 511,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "551:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 513,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "551:33:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "24c37a85",
									"id": 519,
									"mutability": "constant",
									"name": "NAGA_HOLDER_MINT_ROUND",
									"nameLocation": "685:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "661:84:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 515,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4e4147415f484f4c4445525f4d494e545f524f554e44",
												"id": 517,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "720:24:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db3",
													"typeString": "literal_string \"NAGA_HOLDER_MINT_ROUND\""
												},
												"value": "NAGA_HOLDER_MINT_ROUND"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db3",
													"typeString": "literal_string \"NAGA_HOLDER_MINT_ROUND\""
												}
											],
											"id": 516,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "710:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "710:35:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0a25dea9",
									"id": 522,
									"mutability": "constant",
									"name": "DEFAULT",
									"nameLocation": "850:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "826:100:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 520,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "826:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 521,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "860:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x0000000000000000000000000000000000000000000000000000000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e02023a1",
									"id": 527,
									"mutability": "constant",
									"name": "WITHDRAW_ROLE",
									"nameLocation": "963:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "939:66:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 523,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "939:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "57495448445241575f524f4c45",
												"id": 525,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "989:15:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec",
													"typeString": "literal_string \"WITHDRAW_ROLE\""
												},
												"value": "WITHDRAW_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec",
													"typeString": "literal_string \"WITHDRAW_ROLE\""
												}
											],
											"id": 524,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "979:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 526,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "979:26:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df4e5881",
									"id": 530,
									"mutability": "mutable",
									"name": "nagaKidContract",
									"nameLocation": "1030:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1014:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INagaKid_$494",
										"typeString": "contract INagaKid"
									},
									"typeName": {
										"id": 529,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 528,
											"name": "INagaKid",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 494,
											"src": "1014:8:8"
										},
										"referencedDeclaration": 494,
										"src": "1014:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INagaKid_$494",
											"typeString": "contract INagaKid"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ef5fe79f",
									"id": 532,
									"mutability": "mutable",
									"name": "currentMintRound",
									"nameLocation": "1067:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1052:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 531,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1052:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2eb4a7ab",
									"id": 534,
									"mutability": "mutable",
									"name": "merkleRoot",
									"nameLocation": "1105:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1090:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 533,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1090:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a4435dfd",
									"id": 537,
									"mutability": "mutable",
									"name": "isPublicMintOpen",
									"nameLocation": "1136:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1124:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 535,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1124:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 536,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1155:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8907f3fa",
									"id": 540,
									"mutability": "mutable",
									"name": "isPrivateMintOpen",
									"nameLocation": "1179:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1167:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 538,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1167:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 539,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1199:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "238ac933",
									"id": 542,
									"mutability": "mutable",
									"name": "signer",
									"nameLocation": "1228:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1213:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 541,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1213:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_isUserMinted",
									"nameLocation": "1297:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1243:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(bytes32 => bool))"
									},
									"typeName": {
										"id": 547,
										"keyType": {
											"id": 543,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1251:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1243:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(bytes32 => bool))"
										},
										"valueType": {
											"id": 546,
											"keyType": {
												"id": 544,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1270:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "1262:24:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
												"typeString": "mapping(bytes32 => bool)"
											},
											"valueType": {
												"id": 545,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1281:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 554,
									"mutability": "mutable",
									"name": "_userMintedAmount",
									"nameLocation": "1374:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1317:74:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(bytes32 => uint256))"
									},
									"typeName": {
										"id": 553,
										"keyType": {
											"id": 549,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1325:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1317:47:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(bytes32 => uint256))"
										},
										"valueType": {
											"id": 552,
											"keyType": {
												"id": 550,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1344:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "1336:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"valueType": {
												"id": 551,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1355:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 558,
									"mutability": "mutable",
									"name": "_isPublicMinted",
									"nameLocation": "1432:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1398:49:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 557,
										"keyType": {
											"id": 555,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1406:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1398:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 556,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1417:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "e9e607753e80542a9021d5149990f18919907f0136fad424eaac3d15056ccf6e",
									"id": 566,
									"name": "PrivateMinted",
									"nameLocation": "1477:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1507:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1491:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1521:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1513:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1537:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1529:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:57:8"
									},
									"src": "1471:77:8"
								},
								{
									"anonymous": false,
									"eventSelector": "c1a73b31b32801ebbb4cae30b73eae4345be9f2915ea60306383c245ef8fac44",
									"id": 574,
									"name": "PublicMinted",
									"nameLocation": "1560:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1589:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1573:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1603:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1595:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1619:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1611:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1572:57:8"
									},
									"src": "1554:76:8"
								},
								{
									"anonymous": false,
									"eventSelector": "abdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d973",
									"id": 580,
									"name": "NagaKidContractChanged",
									"nameLocation": "1642:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"indexed": false,
												"mutability": "mutable",
												"name": "nagaKidBefore",
												"nameLocation": "1673:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "1665:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"indexed": false,
												"mutability": "mutable",
												"name": "nagaKidAfter",
												"nameLocation": "1696:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "1688:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1664:45:8"
									},
									"src": "1636:74:8"
								},
								{
									"anonymous": false,
									"eventSelector": "123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe",
									"id": 586,
									"name": "MerkleRootChanged",
									"nameLocation": "1722:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"indexed": false,
												"mutability": "mutable",
												"name": "merkleRootBefore",
												"nameLocation": "1748:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "1740:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 581,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"indexed": false,
												"mutability": "mutable",
												"name": "merkleRootAfter",
												"nameLocation": "1774:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "1766:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 583,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1739:51:8"
									},
									"src": "1716:75:8"
								},
								{
									"anonymous": false,
									"eventSelector": "521ec96875ca228cd2fc1dbd4c927a34328c9ce1a83bcb8c1f633f012c90d785",
									"id": 592,
									"name": "RoundChanged",
									"nameLocation": "1803:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundBefore",
												"nameLocation": "1824:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1816:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 587,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1816:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundAfter",
												"nameLocation": "1845:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1837:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 589,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1815:41:8"
									},
									"src": "1797:60:8"
								},
								{
									"anonymous": false,
									"eventSelector": "eeb293e1f8f3a9db91ade748726387ed1352ca78f5430c5f06fe3d1e1ad50579",
									"id": 598,
									"name": "SignerChanged",
									"nameLocation": "1869:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"mutability": "mutable",
												"name": "signerBefore",
												"nameLocation": "1891:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1883:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": false,
												"mutability": "mutable",
												"name": "signerAfter",
												"nameLocation": "1912:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1904:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:42:8"
									},
									"src": "1863:62:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 606,
									"name": "Withdraw",
									"nameLocation": "1937:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1954:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1946:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": false,
												"mutability": "mutable",
												"name": "balanceOFContract",
												"nameLocation": "1966:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1958:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1994:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1986:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:59:8"
									},
									"src": "1931:74:8"
								},
								{
									"anonymous": false,
									"eventSelector": "b818a975f91276df8ba59329becbc23c793df0d503c19ac296c3c372a1fa0461",
									"id": 616,
									"name": "WithdrawCurrency",
									"nameLocation": "2017:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2042:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2034:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "2053:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2045:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"indexed": false,
												"mutability": "mutable",
												"name": "balanceOfContract",
												"nameLocation": "2070:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2062:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2096:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2088:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2033:73:8"
									},
									"src": "2011:96:8"
								},
								{
									"anonymous": false,
									"eventSelector": "0127a8d3f57942833f6930572bce52ad882683e36eeb5830d199d3fa4bfa9467",
									"id": 626,
									"name": "WithdrawNFT",
									"nameLocation": "2119:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2139:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2131:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2131:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"indexed": false,
												"mutability": "mutable",
												"name": "NFT",
												"nameLocation": "2150:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2142:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2162:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2154:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2154:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2179:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2171:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2130:59:8"
									},
									"src": "2113:77:8"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "2274:133:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "_nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "2314:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														],
														"id": 636,
														"name": "setNagaKidContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "2295:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_INagaKid_$494_$returns$__$",
															"typeString": "function (contract INagaKid)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2295:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "2295:36:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "_merkleRoot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "2356:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 640,
														"name": "setMerkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "2342:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2342:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "2342:26:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 645,
															"name": "_signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "2389:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 644,
														"name": "setSigner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "2379:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2379:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "2379:18:8"
											}
										]
									},
									"id": 649,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "_nagaKidContract",
												"nameLocation": "2219:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2210:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INagaKid_$494",
													"typeString": "contract INagaKid"
												},
												"typeName": {
													"id": 628,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 627,
														"name": "INagaKid",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 494,
														"src": "2210:8:8"
													},
													"referencedDeclaration": 494,
													"src": "2210:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKid_$494",
														"typeString": "contract INagaKid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "2244:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2236:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "_merkleRoot",
												"nameLocation": "2261:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2253:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 632,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:64:8"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2274:0:8"
									},
									"scope": 1145,
									"src": "2198:209:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "2479:224:8",
										"statements": [
											{
												"assignments": [
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "nagaKidBefore",
														"nameLocation": "2498:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "2490:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 657,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2490:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "2522:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														],
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2514:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 659,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2514:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2514:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2490:48:8"
											},
											{
												"expression": {
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 664,
														"name": "nagaKidContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "2549:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INagaKid_$494",
															"typeString": "contract INagaKid"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 665,
														"name": "_nagaKid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2567:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INagaKid_$494",
															"typeString": "contract INagaKid"
														}
													},
													"src": "2549:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKid_$494",
														"typeString": "contract INagaKid"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "2549:26:8"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "nagaKidAfter",
														"nameLocation": "2594:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "2586:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 668,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2586:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"arguments": [
														{
															"id": 672,
															"name": "_nagaKid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "2617:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														],
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2609:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 670,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2609:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2609:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2586:40:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 676,
															"name": "nagaKidBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "2667:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 677,
															"name": "nagaKidAfter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "2682:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 675,
														"name": "NagaKidContractChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "2644:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2644:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "EmitStatement",
												"src": "2639:56:8"
											}
										]
									},
									"functionSelector": "9e6c8855",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 655,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 654,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2469:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2469:9:8"
										}
									],
									"name": "setNagaKidContract",
									"nameLocation": "2424:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "_nagaKid",
												"nameLocation": "2452:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "2443:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INagaKid_$494",
													"typeString": "contract INagaKid"
												},
												"typeName": {
													"id": 651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 650,
														"name": "INagaKid",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 494,
														"src": "2443:8:8"
													},
													"referencedDeclaration": 494,
													"src": "2443:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKid_$494",
														"typeString": "contract INagaKid"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:19:8"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2479:0:8"
									},
									"scope": 1145,
									"src": "2415:288:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2762:146:8",
										"statements": [
											{
												"assignments": [
													689
												],
												"declarations": [
													{
														"constant": false,
														"id": 689,
														"mutability": "mutable",
														"name": "_roundBefore",
														"nameLocation": "2781:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "2773:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 688,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2773:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"id": 690,
													"name": "currentMintRound",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 532,
													"src": "2796:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2773:39:8"
											},
											{
												"expression": {
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 692,
														"name": "currentMintRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "2823:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 693,
														"name": "_round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "2842:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2823:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "2823:25:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 697,
															"name": "_roundBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "2879:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 698,
															"name": "_round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "2893:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 696,
														"name": "RoundChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "2866:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2866:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "EmitStatement",
												"src": "2861:39:8"
											}
										]
									},
									"functionSelector": "ff05fe4a",
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 686,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 685,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2752:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2752:9:8"
										}
									],
									"name": "setRound",
									"nameLocation": "2720:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "_round",
												"nameLocation": "2737:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2729:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 682,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:16:8"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2762:0:8"
									},
									"scope": 1145,
									"src": "2711:197:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "2969:131:8",
										"statements": [
											{
												"assignments": [
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "_signerBefore",
														"nameLocation": "2988:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "2980:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 709,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2980:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"id": 711,
													"name": "signer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 542,
													"src": "3004:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2980:30:8"
											},
											{
												"expression": {
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 713,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "3021:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 714,
														"name": "_signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "3030:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3021:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "3021:16:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 718,
															"name": "_signerBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "3069:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "_signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "3084:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 717,
														"name": "SignerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "3055:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3055:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "EmitStatement",
												"src": "3050:42:8"
											}
										]
									},
									"functionSelector": "6c19e783",
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 707,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 706,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2959:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2959:9:8"
										}
									],
									"name": "setSigner",
									"nameLocation": "2925:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "2943:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "2935:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2935:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2934:17:8"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:0:8"
									},
									"scope": 1145,
									"src": "2916:184:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "3169:159:8",
										"statements": [
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "_merkleRootBefore",
														"nameLocation": "3188:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "3180:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 730,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3180:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 733,
												"initialValue": {
													"id": 732,
													"name": "merkleRoot",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 534,
													"src": "3208:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3180:38:8"
											},
											{
												"expression": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 734,
														"name": "merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "3229:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 735,
														"name": "_merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "3242:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3229:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "3229:24:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 739,
															"name": "_merkleRootBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "3289:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 740,
															"name": "_merkleRoot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "3308:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 738,
														"name": "MerkleRootChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "3271:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3271:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "EmitStatement",
												"src": "3266:54:8"
											}
										]
									},
									"functionSelector": "7cb64759",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 728,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 727,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3159:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3159:9:8"
										}
									],
									"name": "setMerkleRoot",
									"nameLocation": "3117:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "_merkleRoot",
												"nameLocation": "3139:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3131:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 724,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:21:8"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3169:0:8"
									},
									"scope": 1145,
									"src": "3108:220:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "3447:884:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 757,
																"name": "isPrivateMintOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "3466:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3487:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3466:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726976617465206d696e74206973206e6f74206f70656e2e",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3492:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44088db98f64bd7f2c584eff446b56f0c15b8c18215ca7ced6e447e24db3d2bb",
																"typeString": "literal_string \"Private mint is not open.\""
															},
															"value": "Private mint is not open."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44088db98f64bd7f2c584eff446b56f0c15b8c18215ca7ced6e447e24db3d2bb",
																"typeString": "literal_string \"Private mint is not open.\""
															}
														],
														"id": 756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3458:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3458:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "3458:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 764,
																"name": "_round",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "3539:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 765,
																"name": "DEFAULT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "3549:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "3539:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74206973206e6f7420617070726f7665642e",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3557:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae",
																"typeString": "literal_string \"Mint is not approved.\""
															},
															"value": "Mint is not approved."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae",
																"typeString": "literal_string \"Mint is not approved.\""
															}
														],
														"id": 763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3531:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3531:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "3531:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 771,
																"name": "currentMintRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "3600:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 772,
																"name": "_round",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "3620:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "3600:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420617265206e6f7420696e2074686973206d696e74696e6720726f756e642e",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3628:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265",
																"typeString": "literal_string \"Contract are not in this minting round.\""
															},
															"value": "Contract are not in this minting round."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265",
																"typeString": "literal_string \"Contract are not in this minting round.\""
															}
														],
														"id": 770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3592:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3592:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "3592:78:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 778,
																		"name": "getTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "3689:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3689:16:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 780,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "3708:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3689:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 782,
																	"name": "getMaxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "3718:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3718:14:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3689:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f76657220737570706c79",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3734:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																"typeString": "literal_string \"Over supply\""
															},
															"value": "Over supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																"typeString": "literal_string \"Over supply\""
															}
														],
														"id": 777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3681:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3681:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "3681:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 790,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3780:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3780:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 792,
																		"name": "_round",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "3791:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 789,
																	"name": "isUserMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "3767:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (address,bytes32) view returns (bool)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3767:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3802:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "3767:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752061726520616c7265616479206d696e7465642e",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3809:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															},
															"value": "You are already minted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															}
														],
														"id": 788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3759:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3759:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "3759:76:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 804,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3887:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MintNagaKids_$1145",
																				"typeString": "contract MintNagaKids"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MintNagaKids_$1145",
																				"typeString": "contract MintNagaKids"
																			}
																		],
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3879:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 802,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3879:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3879:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 800,
																	"name": "nagaKidContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "3854:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INagaKid_$494",
																		"typeString": "contract INagaKid"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isMinter",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 486,
																"src": "3854:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3854:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374204d696e74206973206e6f7420617070726f7665642e",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3895:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79",
																"typeString": "literal_string \"Contract Mint is not approved.\""
															},
															"value": "Contract Mint is not approved."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79",
																"typeString": "literal_string \"Contract Mint is not approved.\""
															}
														],
														"id": 799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3846:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "3846:82:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 813,
																	"name": "_proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "3966:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	}
																},
																{
																	"id": 814,
																	"name": "merkleRoot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "3974:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 818,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4013:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 819,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4013:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 820,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "4025:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 821,
																					"name": "_round",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 751,
																					"src": "4034:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"expression": {
																					"id": 816,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "3996:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "3996:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3996:45:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 815,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "3986:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3986:56:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 811,
																	"name": "MerkleProof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "3947:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_MerkleProof_$453_$",
																		"typeString": "type(library MerkleProof)"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "verify",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 384,
																"src": "3947:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3947:96:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a65642057686974656c6973744d696e74205468697320557365722e",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4045:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517",
																"typeString": "literal_string \"Unauthorized WhitelistMint This User.\""
															},
															"value": "Unauthorized WhitelistMint This User."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517",
																"typeString": "literal_string \"Unauthorized WhitelistMint This User.\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3939:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3939:146:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "3939:146:8"
											},
											{
												"expression": {
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 828,
																"name": "_isUserMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "4098:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(bytes32 => bool))"
																}
															},
															"id": 832,
															"indexExpression": {
																"expression": {
																	"id": 829,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4112:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4112:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4098:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 833,
														"indexExpression": {
															"id": 831,
															"name": "_round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "4124:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4098:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4134:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4098:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "4098:40:8"
											},
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 837,
																"name": "_userMintedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "4149:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(bytes32 => uint256))"
																}
															},
															"id": 841,
															"indexExpression": {
																"expression": {
																	"id": 838,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4167:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4167:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4149:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 842,
														"indexExpression": {
															"id": 840,
															"name": "_round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "4179:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4149:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 843,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "4190:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4149:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "4149:48:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 849,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4235:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4235:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4246:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 846,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "4210:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 493,
														"src": "4210:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4210:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "4210:44:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 855,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4286:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4286:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4298:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 858,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4307:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4307:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 854,
														"name": "PrivateMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "4272:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "EmitStatement",
												"src": "4267:56:8"
											}
										]
									},
									"functionSelector": "f6b48e55",
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 754,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 753,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "3434:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3434:12:8"
										}
									],
									"name": "allowlistMint",
									"nameLocation": "3345:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "_proof",
												"nameLocation": "3378:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "3359:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 745,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3359:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 746,
													"nodeType": "ArrayTypeName",
													"src": "3359:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3394:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "3386:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "_round",
												"nameLocation": "3411:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "3403:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 750,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:60:8"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3447:0:8"
									},
									"scope": 1145,
									"src": "3336:995:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "4408:746:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 871,
																"name": "isPublicMintOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "4429:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4449:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "4429:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5075626c6963206d696e74206973206e6f74206f70656e2e",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4455:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_507f035c670b11e911e1eb5937077419dc7c16add6610aed12b3d2f661e88ec0",
																"typeString": "literal_string \"Public mint is not open.\""
															},
															"value": "Public mint is not open."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_507f035c670b11e911e1eb5937077419dc7c16add6610aed12b3d2f661e88ec0",
																"typeString": "literal_string \"Public mint is not open.\""
															}
														],
														"id": 870,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4421:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4421:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "4421:61:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 878,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "4501:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "4501:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 880,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4514:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4514:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4501:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6861686120436f6e74726163742063616e27742063616c6c206d65",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4526:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734",
																"typeString": "literal_string \"haha Contract can't call me\""
															},
															"value": "haha Contract can't call me"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734",
																"typeString": "literal_string \"haha Contract can't call me\""
															}
														],
														"id": 877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4493:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4493:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "4493:63:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 888,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4590:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4590:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 887,
																	"name": "isPublicMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "4575:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4575:26:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4605:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "4575:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752061726520616c7265616479206d696e7465642e",
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4611:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															},
															"value": "You are already minted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															}
														],
														"id": 886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4567:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "4567:70:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 901,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4760:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MintNagaKids_$1145",
																				"typeString": "contract MintNagaKids"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MintNagaKids_$1145",
																				"typeString": "contract MintNagaKids"
																			}
																		],
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4752:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 899,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4752:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4752:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 897,
																	"name": "nagaKidContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "4727:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INagaKid_$494",
																		"typeString": "contract INagaKid"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isMinter",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 486,
																"src": "4727:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4727:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374204d696e74206973206e6f7420617070726f7665642e",
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4768:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79",
																"typeString": "literal_string \"Contract Mint is not approved.\""
															},
															"value": "Contract Mint is not approved."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79",
																"typeString": "literal_string \"Contract Mint is not approved.\""
															}
														],
														"id": 896,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4719:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4719:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "4719:82:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 909,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4827:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 910,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4834:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4834:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 912,
																	"name": "_sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "4845:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 908,
																"name": "verify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "4820:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,bytes memory) view returns (bool)"
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4820:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a6564205075626c69634d696e74205468697320557365722e",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4852:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43",
																"typeString": "literal_string \"Unauthorized PublicMint This User.\""
															},
															"value": "Unauthorized PublicMint This User."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43",
																"typeString": "literal_string \"Unauthorized PublicMint This User.\""
															}
														],
														"id": 907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4812:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4812:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "4812:77:8"
											},
											{
												"assignments": [
													918
												],
												"declarations": [
													{
														"constant": false,
														"id": 918,
														"mutability": "mutable",
														"name": "_amount",
														"nameLocation": "4956:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "4948:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4948:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"hexValue": "31",
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4966:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4948:19:8"
											},
											{
												"expression": {
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 921,
															"name": "_isPublicMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "4981:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 924,
														"indexExpression": {
															"expression": {
																"id": 922,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4997:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4997:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4981:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5011:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4981:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "4981:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 931,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5051:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5051:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "5062:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 928,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "5026:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 493,
														"src": "5026:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5026:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "5026:44:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 937,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5109:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5109:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "5120:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 940,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5128:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5128:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "PublicMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "5096:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5096:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "EmitStatement",
												"src": "5091:53:8"
											}
										]
									},
									"functionSelector": "de6892c8",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 868,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 867,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "4395:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4395:12:8"
										}
									],
									"name": "publicMint",
									"nameLocation": "4348:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "_sig",
												"nameLocation": "4374:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "4359:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 864,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4359:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4358:21:8"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4408:0:8"
									},
									"scope": 1145,
									"src": "4339:815:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "5226:48:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 952,
														"name": "_isPublicMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "5244:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 954,
													"indexExpression": {
														"id": 953,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "5260:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5244:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 951,
												"id": 955,
												"nodeType": "Return",
												"src": "5237:29:8"
											}
										]
									},
									"functionSelector": "f055c7a9",
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPublicMinted",
									"nameLocation": "5171:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "5194:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "5186:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5186:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5185:15:8"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "5221:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5221:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5220:6:8"
									},
									"scope": 1145,
									"src": "5162:112:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "5330:290:8",
										"statements": [
											{
												"assignments": [
													965
												],
												"declarations": [
													{
														"constant": false,
														"id": 965,
														"mutability": "mutable",
														"name": "balanceOFContract",
														"nameLocation": "5346:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 999,
														"src": "5341:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 964,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5341:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 971,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 968,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5374:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MintNagaKids_$1145",
																	"typeString": "contract MintNagaKids"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MintNagaKids_$1145",
																	"typeString": "contract MintNagaKids"
																}
															],
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5366:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 966,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5366:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5366:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "5366:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5341:46:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 973,
																"name": "balanceOFContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "5406:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5426:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5406:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742042616c616e6365",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5429:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															},
															"value": "Insufficient Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															}
														],
														"id": 972,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5398:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5398:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "5398:54:8"
											},
											{
												"assignments": [
													980,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "status",
														"nameLocation": "5469:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 999,
														"src": "5464:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 979,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5464:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 987,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5516:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 981,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "5480:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5480:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 983,
																"name": "balanceOFContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "5496:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5480:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5463:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 989,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "5538:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5530:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5530:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "5530:15:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 993,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "5572:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 994,
															"name": "balanceOFContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "5577:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 995,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5596:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5596:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 992,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5563:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5563:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "EmitStatement",
												"src": "5558:54:8"
											}
										]
									},
									"functionSelector": "51cff8d9",
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 962,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 961,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5320:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5320:9:8"
										}
									],
									"name": "withdraw",
									"nameLocation": "5291:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5308:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5300:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5300:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:13:8"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5330:0:8"
									},
									"scope": 1145,
									"src": "5282:338:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "5702:303:8",
										"statements": [
											{
												"assignments": [
													1010
												],
												"declarations": [
													{
														"constant": false,
														"id": 1010,
														"mutability": "mutable",
														"name": "balanceOfContract",
														"nameLocation": "5718:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "5713:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1009,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5713:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1020,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1017,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5774:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MintNagaKids_$1145",
																		"typeString": "contract MintNagaKids"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MintNagaKids_$1145",
																		"typeString": "contract MintNagaKids"
																	}
																],
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5766:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1015,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5766:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5766:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1012,
																	"name": "_currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "5745:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1011,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "5738:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5738:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 179,
														"src": "5738:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5738:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5713:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1022,
																"name": "balanceOfContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "5799:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5819:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5799:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742042616c616e6365",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5822:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															},
															"value": "Insufficient Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5791:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5791:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "5791:54:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1032,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "5883:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "balanceOfContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "5888:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1029,
																	"name": "_currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "5863:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1028,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "5856:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5856:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "5856:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5856:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "5856:50:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1037,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "5949:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1038,
															"name": "_currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "5953:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "balanceOfContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "5963:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1040,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5981:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5981:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1036,
														"name": "WithdrawCurrency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "5932:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5932:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "EmitStatement",
												"src": "5927:70:8"
											}
										]
									},
									"functionSelector": "8407ecc4",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1007,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1006,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5692:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5692:9:8"
										}
									],
									"name": "withdrawCurrency",
									"nameLocation": "5637:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5662:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "5654:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5654:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "_currency",
												"nameLocation": "5674:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "5666:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5666:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5653:31:8"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5702:0:8"
									},
									"scope": 1145,
									"src": "5628:377:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "6094:262:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1061,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "6135:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1058,
																				"name": "_NFT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "6121:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1057,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "6113:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$338_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6113:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$338",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 271,
																	"src": "6113:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6113:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1065,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6156:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MintNagaKids_$1145",
																			"typeString": "contract MintNagaKids"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MintNagaKids_$1145",
																			"typeString": "contract MintNagaKids"
																		}
																	],
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6148:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1063,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6148:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6148:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6113:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e7472616374",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6163:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32",
																"typeString": "literal_string \"This tokenId is not owned by contract\""
															},
															"value": "This tokenId is not owned by contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32",
																"typeString": "literal_string \"This tokenId is not owned by contract\""
															}
														],
														"id": 1056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6105:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6105:98:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "6105:98:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1077,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6255:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MintNagaKids_$1145",
																		"typeString": "contract MintNagaKids"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MintNagaKids_$1145",
																		"typeString": "contract MintNagaKids"
																	}
																],
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6247:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1075,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6247:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6247:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "6262:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "6267:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1072,
																	"name": "_NFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "6224:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1071,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "6216:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$338_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6216:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$338",
																"typeString": "contract IERC721"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 293,
														"src": "6216:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6216:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "6216:60:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1084,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "6314:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "_NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "6318:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "6323:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1087,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6332:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6332:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1083,
														"name": "WithdrawNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "6302:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6302:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "EmitStatement",
												"src": "6297:51:8"
											}
										]
									},
									"functionSelector": "bff863ec",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1054,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1053,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6084:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6084:9:8"
										}
									],
									"name": "withdrawNFT",
									"nameLocation": "6022:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6042:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "6034:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6034:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "_NFT",
												"nameLocation": "6054:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "6046:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6046:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "6067:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "6059:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6059:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6033:43:8"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6094:0:8"
									},
									"scope": 1145,
									"src": "6013:343:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "6442:54:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1101,
															"name": "_isUserMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "6460:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(bytes32 => bool))"
															}
														},
														"id": 1103,
														"indexExpression": {
															"id": 1102,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "6474:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6460:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 1105,
													"indexExpression": {
														"id": 1104,
														"name": "_round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "6481:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6460:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1100,
												"id": 1106,
												"nodeType": "Return",
												"src": "6453:35:8"
											}
										]
									},
									"functionSelector": "ffdc6129",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUserMinted",
									"nameLocation": "6373:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6394:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "6386:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6386:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "_round",
												"nameLocation": "6408:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "6400:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1095,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6400:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:30:8"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "6436:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1098,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6436:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6435:6:8"
									},
									"scope": 1145,
									"src": "6364:132:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "6589:58:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1117,
															"name": "_userMintedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "6607:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(bytes32 => uint256))"
															}
														},
														"id": 1119,
														"indexExpression": {
															"id": 1118,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "6625:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6607:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1121,
													"indexExpression": {
														"id": 1120,
														"name": "_round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "6632:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6607:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1116,
												"id": 1122,
												"nodeType": "Return",
												"src": "6600:39:8"
											}
										]
									},
									"functionSelector": "b5abafa1",
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userMintedAmount",
									"nameLocation": "6513:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6538:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "6530:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6530:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "_round",
												"nameLocation": "6552:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "6544:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6529:30:8"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "6580:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6580:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6579:9:8"
									},
									"scope": 1145,
									"src": "6504:143:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "6711:55:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1129,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "6729:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1322,
														"src": "6729:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6729:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1128,
												"id": 1132,
												"nodeType": "Return",
												"src": "6722:36:8"
											}
										]
									},
									"functionSelector": "c4e41b22",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalSupply",
									"nameLocation": "6664:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6678:2:8"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "6702:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6702:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6701:9:8"
									},
									"scope": 1145,
									"src": "6655:111:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "6828:53:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1139,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "6846:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "maxSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 479,
														"src": "6846:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6846:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1142,
												"nodeType": "Return",
												"src": "6839:34:8"
											}
										]
									},
									"functionSelector": "4c0f38c2",
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxSupply",
									"nameLocation": "6783:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6795:2:8"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "6819:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6819:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6818:9:8"
									},
									"scope": 1145,
									"src": "6774:107:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1146,
							"src": "428:6458:8",
							"usedErrors": []
						}
					],
					"src": "33:6855:8"
				},
				"id": 8
			},
			"ERC721A/VerifySignature.sol": {
				"ast": {
					"absolutePath": "ERC721A/VerifySignature.sol",
					"exportedSymbols": {
						"VerifySignature": [
							1262
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1147,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VerifySignature",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1262,
							"linearizedBaseContracts": [
								1262
							],
							"name": "VerifySignature",
							"nameLocation": "70:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "184:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1157,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "229:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1160,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "244:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VerifySignature_$1262",
																				"typeString": "contract VerifySignature"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VerifySignature_$1262",
																				"typeString": "contract VerifySignature"
																			}
																		],
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "236:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1158,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "236:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "236:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1155,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "212:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "212:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "212:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1154,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "202:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "202:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1153,
												"id": 1164,
												"nodeType": "Return",
												"src": "195:56:9"
											}
										]
									},
									"functionSelector": "1f5ac1b2",
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMessageHash",
									"nameLocation": "108:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "141:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "133:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:31:9"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "175:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:9:9"
									},
									"scope": 1262,
									"src": "99:160:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "384:377:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "650:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 1177,
																	"name": "_messageHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "707:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1174,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "611:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "611:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "611:127:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1173,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "583:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "583:170:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1172,
												"id": 1180,
												"nodeType": "Return",
												"src": "563:190:9"
											}
										]
									},
									"functionSelector": "fa540801",
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthSignedMessageHash",
									"nameLocation": "276:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "_messageHash",
												"nameLocation": "308:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "300:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1167,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:22:9"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "370:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1170,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:9:9"
									},
									"scope": 1262,
									"src": "267:494:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "902:217:9",
										"statements": [
											{
												"assignments": [
													1194
												],
												"declarations": [
													{
														"constant": false,
														"id": 1194,
														"mutability": "mutable",
														"name": "messageHash",
														"nameLocation": "921:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1212,
														"src": "913:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1193,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "913:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1198,
												"initialValue": {
													"arguments": [
														{
															"id": 1196,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "950:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1195,
														"name": "getMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "935:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address) view returns (bytes32)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "913:43:9"
											},
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "ethSignedMessageHash",
														"nameLocation": "975:20:9",
														"nodeType": "VariableDeclaration",
														"scope": 1212,
														"src": "967:28:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1199,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "967:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1204,
												"initialValue": {
													"arguments": [
														{
															"id": 1202,
															"name": "messageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "1022:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1201,
														"name": "getEthSignedMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "998:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "967:67:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1206,
																"name": "ethSignedMessageHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "1068:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1207,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "1090:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1205,
															"name": "recoverSigner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "1054:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
																"typeString": "function (bytes32,bytes memory) pure returns (address)"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1054:46:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1209,
														"name": "_signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "1104:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1054:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1192,
												"id": 1211,
												"nodeType": "Return",
												"src": "1047:64:9"
											}
										]
									},
									"functionSelector": "42920a46",
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "778:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "803:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "795:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "829:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "821:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "858:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "845:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1187,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "845:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:90:9"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "896:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "896:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "895:6:9"
									},
									"scope": 1262,
									"src": "769:350:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "1261:140:9",
										"statements": [
											{
												"assignments": [
													1223,
													1225,
													1227
												],
												"declarations": [
													{
														"constant": false,
														"id": 1223,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "1281:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "1273:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1222,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1273:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "1292:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "1284:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1224,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1284:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "1301:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "1295:7:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1226,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1295:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1231,
												"initialValue": {
													"arguments": [
														{
															"id": 1229,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "1321:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1228,
														"name": "splitSignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "1306:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
															"typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
														"typeString": "tuple(bytes32,bytes32,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1272:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1233,
															"name": "_ethSignedMessageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "1362:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1234,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "1385:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1235,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "1388:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1236,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "1391:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1232,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "1352:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1221,
												"id": 1238,
												"nodeType": "Return",
												"src": "1345:48:9"
											}
										]
									},
									"functionSelector": "97aba7f9",
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recoverSigner",
									"nameLocation": "1136:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "_ethSignedMessageHash",
												"nameLocation": "1168:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1160:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1213:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1200:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1200:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:81:9"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1252:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:9:9"
									},
									"scope": 1262,
									"src": "1127:274:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "1585:715:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1252,
																	"name": "sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "1604:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1604:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3635",
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1618:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65_by_1",
																	"typeString": "int_const 65"
																},
																"value": "65"
															},
															"src": "1604:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1622:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
																"typeString": "literal_string \"invalid signature length\""
															},
															"value": "invalid signature length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
																"typeString": "literal_string \"invalid signature length\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1596:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1596:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "1596:53:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1671:580:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2038:24:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "2053:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2058:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2049:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2049:12:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2043:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:19:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2038:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2108:24:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "2123:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2128:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2119:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2119:12:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2113:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:19:9"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nodeType": "YulIdentifier",
																	"src": "2108:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2207:33:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "sig",
																						"nodeType": "YulIdentifier",
																						"src": "2230:3:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2235:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2226:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2226:12:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2220:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:19:9"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "2212:4:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2212:28:9"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nodeType": "YulIdentifier",
																	"src": "2207:1:9"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1245,
														"isOffset": false,
														"isSlot": false,
														"src": "2038:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1247,
														"isOffset": false,
														"isSlot": false,
														"src": "2108:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1242,
														"isOffset": false,
														"isSlot": false,
														"src": "2053:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1242,
														"isOffset": false,
														"isSlot": false,
														"src": "2123:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1242,
														"isOffset": false,
														"isSlot": false,
														"src": "2230:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1249,
														"isOffset": false,
														"isSlot": false,
														"src": "2207:1:9",
														"valueSize": 1
													}
												],
												"id": 1259,
												"nodeType": "InlineAssembly",
												"src": "1662:589:9"
											}
										]
									},
									"functionSelector": "a7bb5803",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "splitSignature",
									"nameLocation": "1418:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1446:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1433:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1433:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1432:18:9"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1521:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1513:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1244,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1545:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1537:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1567:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1561:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1248,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1561:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1498:81:9"
									},
									"scope": 1262,
									"src": "1409:891:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1263,
							"src": "61:2242:9",
							"usedErrors": []
						}
					],
					"src": "33:2270:9"
				},
				"id": 9
			},
			"erc721a/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							1471
						]
					},
					"id": 1472,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1265,
								"nodeType": "StructuredDocumentation",
								"src": "109:59:10",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 1471,
							"linearizedBaseContracts": [
								1471
							],
							"name": "IERC721A",
							"nameLocation": "179:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "194:76:10",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1268,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "281:33:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:2:10"
									},
									"src": "275:42:10"
								},
								{
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "323:44:10",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1271,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "378:32:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:10"
									},
									"src": "372:41:10"
								},
								{
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "419:66:10",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 1274,
									"name": "ApproveToCaller",
									"nameLocation": "496:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:10"
									},
									"src": "490:24:10"
								},
								{
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "520:65:10",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1277,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "596:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:2:10"
									},
									"src": "590:35:10"
								},
								{
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "631:51:10",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1280,
									"name": "MintToZeroAddress",
									"nameLocation": "693:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:2:10"
									},
									"src": "687:26:10"
								},
								{
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "719:72:10",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1283,
									"name": "MintZeroQuantity",
									"nameLocation": "802:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:2:10"
									},
									"src": "796:25:10"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "827:44:10",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1286,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "882:29:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:2:10"
									},
									"src": "876:38:10"
								},
								{
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "920:76:10",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1289,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1007:33:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:10"
									},
									"src": "1001:42:10"
								},
								{
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "1049:53:10",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1292,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1113:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:2:10"
									},
									"src": "1107:35:10"
								},
								{
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "1148:109:10",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1295,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1268:38:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:10"
									},
									"src": "1262:47:10"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "1315:55:10",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1298,
									"name": "TransferToZeroAddress",
									"nameLocation": "1381:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:2:10"
									},
									"src": "1375:30:10"
								},
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "1411:44:10",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1301,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1466:27:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:2:10"
									},
									"src": "1460:36:10"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "1502:79:10",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 1304,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1592:31:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1623:2:10"
									},
									"src": "1586:40:10"
								},
								{
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "1632:83:10",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 1307,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1726:35:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1761:2:10"
									},
									"src": "1720:44:10"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1316,
									"members": [
										{
											"constant": false,
											"id": 1309,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1847:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 1316,
											"src": "1839:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1308,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1839:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1311,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1960:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1316,
											"src": "1953:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1310,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1953:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1313,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2035:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1316,
											"src": "2030:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1312,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2030:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1315,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2150:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1316,
											"src": "2143:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1314,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2143:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1777:14:10",
									"nodeType": "StructDefinition",
									"scope": 1471,
									"src": "1770:396:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "2172:193:10",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2379:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:2:10"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "2416:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2416:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:9:10"
									},
									"scope": 1471,
									"src": "2370:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "2534:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2888:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2913:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2906:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1324,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2906:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:20:10"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2949:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2949:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:6:10"
									},
									"scope": 1471,
									"src": "2879:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "3064:88:10",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1339,
									"name": "Transfer",
									"nameLocation": "3163:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3188:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3172:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3210:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3194:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3230:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3214:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:67:10"
									},
									"src": "3157:82:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "3245:94:10",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1348,
									"name": "Approval",
									"nameLocation": "3350:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3375:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "3359:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3398:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "3382:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3424:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "3408:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:74:10"
									},
									"src": "3344:89:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "3439:117:10",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1357,
									"name": "ApprovalForAll",
									"nameLocation": "3567:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3598:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "3582:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3621:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "3605:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3605:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3636:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "3631:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3631:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:64:10"
									},
									"src": "3561:85:10"
								},
								{
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "3652:76:10",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3742:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3760:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "3752:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:15:10"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3798:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "3790:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:17:10"
									},
									"scope": 1471,
									"src": "3733:74:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "3813:131:10",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3958:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3974:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3966:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3965:17:10"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "4006:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:15:10"
									},
									"scope": 1471,
									"src": "3949:72:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "4027:556:10",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4597:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4631:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "4623:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4653:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "4645:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4673:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "4665:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4705:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "4690:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4690:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4613:102:10"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4724:0:10"
									},
									"scope": 1471,
									"src": "4588:137:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "4731:690:10",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5435:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5469:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "5461:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5461:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5491:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "5483:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5511:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "5503:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5503:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5451:73:10"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5533:0:10"
									},
									"scope": 1471,
									"src": "5426:108:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "5540:504:10",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6058:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6088:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "6080:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6080:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6110:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "6102:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6102:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6130:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "6122:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6122:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6070:73:10"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6152:0:10"
									},
									"scope": 1471,
									"src": "6049:104:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "6159:452:10",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6625:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6641:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "6633:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6633:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6653:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "6645:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6645:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6632:29:10"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6670:0:10"
									},
									"scope": 1471,
									"src": "6616:55:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "6677:309:10",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7000:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7026:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "7018:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7018:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7041:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "7036:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7036:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7017:34:10"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7060:0:10"
									},
									"scope": 1471,
									"src": "6991:70:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "7067:139:10",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7220:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7240:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "7232:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7231:17:10"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7280:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "7272:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:18:10"
									},
									"scope": 1471,
									"src": "7211:79:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "7296:138:10",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7448:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7473:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "7465:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7465:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7488:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "7480:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7480:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7464:33:10"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "7521:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1436,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7521:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7520:6:10"
									},
									"scope": 1471,
									"src": "7439:88:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "7640:58:10",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7712:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7716:2:10"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "7742:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1442,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7742:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7741:15:10"
									},
									"scope": 1471,
									"src": "7703:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "7763:60:10",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7837:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7843:2:10"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "7869:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7869:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7868:15:10"
									},
									"scope": 1471,
									"src": "7828:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "7890:90:10",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "7994:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8011:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "8003:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8003:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8002:17:10"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "8043:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8043:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8042:15:10"
									},
									"scope": 1471,
									"src": "7985:73:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "8168:203:10",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n as defined in the ERC2309 standard. See `_mintERC2309` for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 1470,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8382:19:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8418:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "8402:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8439:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "8431:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8431:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8466:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "8450:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8450:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8488:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "8472:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8472:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8401:90:10"
									},
									"src": "8376:116:10"
								}
							],
							"scope": 1472,
							"src": "169:8325:10",
							"usedErrors": [
								1268,
								1271,
								1274,
								1277,
								1280,
								1283,
								1286,
								1289,
								1292,
								1295,
								1298,
								1301,
								1304,
								1307
							]
						}
					],
					"src": "84:8411:10"
				},
				"id": 10
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/IERC721ABurnable.sol",
					"exportedSymbols": {
						"IERC721A": [
							1471
						],
						"IERC721ABurnable": [
							1484
						]
					},
					"id": 1485,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1473,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:11"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 1474,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1485,
							"sourceUnit": 1472,
							"src": "109:25:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1476,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1471,
										"src": "234:8:11"
									},
									"id": 1477,
									"nodeType": "InheritanceSpecifier",
									"src": "234:8:11"
								}
							],
							"canonicalName": "IERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1475,
								"nodeType": "StructuredDocumentation",
								"src": "136:67:11",
								"text": " @dev Interface of an ERC721ABurnable compliant contract."
							},
							"fullyImplemented": false,
							"id": 1484,
							"linearizedBaseContracts": [
								1484,
								1471
							],
							"name": "IERC721ABurnable",
							"nameLocation": "214:16:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "249:163:11",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "426:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "439:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "431:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:17:11"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:0:11"
									},
									"scope": 1484,
									"src": "417:40:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1485,
							"src": "204:255:11",
							"usedErrors": [
								1268,
								1271,
								1274,
								1277,
								1280,
								1283,
								1286,
								1289,
								1292,
								1295,
								1298,
								1301,
								1304,
								1307
							]
						}
					],
					"src": "84:376:11"
				},
				"id": 11
			},
			"erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/IERC721AQueryable.sol",
					"exportedSymbols": {
						"IERC721A": [
							1471
						],
						"IERC721AQueryable": [
							1536
						]
					},
					"id": 1537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1486,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:12"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 1487,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1537,
							"sourceUnit": 1472,
							"src": "109:25:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1489,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1471,
										"src": "236:8:12"
									},
									"id": 1490,
									"nodeType": "InheritanceSpecifier",
									"src": "236:8:12"
								}
							],
							"canonicalName": "IERC721AQueryable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1488,
								"nodeType": "StructuredDocumentation",
								"src": "136:68:12",
								"text": " @dev Interface of an ERC721AQueryable compliant contract."
							},
							"fullyImplemented": false,
							"id": 1536,
							"linearizedBaseContracts": [
								1536,
								1471
							],
							"name": "IERC721AQueryable",
							"nameLocation": "215:17:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "251:59:12",
										"text": " Invalid query range (`start` >= `stop`)."
									},
									"errorSelector": "32c1995a",
									"id": 1493,
									"name": "InvalidQueryRange",
									"nameLocation": "321:17:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:2:12"
									},
									"src": "315:26:12"
								},
								{
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "347:599:12",
										"text": " @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n If the `tokenId` is out of bounds:\n   - `addr` = `address(0)`\n   - `startTimestamp` = `0`\n   - `burned` = `false`\n If the `tokenId` is burned:\n   - `addr` = `<Address of owner before token was burned>`\n   - `startTimestamp` = `<Timestamp when token was burned>`\n   - `burned = `true`\n Otherwise:\n   - `addr` = `<Address of owner>`\n   - `startTimestamp` = `<Timestamp of start of ownership>`\n   - `burned = `false`"
									},
									"functionSelector": "c23dc68f",
									"id": 1502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipOf",
									"nameLocation": "960:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "988:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "980:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:17:12"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "1020:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1316_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1499,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1498,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1316,
														"src": "1020:14:12"
													},
													"referencedDeclaration": 1316,
													"src": "1020:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1316_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:23:12"
									},
									"scope": 1536,
									"src": "951:92:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "1049:142:12",
										"text": " @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n See {ERC721AQueryable-explicitOwnershipOf}"
									},
									"functionSelector": "5bbb2177",
									"id": 1513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipsOf",
									"nameLocation": "1205:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1243:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1226:25:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1504,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1226:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1505,
													"nodeType": "ArrayTypeName",
													"src": "1226:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:27:12"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1276:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1316_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership[]"
												},
												"typeName": {
													"baseType": {
														"id": 1509,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1508,
															"name": "TokenOwnership",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1316,
															"src": "1276:14:12"
														},
														"referencedDeclaration": 1316,
														"src": "1276:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1316_storage_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														}
													},
													"id": 1510,
													"nodeType": "ArrayTypeName",
													"src": "1276:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1316_storage_$dyn_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:25:12"
									},
									"scope": 1536,
									"src": "1196:105:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "1307:365:12",
										"text": " @dev Returns an array of token IDs owned by `owner`,\n in the range [`start`, `stop`)\n (i.e. `start <= tokenId < stop`).\n This function allows for tokens to be queried if the collection\n grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n Requirements:\n - `start` < `stop`"
									},
									"functionSelector": "99a2557a",
									"id": 1526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwnerIn",
									"nameLocation": "1686:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1719:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1711:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1742:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1734:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1734:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "stop",
												"nameLocation": "1765:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1757:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:74:12"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1799:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1522,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1799:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1523,
													"nodeType": "ArrayTypeName",
													"src": "1799:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:18:12"
									},
									"scope": 1536,
									"src": "1677:140:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "1823:426:12",
										"text": " @dev Returns an array of token IDs owned by `owner`.\n This function scans the ownership mapping and is O(totalSupply) in complexity.\n It is meant to be called off-chain.\n See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n multiple smaller scans if the collection is large enough to cause\n an out-of-gas error (10K pfp collections should be fine)."
									},
									"functionSelector": "8462151c",
									"id": 1535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwner",
									"nameLocation": "2263:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2285:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2277:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2276:15:12"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2315:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1531,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2315:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1532,
													"nodeType": "ArrayTypeName",
													"src": "2315:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2314:18:12"
									},
									"scope": 1536,
									"src": "2254:79:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1537,
							"src": "205:2130:12",
							"usedErrors": [
								1268,
								1271,
								1274,
								1277,
								1280,
								1283,
								1286,
								1289,
								1292,
								1295,
								1298,
								1301,
								1304,
								1307,
								1493
							]
						}
					],
					"src": "84:2252:12"
				},
				"id": 12
			}
		}
	}
}